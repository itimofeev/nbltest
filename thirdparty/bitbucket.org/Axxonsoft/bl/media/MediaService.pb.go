// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/media/MediaService.proto

package media // import "bitbucket.org/Axxonsoft/bl/media"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MediaRequest struct {
	Count uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	// accepted only on initial request, subsequent values ignored
	Endpoint *EndpointRef               `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
	Qos      []*QualityOfServiceRequest `protobuf:"bytes,3,rep,name=qos" json:"qos,omitempty"`
	// During initial request client can propose channel idle timeout,
	// server is responsible to respond with StreamConfig message
	// that contains actual channel timeout.
	// To keep channel alive peers need to keep sending packets when
	// channel is idle:
	//      * client sends empty MediaRequest message
	//      * server sends special HeartBeat message
	ProposedChannelIdleMs int32    `protobuf:"varint,16,opt,name=proposed_channel_idle_ms,json=proposedChannelIdleMs" json:"proposed_channel_idle_ms,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MediaRequest) Reset()         { *m = MediaRequest{} }
func (m *MediaRequest) String() string { return proto.CompactTextString(m) }
func (*MediaRequest) ProtoMessage()    {}
func (*MediaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{0}
}
func (m *MediaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaRequest.Unmarshal(m, b)
}
func (m *MediaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaRequest.Marshal(b, m, deterministic)
}
func (dst *MediaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaRequest.Merge(dst, src)
}
func (m *MediaRequest) XXX_Size() int {
	return xxx_messageInfo_MediaRequest.Size(m)
}
func (m *MediaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MediaRequest proto.InternalMessageInfo

func (m *MediaRequest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MediaRequest) GetEndpoint() *EndpointRef {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *MediaRequest) GetQos() []*QualityOfServiceRequest {
	if m != nil {
		return m.Qos
	}
	return nil
}

func (m *MediaRequest) GetProposedChannelIdleMs() int32 {
	if m != nil {
		return m.ProposedChannelIdleMs
	}
	return 0
}

type StreamConfig struct {
	// see MediaRequest.proposed_channel_idle_ms for more info.
	MaxChannelIdleMs     int32    `protobuf:"varint,1,opt,name=max_channel_idle_ms,json=maxChannelIdleMs" json:"max_channel_idle_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamConfig) Reset()         { *m = StreamConfig{} }
func (m *StreamConfig) String() string { return proto.CompactTextString(m) }
func (*StreamConfig) ProtoMessage()    {}
func (*StreamConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{1}
}
func (m *StreamConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamConfig.Unmarshal(m, b)
}
func (m *StreamConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamConfig.Marshal(b, m, deterministic)
}
func (dst *StreamConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamConfig.Merge(dst, src)
}
func (m *StreamConfig) XXX_Size() int {
	return xxx_messageInfo_StreamConfig.Size(m)
}
func (m *StreamConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StreamConfig proto.InternalMessageInfo

func (m *StreamConfig) GetMaxChannelIdleMs() int32 {
	if m != nil {
		return m.MaxChannelIdleMs
	}
	return 0
}

type MediaSample struct {
	// Types that are valid to be assigned to Data:
	//	*MediaSample_Body_
	//	*MediaSample_Heartbeat
	//	*MediaSample_ConfigUpdate
	Data                 isMediaSample_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MediaSample) Reset()         { *m = MediaSample{} }
func (m *MediaSample) String() string { return proto.CompactTextString(m) }
func (*MediaSample) ProtoMessage()    {}
func (*MediaSample) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{2}
}
func (m *MediaSample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaSample.Unmarshal(m, b)
}
func (m *MediaSample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaSample.Marshal(b, m, deterministic)
}
func (dst *MediaSample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaSample.Merge(dst, src)
}
func (m *MediaSample) XXX_Size() int {
	return xxx_messageInfo_MediaSample.Size(m)
}
func (m *MediaSample) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaSample.DiscardUnknown(m)
}

var xxx_messageInfo_MediaSample proto.InternalMessageInfo

type isMediaSample_Data interface {
	isMediaSample_Data()
}

type MediaSample_Body_ struct {
	Body *MediaSample_Body `protobuf:"bytes,1,opt,name=body,oneof"`
}
type MediaSample_Heartbeat struct {
	Heartbeat *MediaSample_HeartBeat `protobuf:"bytes,2,opt,name=heartbeat,oneof"`
}
type MediaSample_ConfigUpdate struct {
	ConfigUpdate *StreamConfig `protobuf:"bytes,16,opt,name=config_update,json=configUpdate,oneof"`
}

func (*MediaSample_Body_) isMediaSample_Data()        {}
func (*MediaSample_Heartbeat) isMediaSample_Data()    {}
func (*MediaSample_ConfigUpdate) isMediaSample_Data() {}

func (m *MediaSample) GetData() isMediaSample_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MediaSample) GetBody() *MediaSample_Body {
	if x, ok := m.GetData().(*MediaSample_Body_); ok {
		return x.Body
	}
	return nil
}

func (m *MediaSample) GetHeartbeat() *MediaSample_HeartBeat {
	if x, ok := m.GetData().(*MediaSample_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *MediaSample) GetConfigUpdate() *StreamConfig {
	if x, ok := m.GetData().(*MediaSample_ConfigUpdate); ok {
		return x.ConfigUpdate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MediaSample) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MediaSample_OneofMarshaler, _MediaSample_OneofUnmarshaler, _MediaSample_OneofSizer, []interface{}{
		(*MediaSample_Body_)(nil),
		(*MediaSample_Heartbeat)(nil),
		(*MediaSample_ConfigUpdate)(nil),
	}
}

func _MediaSample_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MediaSample)
	// data
	switch x := m.Data.(type) {
	case *MediaSample_Body_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Body); err != nil {
			return err
		}
	case *MediaSample_Heartbeat:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Heartbeat); err != nil {
			return err
		}
	case *MediaSample_ConfigUpdate:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfigUpdate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MediaSample.Data has unexpected type %T", x)
	}
	return nil
}

func _MediaSample_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MediaSample)
	switch tag {
	case 1: // data.body
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MediaSample_Body)
		err := b.DecodeMessage(msg)
		m.Data = &MediaSample_Body_{msg}
		return true, err
	case 2: // data.heartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MediaSample_HeartBeat)
		err := b.DecodeMessage(msg)
		m.Data = &MediaSample_Heartbeat{msg}
		return true, err
	case 16: // data.config_update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamConfig)
		err := b.DecodeMessage(msg)
		m.Data = &MediaSample_ConfigUpdate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MediaSample_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MediaSample)
	// data
	switch x := m.Data.(type) {
	case *MediaSample_Body_:
		s := proto.Size(x.Body)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MediaSample_Heartbeat:
		s := proto.Size(x.Heartbeat)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MediaSample_ConfigUpdate:
		s := proto.Size(x.ConfigUpdate)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MediaSample_Body struct {
	// TODO: grpc handles 4mb per packet max
	// split media samples to multiple packets.
	Body                 []byte   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediaSample_Body) Reset()         { *m = MediaSample_Body{} }
func (m *MediaSample_Body) String() string { return proto.CompactTextString(m) }
func (*MediaSample_Body) ProtoMessage()    {}
func (*MediaSample_Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{2, 0}
}
func (m *MediaSample_Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaSample_Body.Unmarshal(m, b)
}
func (m *MediaSample_Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaSample_Body.Marshal(b, m, deterministic)
}
func (dst *MediaSample_Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaSample_Body.Merge(dst, src)
}
func (m *MediaSample_Body) XXX_Size() int {
	return xxx_messageInfo_MediaSample_Body.Size(m)
}
func (m *MediaSample_Body) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaSample_Body.DiscardUnknown(m)
}

var xxx_messageInfo_MediaSample_Body proto.InternalMessageInfo

func (m *MediaSample_Body) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type MediaSample_HeartBeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediaSample_HeartBeat) Reset()         { *m = MediaSample_HeartBeat{} }
func (m *MediaSample_HeartBeat) String() string { return proto.CompactTextString(m) }
func (*MediaSample_HeartBeat) ProtoMessage()    {}
func (*MediaSample_HeartBeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{2, 1}
}
func (m *MediaSample_HeartBeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaSample_HeartBeat.Unmarshal(m, b)
}
func (m *MediaSample_HeartBeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaSample_HeartBeat.Marshal(b, m, deterministic)
}
func (dst *MediaSample_HeartBeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaSample_HeartBeat.Merge(dst, src)
}
func (m *MediaSample_HeartBeat) XXX_Size() int {
	return xxx_messageInfo_MediaSample_HeartBeat.Size(m)
}
func (m *MediaSample_HeartBeat) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaSample_HeartBeat.DiscardUnknown(m)
}

var xxx_messageInfo_MediaSample_HeartBeat proto.InternalMessageInfo

type RequestConnectionData struct {
	Pid                  uint32                     `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	HostId               string                     `protobuf:"bytes,2,opt,name=host_id,json=hostId" json:"host_id,omitempty"`
	TransportPreferences []ENetworkTransport        `protobuf:"varint,3,rep,packed,name=transport_preferences,json=transportPreferences,enum=axxonsoft.bl.media.ENetworkTransport" json:"transport_preferences,omitempty"`
	Qos                  []*QualityOfServiceRequest `protobuf:"bytes,4,rep,name=qos" json:"qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RequestConnectionData) Reset()         { *m = RequestConnectionData{} }
func (m *RequestConnectionData) String() string { return proto.CompactTextString(m) }
func (*RequestConnectionData) ProtoMessage()    {}
func (*RequestConnectionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{3}
}
func (m *RequestConnectionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestConnectionData.Unmarshal(m, b)
}
func (m *RequestConnectionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestConnectionData.Marshal(b, m, deterministic)
}
func (dst *RequestConnectionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestConnectionData.Merge(dst, src)
}
func (m *RequestConnectionData) XXX_Size() int {
	return xxx_messageInfo_RequestConnectionData.Size(m)
}
func (m *RequestConnectionData) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestConnectionData.DiscardUnknown(m)
}

var xxx_messageInfo_RequestConnectionData proto.InternalMessageInfo

func (m *RequestConnectionData) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *RequestConnectionData) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *RequestConnectionData) GetTransportPreferences() []ENetworkTransport {
	if m != nil {
		return m.TransportPreferences
	}
	return nil
}

func (m *RequestConnectionData) GetQos() []*QualityOfServiceRequest {
	if m != nil {
		return m.Qos
	}
	return nil
}

type RequestConnectionRequest struct {
	// end-client process ID
	Endpoint             *EndpointRef           `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Data                 *RequestConnectionData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RequestConnectionRequest) Reset()         { *m = RequestConnectionRequest{} }
func (m *RequestConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*RequestConnectionRequest) ProtoMessage()    {}
func (*RequestConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{4}
}
func (m *RequestConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestConnectionRequest.Unmarshal(m, b)
}
func (m *RequestConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestConnectionRequest.Marshal(b, m, deterministic)
}
func (dst *RequestConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestConnectionRequest.Merge(dst, src)
}
func (m *RequestConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_RequestConnectionRequest.Size(m)
}
func (m *RequestConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestConnectionRequest proto.InternalMessageInfo

func (m *RequestConnectionRequest) GetEndpoint() *EndpointRef {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *RequestConnectionRequest) GetData() *RequestConnectionData {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestConnectionResponse struct {
	Cookie               string          `protobuf:"bytes,1,opt,name=cookie" json:"cookie,omitempty"`
	ConnectionInfo       *ConnectionInfo `protobuf:"bytes,2,opt,name=connection_info,json=connectionInfo" json:"connection_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RequestConnectionResponse) Reset()         { *m = RequestConnectionResponse{} }
func (m *RequestConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*RequestConnectionResponse) ProtoMessage()    {}
func (*RequestConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{5}
}
func (m *RequestConnectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestConnectionResponse.Unmarshal(m, b)
}
func (m *RequestConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestConnectionResponse.Marshal(b, m, deterministic)
}
func (dst *RequestConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestConnectionResponse.Merge(dst, src)
}
func (m *RequestConnectionResponse) XXX_Size() int {
	return xxx_messageInfo_RequestConnectionResponse.Size(m)
}
func (m *RequestConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestConnectionResponse proto.InternalMessageInfo

func (m *RequestConnectionResponse) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *RequestConnectionResponse) GetConnectionInfo() *ConnectionInfo {
	if m != nil {
		return m.ConnectionInfo
	}
	return nil
}

type RequestQoSRequest struct {
	Endpoint             *EndpointRef               `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Cookie               string                     `protobuf:"bytes,2,opt,name=cookie" json:"cookie,omitempty"`
	Qos                  []*QualityOfServiceRequest `protobuf:"bytes,3,rep,name=qos" json:"qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RequestQoSRequest) Reset()         { *m = RequestQoSRequest{} }
func (m *RequestQoSRequest) String() string { return proto.CompactTextString(m) }
func (*RequestQoSRequest) ProtoMessage()    {}
func (*RequestQoSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{6}
}
func (m *RequestQoSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestQoSRequest.Unmarshal(m, b)
}
func (m *RequestQoSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestQoSRequest.Marshal(b, m, deterministic)
}
func (dst *RequestQoSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestQoSRequest.Merge(dst, src)
}
func (m *RequestQoSRequest) XXX_Size() int {
	return xxx_messageInfo_RequestQoSRequest.Size(m)
}
func (m *RequestQoSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestQoSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestQoSRequest proto.InternalMessageInfo

func (m *RequestQoSRequest) GetEndpoint() *EndpointRef {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *RequestQoSRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *RequestQoSRequest) GetQos() []*QualityOfServiceRequest {
	if m != nil {
		return m.Qos
	}
	return nil
}

type RequestQoSResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestQoSResponse) Reset()         { *m = RequestQoSResponse{} }
func (m *RequestQoSResponse) String() string { return proto.CompactTextString(m) }
func (*RequestQoSResponse) ProtoMessage()    {}
func (*RequestQoSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{7}
}
func (m *RequestQoSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestQoSResponse.Unmarshal(m, b)
}
func (m *RequestQoSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestQoSResponse.Marshal(b, m, deterministic)
}
func (dst *RequestQoSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestQoSResponse.Merge(dst, src)
}
func (m *RequestQoSResponse) XXX_Size() int {
	return xxx_messageInfo_RequestQoSResponse.Size(m)
}
func (m *RequestQoSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestQoSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestQoSResponse proto.InternalMessageInfo

type AwaitConnectionRequest struct {
	// Types that are valid to be assigned to Data:
	//	*AwaitConnectionRequest_InitReq
	//	*AwaitConnectionRequest_ConnectionResp
	Data                 isAwaitConnectionRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AwaitConnectionRequest) Reset()         { *m = AwaitConnectionRequest{} }
func (m *AwaitConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*AwaitConnectionRequest) ProtoMessage()    {}
func (*AwaitConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{8}
}
func (m *AwaitConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwaitConnectionRequest.Unmarshal(m, b)
}
func (m *AwaitConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwaitConnectionRequest.Marshal(b, m, deterministic)
}
func (dst *AwaitConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwaitConnectionRequest.Merge(dst, src)
}
func (m *AwaitConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_AwaitConnectionRequest.Size(m)
}
func (m *AwaitConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AwaitConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AwaitConnectionRequest proto.InternalMessageInfo

type isAwaitConnectionRequest_Data interface {
	isAwaitConnectionRequest_Data()
}

type AwaitConnectionRequest_InitReq struct {
	InitReq *AwaitConnectionRequest_Init `protobuf:"bytes,1,opt,name=init_req,json=initReq,oneof"`
}
type AwaitConnectionRequest_ConnectionResp struct {
	ConnectionResp *RequestConnectionResponse `protobuf:"bytes,2,opt,name=connection_resp,json=connectionResp,oneof"`
}

func (*AwaitConnectionRequest_InitReq) isAwaitConnectionRequest_Data()        {}
func (*AwaitConnectionRequest_ConnectionResp) isAwaitConnectionRequest_Data() {}

func (m *AwaitConnectionRequest) GetData() isAwaitConnectionRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AwaitConnectionRequest) GetInitReq() *AwaitConnectionRequest_Init {
	if x, ok := m.GetData().(*AwaitConnectionRequest_InitReq); ok {
		return x.InitReq
	}
	return nil
}

func (m *AwaitConnectionRequest) GetConnectionResp() *RequestConnectionResponse {
	if x, ok := m.GetData().(*AwaitConnectionRequest_ConnectionResp); ok {
		return x.ConnectionResp
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AwaitConnectionRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AwaitConnectionRequest_OneofMarshaler, _AwaitConnectionRequest_OneofUnmarshaler, _AwaitConnectionRequest_OneofSizer, []interface{}{
		(*AwaitConnectionRequest_InitReq)(nil),
		(*AwaitConnectionRequest_ConnectionResp)(nil),
	}
}

func _AwaitConnectionRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AwaitConnectionRequest)
	// data
	switch x := m.Data.(type) {
	case *AwaitConnectionRequest_InitReq:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InitReq); err != nil {
			return err
		}
	case *AwaitConnectionRequest_ConnectionResp:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConnectionResp); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AwaitConnectionRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _AwaitConnectionRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AwaitConnectionRequest)
	switch tag {
	case 1: // data.init_req
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AwaitConnectionRequest_Init)
		err := b.DecodeMessage(msg)
		m.Data = &AwaitConnectionRequest_InitReq{msg}
		return true, err
	case 2: // data.connection_resp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestConnectionResponse)
		err := b.DecodeMessage(msg)
		m.Data = &AwaitConnectionRequest_ConnectionResp{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AwaitConnectionRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AwaitConnectionRequest)
	// data
	switch x := m.Data.(type) {
	case *AwaitConnectionRequest_InitReq:
		s := proto.Size(x.InitReq)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AwaitConnectionRequest_ConnectionResp:
		s := proto.Size(x.ConnectionResp)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AwaitConnectionRequest_Init struct {
	Endpoint              *EndpointRef `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Priority              int32        `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	ProposedChannelIdleMs int32        `protobuf:"varint,16,opt,name=proposed_channel_idle_ms,json=proposedChannelIdleMs" json:"proposed_channel_idle_ms,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}     `json:"-"`
	XXX_unrecognized      []byte       `json:"-"`
	XXX_sizecache         int32        `json:"-"`
}

func (m *AwaitConnectionRequest_Init) Reset()         { *m = AwaitConnectionRequest_Init{} }
func (m *AwaitConnectionRequest_Init) String() string { return proto.CompactTextString(m) }
func (*AwaitConnectionRequest_Init) ProtoMessage()    {}
func (*AwaitConnectionRequest_Init) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{8, 0}
}
func (m *AwaitConnectionRequest_Init) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwaitConnectionRequest_Init.Unmarshal(m, b)
}
func (m *AwaitConnectionRequest_Init) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwaitConnectionRequest_Init.Marshal(b, m, deterministic)
}
func (dst *AwaitConnectionRequest_Init) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwaitConnectionRequest_Init.Merge(dst, src)
}
func (m *AwaitConnectionRequest_Init) XXX_Size() int {
	return xxx_messageInfo_AwaitConnectionRequest_Init.Size(m)
}
func (m *AwaitConnectionRequest_Init) XXX_DiscardUnknown() {
	xxx_messageInfo_AwaitConnectionRequest_Init.DiscardUnknown(m)
}

var xxx_messageInfo_AwaitConnectionRequest_Init proto.InternalMessageInfo

func (m *AwaitConnectionRequest_Init) GetEndpoint() *EndpointRef {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *AwaitConnectionRequest_Init) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *AwaitConnectionRequest_Init) GetProposedChannelIdleMs() int32 {
	if m != nil {
		return m.ProposedChannelIdleMs
	}
	return 0
}

type AwaitConnectionResponse struct {
	// Types that are valid to be assigned to Data:
	//	*AwaitConnectionResponse_RequestConnection
	//	*AwaitConnectionResponse_RequestQos
	//	*AwaitConnectionResponse_ConfigUpdate
	Data                 isAwaitConnectionResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AwaitConnectionResponse) Reset()         { *m = AwaitConnectionResponse{} }
func (m *AwaitConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*AwaitConnectionResponse) ProtoMessage()    {}
func (*AwaitConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{9}
}
func (m *AwaitConnectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwaitConnectionResponse.Unmarshal(m, b)
}
func (m *AwaitConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwaitConnectionResponse.Marshal(b, m, deterministic)
}
func (dst *AwaitConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwaitConnectionResponse.Merge(dst, src)
}
func (m *AwaitConnectionResponse) XXX_Size() int {
	return xxx_messageInfo_AwaitConnectionResponse.Size(m)
}
func (m *AwaitConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AwaitConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AwaitConnectionResponse proto.InternalMessageInfo

type isAwaitConnectionResponse_Data interface {
	isAwaitConnectionResponse_Data()
}

type AwaitConnectionResponse_RequestConnection struct {
	RequestConnection *RequestConnectionData `protobuf:"bytes,1,opt,name=request_connection,json=requestConnection,oneof"`
}
type AwaitConnectionResponse_RequestQos struct {
	RequestQos *AwaitConnectionResponse_RequestQoS `protobuf:"bytes,2,opt,name=request_qos,json=requestQos,oneof"`
}
type AwaitConnectionResponse_ConfigUpdate struct {
	ConfigUpdate *StreamConfig `protobuf:"bytes,16,opt,name=config_update,json=configUpdate,oneof"`
}

func (*AwaitConnectionResponse_RequestConnection) isAwaitConnectionResponse_Data() {}
func (*AwaitConnectionResponse_RequestQos) isAwaitConnectionResponse_Data()        {}
func (*AwaitConnectionResponse_ConfigUpdate) isAwaitConnectionResponse_Data()      {}

func (m *AwaitConnectionResponse) GetData() isAwaitConnectionResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AwaitConnectionResponse) GetRequestConnection() *RequestConnectionData {
	if x, ok := m.GetData().(*AwaitConnectionResponse_RequestConnection); ok {
		return x.RequestConnection
	}
	return nil
}

func (m *AwaitConnectionResponse) GetRequestQos() *AwaitConnectionResponse_RequestQoS {
	if x, ok := m.GetData().(*AwaitConnectionResponse_RequestQos); ok {
		return x.RequestQos
	}
	return nil
}

func (m *AwaitConnectionResponse) GetConfigUpdate() *StreamConfig {
	if x, ok := m.GetData().(*AwaitConnectionResponse_ConfigUpdate); ok {
		return x.ConfigUpdate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AwaitConnectionResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AwaitConnectionResponse_OneofMarshaler, _AwaitConnectionResponse_OneofUnmarshaler, _AwaitConnectionResponse_OneofSizer, []interface{}{
		(*AwaitConnectionResponse_RequestConnection)(nil),
		(*AwaitConnectionResponse_RequestQos)(nil),
		(*AwaitConnectionResponse_ConfigUpdate)(nil),
	}
}

func _AwaitConnectionResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AwaitConnectionResponse)
	// data
	switch x := m.Data.(type) {
	case *AwaitConnectionResponse_RequestConnection:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestConnection); err != nil {
			return err
		}
	case *AwaitConnectionResponse_RequestQos:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestQos); err != nil {
			return err
		}
	case *AwaitConnectionResponse_ConfigUpdate:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfigUpdate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AwaitConnectionResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _AwaitConnectionResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AwaitConnectionResponse)
	switch tag {
	case 1: // data.request_connection
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestConnectionData)
		err := b.DecodeMessage(msg)
		m.Data = &AwaitConnectionResponse_RequestConnection{msg}
		return true, err
	case 2: // data.request_qos
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AwaitConnectionResponse_RequestQoS)
		err := b.DecodeMessage(msg)
		m.Data = &AwaitConnectionResponse_RequestQos{msg}
		return true, err
	case 16: // data.config_update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamConfig)
		err := b.DecodeMessage(msg)
		m.Data = &AwaitConnectionResponse_ConfigUpdate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AwaitConnectionResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AwaitConnectionResponse)
	// data
	switch x := m.Data.(type) {
	case *AwaitConnectionResponse_RequestConnection:
		s := proto.Size(x.RequestConnection)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AwaitConnectionResponse_RequestQos:
		s := proto.Size(x.RequestQos)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AwaitConnectionResponse_ConfigUpdate:
		s := proto.Size(x.ConfigUpdate)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AwaitConnectionResponse_RequestQoS struct {
	Qos                  []*QualityOfServiceRequest `protobuf:"bytes,1,rep,name=qos" json:"qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AwaitConnectionResponse_RequestQoS) Reset()         { *m = AwaitConnectionResponse_RequestQoS{} }
func (m *AwaitConnectionResponse_RequestQoS) String() string { return proto.CompactTextString(m) }
func (*AwaitConnectionResponse_RequestQoS) ProtoMessage()    {}
func (*AwaitConnectionResponse_RequestQoS) Descriptor() ([]byte, []int) {
	return fileDescriptor_MediaService_5a99c0457b6aa8a8, []int{9, 0}
}
func (m *AwaitConnectionResponse_RequestQoS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwaitConnectionResponse_RequestQoS.Unmarshal(m, b)
}
func (m *AwaitConnectionResponse_RequestQoS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwaitConnectionResponse_RequestQoS.Marshal(b, m, deterministic)
}
func (dst *AwaitConnectionResponse_RequestQoS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwaitConnectionResponse_RequestQoS.Merge(dst, src)
}
func (m *AwaitConnectionResponse_RequestQoS) XXX_Size() int {
	return xxx_messageInfo_AwaitConnectionResponse_RequestQoS.Size(m)
}
func (m *AwaitConnectionResponse_RequestQoS) XXX_DiscardUnknown() {
	xxx_messageInfo_AwaitConnectionResponse_RequestQoS.DiscardUnknown(m)
}

var xxx_messageInfo_AwaitConnectionResponse_RequestQoS proto.InternalMessageInfo

func (m *AwaitConnectionResponse_RequestQoS) GetQos() []*QualityOfServiceRequest {
	if m != nil {
		return m.Qos
	}
	return nil
}

func init() {
	proto.RegisterType((*MediaRequest)(nil), "axxonsoft.bl.media.MediaRequest")
	proto.RegisterType((*StreamConfig)(nil), "axxonsoft.bl.media.StreamConfig")
	proto.RegisterType((*MediaSample)(nil), "axxonsoft.bl.media.MediaSample")
	proto.RegisterType((*MediaSample_Body)(nil), "axxonsoft.bl.media.MediaSample.Body")
	proto.RegisterType((*MediaSample_HeartBeat)(nil), "axxonsoft.bl.media.MediaSample.HeartBeat")
	proto.RegisterType((*RequestConnectionData)(nil), "axxonsoft.bl.media.RequestConnectionData")
	proto.RegisterType((*RequestConnectionRequest)(nil), "axxonsoft.bl.media.RequestConnectionRequest")
	proto.RegisterType((*RequestConnectionResponse)(nil), "axxonsoft.bl.media.RequestConnectionResponse")
	proto.RegisterType((*RequestQoSRequest)(nil), "axxonsoft.bl.media.RequestQoSRequest")
	proto.RegisterType((*RequestQoSResponse)(nil), "axxonsoft.bl.media.RequestQoSResponse")
	proto.RegisterType((*AwaitConnectionRequest)(nil), "axxonsoft.bl.media.AwaitConnectionRequest")
	proto.RegisterType((*AwaitConnectionRequest_Init)(nil), "axxonsoft.bl.media.AwaitConnectionRequest.Init")
	proto.RegisterType((*AwaitConnectionResponse)(nil), "axxonsoft.bl.media.AwaitConnectionResponse")
	proto.RegisterType((*AwaitConnectionResponse_RequestQoS)(nil), "axxonsoft.bl.media.AwaitConnectionResponse.RequestQoS")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MediaService service

type MediaServiceClient interface {
	// TODO: rename PullStream(stream PullStreamRequest) returns (stream PullStreamResponse)
	Stream(ctx context.Context, opts ...grpc.CallOption) (MediaService_StreamClient, error)
	// NGP Endpoint interface
	RequestConnection(ctx context.Context, in *RequestConnectionRequest, opts ...grpc.CallOption) (*RequestConnectionResponse, error)
	RequestQoS(ctx context.Context, in *RequestQoSRequest, opts ...grpc.CallOption) (*RequestQoSResponse, error)
	// NGP SinkEndpoint interface (SinkEndpoint.idl)
	AwaitConnection(ctx context.Context, opts ...grpc.CallOption) (MediaService_AwaitConnectionClient, error)
}

type mediaServiceClient struct {
	cc *grpc.ClientConn
}

func NewMediaServiceClient(cc *grpc.ClientConn) MediaServiceClient {
	return &mediaServiceClient{cc}
}

func (c *mediaServiceClient) Stream(ctx context.Context, opts ...grpc.CallOption) (MediaService_StreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_MediaService_serviceDesc.Streams[0], c.cc, "/axxonsoft.bl.media.MediaService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mediaServiceStreamClient{stream}
	return x, nil
}

type MediaService_StreamClient interface {
	Send(*MediaRequest) error
	Recv() (*MediaSample, error)
	grpc.ClientStream
}

type mediaServiceStreamClient struct {
	grpc.ClientStream
}

func (x *mediaServiceStreamClient) Send(m *MediaRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mediaServiceStreamClient) Recv() (*MediaSample, error) {
	m := new(MediaSample)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mediaServiceClient) RequestConnection(ctx context.Context, in *RequestConnectionRequest, opts ...grpc.CallOption) (*RequestConnectionResponse, error) {
	out := new(RequestConnectionResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.media.MediaService/RequestConnection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaServiceClient) RequestQoS(ctx context.Context, in *RequestQoSRequest, opts ...grpc.CallOption) (*RequestQoSResponse, error) {
	out := new(RequestQoSResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.media.MediaService/RequestQoS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaServiceClient) AwaitConnection(ctx context.Context, opts ...grpc.CallOption) (MediaService_AwaitConnectionClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_MediaService_serviceDesc.Streams[1], c.cc, "/axxonsoft.bl.media.MediaService/AwaitConnection", opts...)
	if err != nil {
		return nil, err
	}
	x := &mediaServiceAwaitConnectionClient{stream}
	return x, nil
}

type MediaService_AwaitConnectionClient interface {
	Send(*AwaitConnectionRequest) error
	Recv() (*AwaitConnectionResponse, error)
	grpc.ClientStream
}

type mediaServiceAwaitConnectionClient struct {
	grpc.ClientStream
}

func (x *mediaServiceAwaitConnectionClient) Send(m *AwaitConnectionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mediaServiceAwaitConnectionClient) Recv() (*AwaitConnectionResponse, error) {
	m := new(AwaitConnectionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for MediaService service

type MediaServiceServer interface {
	// TODO: rename PullStream(stream PullStreamRequest) returns (stream PullStreamResponse)
	Stream(MediaService_StreamServer) error
	// NGP Endpoint interface
	RequestConnection(context.Context, *RequestConnectionRequest) (*RequestConnectionResponse, error)
	RequestQoS(context.Context, *RequestQoSRequest) (*RequestQoSResponse, error)
	// NGP SinkEndpoint interface (SinkEndpoint.idl)
	AwaitConnection(MediaService_AwaitConnectionServer) error
}

func RegisterMediaServiceServer(s *grpc.Server, srv MediaServiceServer) {
	s.RegisterService(&_MediaService_serviceDesc, srv)
}

func _MediaService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MediaServiceServer).Stream(&mediaServiceStreamServer{stream})
}

type MediaService_StreamServer interface {
	Send(*MediaSample) error
	Recv() (*MediaRequest, error)
	grpc.ServerStream
}

type mediaServiceStreamServer struct {
	grpc.ServerStream
}

func (x *mediaServiceStreamServer) Send(m *MediaSample) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mediaServiceStreamServer) Recv() (*MediaRequest, error) {
	m := new(MediaRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MediaService_RequestConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServiceServer).RequestConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.media.MediaService/RequestConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServiceServer).RequestConnection(ctx, req.(*RequestConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MediaService_RequestQoS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestQoSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServiceServer).RequestQoS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.media.MediaService/RequestQoS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServiceServer).RequestQoS(ctx, req.(*RequestQoSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MediaService_AwaitConnection_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MediaServiceServer).AwaitConnection(&mediaServiceAwaitConnectionServer{stream})
}

type MediaService_AwaitConnectionServer interface {
	Send(*AwaitConnectionResponse) error
	Recv() (*AwaitConnectionRequest, error)
	grpc.ServerStream
}

type mediaServiceAwaitConnectionServer struct {
	grpc.ServerStream
}

func (x *mediaServiceAwaitConnectionServer) Send(m *AwaitConnectionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mediaServiceAwaitConnectionServer) Recv() (*AwaitConnectionRequest, error) {
	m := new(AwaitConnectionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MediaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.media.MediaService",
	HandlerType: (*MediaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestConnection",
			Handler:    _MediaService_RequestConnection_Handler,
		},
		{
			MethodName: "RequestQoS",
			Handler:    _MediaService_RequestQoS_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _MediaService_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "AwaitConnection",
			Handler:       _MediaService_AwaitConnection_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "axxonsoft/bl/media/MediaService.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/media/MediaService.proto", fileDescriptor_MediaService_5a99c0457b6aa8a8)
}

var fileDescriptor_MediaService_5a99c0457b6aa8a8 = []byte{
	// 837 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcf, 0x73, 0xdb, 0x44,
	0x14, 0xb6, 0x6c, 0xc7, 0x8d, 0x9f, 0xdd, 0x36, 0x5d, 0x92, 0xd6, 0xe8, 0x52, 0x8f, 0x86, 0x80,
	0xa1, 0x54, 0x66, 0xcc, 0x0c, 0xcc, 0xc0, 0xf4, 0x50, 0x07, 0x06, 0x7b, 0x4a, 0x29, 0xdd, 0xc0,
	0x0c, 0x84, 0x83, 0x66, 0x2d, 0xad, 0x9b, 0x9d, 0xc8, 0xbb, 0xf2, 0x6a, 0x4d, 0xec, 0x1b, 0x7f,
	0x01, 0x47, 0x86, 0x13, 0x57, 0xfe, 0x26, 0x0e, 0x9c, 0xb8, 0xf3, 0x37, 0x74, 0x24, 0xad, 0x24,
	0x3b, 0x56, 0x12, 0xe7, 0xc7, 0x25, 0x93, 0xf5, 0xbe, 0xef, 0xbd, 0xef, 0x7d, 0xfb, 0xbd, 0x5d,
	0xc1, 0x3e, 0x99, 0xcf, 0x05, 0x0f, 0xc5, 0x58, 0x75, 0x47, 0x7e, 0x77, 0x42, 0x3d, 0x46, 0xba,
	0x2f, 0xa3, 0xbf, 0x87, 0x54, 0xfe, 0xca, 0x5c, 0x6a, 0x07, 0x52, 0x28, 0x81, 0x50, 0x16, 0x66,
	0x8f, 0x7c, 0x3b, 0x0e, 0x33, 0x3f, 0x38, 0x0f, 0x6a, 0x0f, 0xb9, 0xa2, 0x92, 0x13, 0x3f, 0x01,
	0x5b, 0xff, 0x18, 0xd0, 0x8c, 0x37, 0x30, 0x9d, 0xce, 0x68, 0xa8, 0xd0, 0x2e, 0x6c, 0xb9, 0x62,
	0xc6, 0x55, 0xcb, 0x68, 0x1b, 0x9d, 0xbb, 0x38, 0x59, 0xa0, 0x2f, 0x61, 0x9b, 0x72, 0x2f, 0x10,
	0x8c, 0xab, 0x56, 0xb9, 0x6d, 0x74, 0x1a, 0xbd, 0xc7, 0xf6, 0x7a, 0x59, 0xfb, 0x6b, 0x1d, 0x83,
	0xe9, 0x18, 0x67, 0x00, 0xf4, 0x0c, 0x2a, 0x53, 0x11, 0xb6, 0x2a, 0xed, 0x4a, 0xa7, 0xd1, 0x7b,
	0x52, 0x84, 0x7b, 0x3d, 0x23, 0x3e, 0x53, 0x8b, 0x57, 0x63, 0xdd, 0x99, 0x26, 0x83, 0x23, 0x1c,
	0xfa, 0x1c, 0x5a, 0x81, 0x14, 0x81, 0x08, 0xa9, 0xe7, 0xb8, 0xc7, 0x84, 0x73, 0xea, 0x3b, 0xcc,
	0xf3, 0xa9, 0x33, 0x09, 0x5b, 0x3b, 0x6d, 0xa3, 0xb3, 0x85, 0xf7, 0xd2, 0xfd, 0x83, 0x64, 0x7b,
	0xe8, 0xf9, 0xf4, 0x65, 0x68, 0x3d, 0x83, 0xe6, 0xa1, 0x92, 0x94, 0x4c, 0x0e, 0x04, 0x1f, 0xb3,
	0x37, 0xe8, 0x29, 0xbc, 0x33, 0x21, 0xf3, 0xb5, 0x1c, 0x46, 0x9c, 0x63, 0x67, 0x42, 0xe6, 0xab,
	0xf0, 0xdf, 0xcb, 0xd0, 0x48, 0xe4, 0x26, 0x93, 0xc0, 0xa7, 0xe8, 0x0b, 0xa8, 0x8e, 0x84, 0xb7,
	0x88, 0xe3, 0x1b, 0xbd, 0xf7, 0x8a, 0xfa, 0x58, 0x0a, 0xb7, 0xfb, 0xc2, 0x5b, 0x0c, 0x4a, 0x38,
	0xc6, 0xa0, 0x21, 0xd4, 0x8f, 0x29, 0x91, 0x6a, 0x44, 0x49, 0x2a, 0xe0, 0x87, 0x97, 0x25, 0x18,
	0x44, 0x80, 0x3e, 0x25, 0x6a, 0x50, 0xc2, 0x39, 0x1a, 0x7d, 0x03, 0x77, 0xdd, 0xb8, 0x1f, 0x67,
	0x16, 0x78, 0x44, 0xd1, 0x58, 0x83, 0x46, 0xaf, 0x5d, 0x94, 0x6e, 0xb9, 0xfd, 0x41, 0x09, 0x37,
	0x13, 0xe0, 0x8f, 0x31, 0xce, 0x34, 0xa1, 0x1a, 0x71, 0x44, 0x68, 0xa9, 0xaf, 0x66, 0xc2, 0xd7,
	0x6c, 0x40, 0x3d, 0x2b, 0xdf, 0xaf, 0x41, 0xd5, 0x23, 0x8a, 0x58, 0xff, 0x1a, 0xb0, 0xa7, 0x4f,
	0xe6, 0x40, 0x70, 0x4e, 0x5d, 0xc5, 0x04, 0xff, 0x8a, 0x28, 0x82, 0x76, 0xa0, 0x12, 0x30, 0x4f,
	0x5b, 0x26, 0xfa, 0x17, 0x3d, 0x82, 0x3b, 0xc7, 0x22, 0x54, 0x0e, 0xf3, 0xe2, 0x76, 0xeb, 0xb8,
	0x16, 0x2d, 0x87, 0x1e, 0x3a, 0x82, 0x3d, 0x25, 0x09, 0x0f, 0x03, 0x21, 0x95, 0x13, 0x48, 0x3a,
	0xa6, 0x92, 0x72, 0x97, 0x26, 0xf6, 0xb8, 0xd7, 0xdb, 0x2f, 0xb4, 0xd5, 0x77, 0x54, 0x9d, 0x0a,
	0x79, 0xf2, 0x43, 0x0a, 0xc4, 0xbb, 0x59, 0x8e, 0xef, 0xf3, 0x14, 0xa9, 0xd1, 0xaa, 0xd7, 0x33,
	0x9a, 0xf5, 0x87, 0x01, 0xad, 0xb5, 0xfe, 0xd2, 0xb9, 0x58, 0x9e, 0x00, 0xe3, 0xea, 0x13, 0x10,
	0x2b, 0x78, 0xd1, 0xc9, 0x17, 0x0a, 0x8b, 0x13, 0xe1, 0x7f, 0x33, 0xe0, 0xdd, 0x02, 0x62, 0x61,
	0x20, 0x78, 0x48, 0xd1, 0x43, 0xa8, 0xb9, 0x42, 0x9c, 0x30, 0x1a, 0xf3, 0xaa, 0x63, 0xbd, 0x42,
	0x2f, 0xe0, 0xbe, 0x9b, 0x45, 0x3b, 0x8c, 0x8f, 0x85, 0xae, 0x6f, 0x15, 0xd5, 0xcf, 0x13, 0x0f,
	0xf9, 0x58, 0xe0, 0x7b, 0xee, 0xca, 0xda, 0xfa, 0xdb, 0x80, 0x07, 0x9a, 0xc2, 0x6b, 0x71, 0x78,
	0x2b, 0xa2, 0xe4, 0xbc, 0xcb, 0x2b, 0xbc, 0x6f, 0x76, 0x5d, 0x58, 0xbb, 0x80, 0x96, 0x89, 0x26,
	0x22, 0x59, 0xff, 0x95, 0xe1, 0xe1, 0xf3, 0x53, 0xc2, 0x0a, 0x4e, 0xf6, 0x5b, 0xd8, 0x66, 0x9c,
	0x29, 0x47, 0xd2, 0xa9, 0x6e, 0xa2, 0x5b, 0x54, 0xb4, 0x18, 0x6d, 0x0f, 0x39, 0x8b, 0x06, 0xf4,
	0x4e, 0x94, 0x02, 0xd3, 0x29, 0xfa, 0x69, 0x45, 0x75, 0x49, 0xc3, 0x40, 0xab, 0xfe, 0x74, 0xa3,
	0x53, 0x4f, 0x09, 0x0f, 0x4a, 0xcb, 0x47, 0x10, 0xfd, 0x6a, 0xfe, 0x69, 0x40, 0x35, 0xaa, 0x76,
	0x33, 0xd5, 0x4d, 0xd8, 0x0e, 0x24, 0x13, 0x92, 0xa9, 0x45, 0x4c, 0x6c, 0x0b, 0x67, 0xeb, 0x6b,
	0xdf, 0xb4, 0xd9, 0x0d, 0xf1, 0x7f, 0x19, 0x1e, 0xad, 0xe9, 0xa4, 0x6d, 0x7a, 0x04, 0x48, 0x26,
	0xdd, 0x3a, 0x79, 0x63, 0x9a, 0xff, 0xe6, 0x13, 0x31, 0x28, 0xe1, 0x07, 0xf2, 0xec, 0x06, 0xfa,
	0x19, 0x1a, 0x69, 0xee, 0xc8, 0x3a, 0x89, 0xe0, 0x9f, 0x6d, 0x74, 0x8a, 0x09, 0x3b, 0x3b, 0xb7,
	0xcc, 0xa0, 0x84, 0x41, 0xa6, 0xab, 0xf0, 0xf6, 0xae, 0xdb, 0x17, 0x00, 0x79, 0x91, 0xd4, 0xe4,
	0xc6, 0xf5, 0x4c, 0x9e, 0x0a, 0xde, 0xfb, 0xab, 0xa2, 0x9f, 0x6f, 0x1d, 0x84, 0x5e, 0x41, 0x2d,
	0x61, 0x81, 0xda, 0xe7, 0xbe, 0x2f, 0x3a, 0x93, 0xf9, 0xf8, 0x92, 0x17, 0xa8, 0x63, 0x7c, 0x62,
	0xa0, 0x20, 0x9b, 0xfb, 0x25, 0xbd, 0x3f, 0xde, 0xd0, 0xcb, 0x49, 0x9d, 0xab, 0x39, 0x1f, 0xfd,
	0xb2, 0x22, 0xd4, 0xfe, 0x05, 0xe0, 0xfc, 0x26, 0x32, 0xdf, 0xbf, 0x2c, 0x4c, 0x27, 0xe7, 0x70,
	0xff, 0x8c, 0x05, 0xd0, 0x47, 0x9b, 0x4f, 0xbb, 0xf9, 0xe4, 0x0a, 0x9e, 0x8a, 0xe4, 0xeb, 0x5b,
	0x47, 0xed, 0x11, 0x53, 0xa3, 0x99, 0x7b, 0x42, 0x95, 0x2d, 0xe4, 0x9b, 0xee, 0xf3, 0xb5, 0x0f,
	0xb3, 0x51, 0x2d, 0xfe, 0x14, 0xfb, 0xf4, 0x6d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x1e, 0xa9,
	0x9d, 0xf0, 0x09, 0x00, 0x00,
}
