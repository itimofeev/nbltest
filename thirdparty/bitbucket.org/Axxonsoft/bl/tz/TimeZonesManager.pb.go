// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/tz/TimeZonesManager.proto

package tz // import "bitbucket.org/Axxonsoft/bl/tz"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListTimeZonesRequest_EViewMode int32

const (
	// Server response includes only basic TZ info,
	// with no timezone intevals
	ListTimeZonesRequest_VIEW_MODE_STRIPPED ListTimeZonesRequest_EViewMode = 0
	// Full representation with intervals include
	ListTimeZonesRequest_VIEW_MODE_FULL ListTimeZonesRequest_EViewMode = 1
)

var ListTimeZonesRequest_EViewMode_name = map[int32]string{
	0: "VIEW_MODE_STRIPPED",
	1: "VIEW_MODE_FULL",
}
var ListTimeZonesRequest_EViewMode_value = map[string]int32{
	"VIEW_MODE_STRIPPED": 0,
	"VIEW_MODE_FULL":     1,
}

func (x ListTimeZonesRequest_EViewMode) String() string {
	return proto.EnumName(ListTimeZonesRequest_EViewMode_name, int32(x))
}
func (ListTimeZonesRequest_EViewMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{3, 0}
}

type TZStartPoint struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	DayOfMonth           int32    `protobuf:"varint,3,opt,name=day_of_month,json=dayOfMonth" json:"day_of_month,omitempty"`
	DayOfWeek            int32    `protobuf:"varint,4,opt,name=day_of_week,json=dayOfWeek" json:"day_of_week,omitempty"`
	Hour                 int32    `protobuf:"varint,5,opt,name=hour" json:"hour,omitempty"`
	Minute               int32    `protobuf:"varint,6,opt,name=minute" json:"minute,omitempty"`
	Second               int32    `protobuf:"varint,7,opt,name=second" json:"second,omitempty"`
	Millisecond          int32    `protobuf:"varint,8,opt,name=millisecond" json:"millisecond,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TZStartPoint) Reset()         { *m = TZStartPoint{} }
func (m *TZStartPoint) String() string { return proto.CompactTextString(m) }
func (*TZStartPoint) ProtoMessage()    {}
func (*TZStartPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{0}
}
func (m *TZStartPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TZStartPoint.Unmarshal(m, b)
}
func (m *TZStartPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TZStartPoint.Marshal(b, m, deterministic)
}
func (dst *TZStartPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TZStartPoint.Merge(dst, src)
}
func (m *TZStartPoint) XXX_Size() int {
	return xxx_messageInfo_TZStartPoint.Size(m)
}
func (m *TZStartPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_TZStartPoint.DiscardUnknown(m)
}

var xxx_messageInfo_TZStartPoint proto.InternalMessageInfo

func (m *TZStartPoint) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *TZStartPoint) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *TZStartPoint) GetDayOfMonth() int32 {
	if m != nil {
		return m.DayOfMonth
	}
	return 0
}

func (m *TZStartPoint) GetDayOfWeek() int32 {
	if m != nil {
		return m.DayOfWeek
	}
	return 0
}

func (m *TZStartPoint) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *TZStartPoint) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

func (m *TZStartPoint) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *TZStartPoint) GetMillisecond() int32 {
	if m != nil {
		return m.Millisecond
	}
	return 0
}

type TZInterval struct {
	// GUID formated like: "b9cdc301-19de-f14b-9580-b674a467ea36"
	Id                   string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Start                *TZStartPoint `protobuf:"bytes,2,opt,name=start" json:"start,omitempty"`
	LengthSeconds        uint32        `protobuf:"varint,3,opt,name=length_seconds,json=lengthSeconds" json:"length_seconds,omitempty"`
	PeriodSeconds        uint32        `protobuf:"varint,4,opt,name=period_seconds,json=periodSeconds" json:"period_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TZInterval) Reset()         { *m = TZInterval{} }
func (m *TZInterval) String() string { return proto.CompactTextString(m) }
func (*TZInterval) ProtoMessage()    {}
func (*TZInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{1}
}
func (m *TZInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TZInterval.Unmarshal(m, b)
}
func (m *TZInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TZInterval.Marshal(b, m, deterministic)
}
func (dst *TZInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TZInterval.Merge(dst, src)
}
func (m *TZInterval) XXX_Size() int {
	return xxx_messageInfo_TZInterval.Size(m)
}
func (m *TZInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_TZInterval.DiscardUnknown(m)
}

var xxx_messageInfo_TZInterval proto.InternalMessageInfo

func (m *TZInterval) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TZInterval) GetStart() *TZStartPoint {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *TZInterval) GetLengthSeconds() uint32 {
	if m != nil {
		return m.LengthSeconds
	}
	return 0
}

func (m *TZInterval) GetPeriodSeconds() uint32 {
	if m != nil {
		return m.PeriodSeconds
	}
	return 0
}

type TimeZone struct {
	// GUID formated like: "b9cdc301-19de-f14b-9580-b674a467ea36"
	Id                   string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Intervals            []*TZInterval `protobuf:"bytes,3,rep,name=intervals" json:"intervals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TimeZone) Reset()         { *m = TimeZone{} }
func (m *TimeZone) String() string { return proto.CompactTextString(m) }
func (*TimeZone) ProtoMessage()    {}
func (*TimeZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{2}
}
func (m *TimeZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeZone.Unmarshal(m, b)
}
func (m *TimeZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeZone.Marshal(b, m, deterministic)
}
func (dst *TimeZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeZone.Merge(dst, src)
}
func (m *TimeZone) XXX_Size() int {
	return xxx_messageInfo_TimeZone.Size(m)
}
func (m *TimeZone) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeZone.DiscardUnknown(m)
}

var xxx_messageInfo_TimeZone proto.InternalMessageInfo

func (m *TimeZone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TimeZone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TimeZone) GetIntervals() []*TZInterval {
	if m != nil {
		return m.Intervals
	}
	return nil
}

type ListTimeZonesRequest struct {
	View                 ListTimeZonesRequest_EViewMode `protobuf:"varint,1,opt,name=view,enum=axxonsoft.bl.tz.ListTimeZonesRequest_EViewMode" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListTimeZonesRequest) Reset()         { *m = ListTimeZonesRequest{} }
func (m *ListTimeZonesRequest) String() string { return proto.CompactTextString(m) }
func (*ListTimeZonesRequest) ProtoMessage()    {}
func (*ListTimeZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{3}
}
func (m *ListTimeZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTimeZonesRequest.Unmarshal(m, b)
}
func (m *ListTimeZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTimeZonesRequest.Marshal(b, m, deterministic)
}
func (dst *ListTimeZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTimeZonesRequest.Merge(dst, src)
}
func (m *ListTimeZonesRequest) XXX_Size() int {
	return xxx_messageInfo_ListTimeZonesRequest.Size(m)
}
func (m *ListTimeZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTimeZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTimeZonesRequest proto.InternalMessageInfo

func (m *ListTimeZonesRequest) GetView() ListTimeZonesRequest_EViewMode {
	if m != nil {
		return m.View
	}
	return ListTimeZonesRequest_VIEW_MODE_STRIPPED
}

type ListTimeZonesResponse struct {
	Items                []*TimeZone `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListTimeZonesResponse) Reset()         { *m = ListTimeZonesResponse{} }
func (m *ListTimeZonesResponse) String() string { return proto.CompactTextString(m) }
func (*ListTimeZonesResponse) ProtoMessage()    {}
func (*ListTimeZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{4}
}
func (m *ListTimeZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTimeZonesResponse.Unmarshal(m, b)
}
func (m *ListTimeZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTimeZonesResponse.Marshal(b, m, deterministic)
}
func (dst *ListTimeZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTimeZonesResponse.Merge(dst, src)
}
func (m *ListTimeZonesResponse) XXX_Size() int {
	return xxx_messageInfo_ListTimeZonesResponse.Size(m)
}
func (m *ListTimeZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTimeZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTimeZonesResponse proto.InternalMessageInfo

func (m *ListTimeZonesResponse) GetItems() []*TimeZone {
	if m != nil {
		return m.Items
	}
	return nil
}

type BatchGetTimeZonesRequest struct {
	ZoneIds              []string `protobuf:"bytes,1,rep,name=zone_ids,json=zoneIds" json:"zone_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetTimeZonesRequest) Reset()         { *m = BatchGetTimeZonesRequest{} }
func (m *BatchGetTimeZonesRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetTimeZonesRequest) ProtoMessage()    {}
func (*BatchGetTimeZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{5}
}
func (m *BatchGetTimeZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetTimeZonesRequest.Unmarshal(m, b)
}
func (m *BatchGetTimeZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetTimeZonesRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetTimeZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetTimeZonesRequest.Merge(dst, src)
}
func (m *BatchGetTimeZonesRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetTimeZonesRequest.Size(m)
}
func (m *BatchGetTimeZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetTimeZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetTimeZonesRequest proto.InternalMessageInfo

func (m *BatchGetTimeZonesRequest) GetZoneIds() []string {
	if m != nil {
		return m.ZoneIds
	}
	return nil
}

type BatchGetTimeZonesResponse struct {
	Items                []*TimeZone `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NotFoundZones        []string    `protobuf:"bytes,2,rep,name=not_found_zones,json=notFoundZones" json:"not_found_zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BatchGetTimeZonesResponse) Reset()         { *m = BatchGetTimeZonesResponse{} }
func (m *BatchGetTimeZonesResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetTimeZonesResponse) ProtoMessage()    {}
func (*BatchGetTimeZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{6}
}
func (m *BatchGetTimeZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetTimeZonesResponse.Unmarshal(m, b)
}
func (m *BatchGetTimeZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetTimeZonesResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetTimeZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetTimeZonesResponse.Merge(dst, src)
}
func (m *BatchGetTimeZonesResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetTimeZonesResponse.Size(m)
}
func (m *BatchGetTimeZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetTimeZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetTimeZonesResponse proto.InternalMessageInfo

func (m *BatchGetTimeZonesResponse) GetItems() []*TimeZone {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BatchGetTimeZonesResponse) GetNotFoundZones() []string {
	if m != nil {
		return m.NotFoundZones
	}
	return nil
}

type ChangeTimeZonesRequest struct {
	// Specify removed time zone id's.
	// Removing TZ removes all enclosed intervals
	RemovedZones []string `protobuf:"bytes,1,rep,name=removed_zones,json=removedZones" json:"removed_zones,omitempty"`
	// Remove interval by id.
	RemovedIntervals []string `protobuf:"bytes,2,rep,name=removed_intervals,json=removedIntervals" json:"removed_intervals,omitempty"`
	// Updating only time zone info.
	// Warning: Enclosed intervals will be ignored.
	// To modify intervals use modified_intervals field.
	ModifiedZones []*TimeZone `protobuf:"bytes,3,rep,name=modified_zones,json=modifiedZones" json:"modified_zones,omitempty"`
	// Updated interval info.
	ModifiedIntervals []*TZInterval `protobuf:"bytes,4,rep,name=modified_intervals,json=modifiedIntervals" json:"modified_intervals,omitempty"`
	// Adding new TimeZones
	AddedZones []*TimeZone `protobuf:"bytes,5,rep,name=added_zones,json=addedZones" json:"added_zones,omitempty"`
	// Adding interval to id
	AddedIntervals       []*ChangeTimeZonesRequest_NewIntervalEntry `protobuf:"bytes,6,rep,name=added_intervals,json=addedIntervals" json:"added_intervals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *ChangeTimeZonesRequest) Reset()         { *m = ChangeTimeZonesRequest{} }
func (m *ChangeTimeZonesRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeTimeZonesRequest) ProtoMessage()    {}
func (*ChangeTimeZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{7}
}
func (m *ChangeTimeZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeTimeZonesRequest.Unmarshal(m, b)
}
func (m *ChangeTimeZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeTimeZonesRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeTimeZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeTimeZonesRequest.Merge(dst, src)
}
func (m *ChangeTimeZonesRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeTimeZonesRequest.Size(m)
}
func (m *ChangeTimeZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeTimeZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeTimeZonesRequest proto.InternalMessageInfo

func (m *ChangeTimeZonesRequest) GetRemovedZones() []string {
	if m != nil {
		return m.RemovedZones
	}
	return nil
}

func (m *ChangeTimeZonesRequest) GetRemovedIntervals() []string {
	if m != nil {
		return m.RemovedIntervals
	}
	return nil
}

func (m *ChangeTimeZonesRequest) GetModifiedZones() []*TimeZone {
	if m != nil {
		return m.ModifiedZones
	}
	return nil
}

func (m *ChangeTimeZonesRequest) GetModifiedIntervals() []*TZInterval {
	if m != nil {
		return m.ModifiedIntervals
	}
	return nil
}

func (m *ChangeTimeZonesRequest) GetAddedZones() []*TimeZone {
	if m != nil {
		return m.AddedZones
	}
	return nil
}

func (m *ChangeTimeZonesRequest) GetAddedIntervals() []*ChangeTimeZonesRequest_NewIntervalEntry {
	if m != nil {
		return m.AddedIntervals
	}
	return nil
}

type ChangeTimeZonesRequest_NewIntervalEntry struct {
	// parent time zone id
	TimezoneId string `protobuf:"bytes,1,opt,name=timezone_id,json=timezoneId" json:"timezone_id,omitempty"`
	// added interval
	Value                *TZInterval `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ChangeTimeZonesRequest_NewIntervalEntry) Reset() {
	*m = ChangeTimeZonesRequest_NewIntervalEntry{}
}
func (m *ChangeTimeZonesRequest_NewIntervalEntry) String() string { return proto.CompactTextString(m) }
func (*ChangeTimeZonesRequest_NewIntervalEntry) ProtoMessage()    {}
func (*ChangeTimeZonesRequest_NewIntervalEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{7, 0}
}
func (m *ChangeTimeZonesRequest_NewIntervalEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeTimeZonesRequest_NewIntervalEntry.Unmarshal(m, b)
}
func (m *ChangeTimeZonesRequest_NewIntervalEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeTimeZonesRequest_NewIntervalEntry.Marshal(b, m, deterministic)
}
func (dst *ChangeTimeZonesRequest_NewIntervalEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeTimeZonesRequest_NewIntervalEntry.Merge(dst, src)
}
func (m *ChangeTimeZonesRequest_NewIntervalEntry) XXX_Size() int {
	return xxx_messageInfo_ChangeTimeZonesRequest_NewIntervalEntry.Size(m)
}
func (m *ChangeTimeZonesRequest_NewIntervalEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeTimeZonesRequest_NewIntervalEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeTimeZonesRequest_NewIntervalEntry proto.InternalMessageInfo

func (m *ChangeTimeZonesRequest_NewIntervalEntry) GetTimezoneId() string {
	if m != nil {
		return m.TimezoneId
	}
	return ""
}

func (m *ChangeTimeZonesRequest_NewIntervalEntry) GetValue() *TZInterval {
	if m != nil {
		return m.Value
	}
	return nil
}

type ChangeTimeZonesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeTimeZonesResponse) Reset()         { *m = ChangeTimeZonesResponse{} }
func (m *ChangeTimeZonesResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeTimeZonesResponse) ProtoMessage()    {}
func (*ChangeTimeZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_TimeZonesManager_598bab729fca5f6d, []int{8}
}
func (m *ChangeTimeZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeTimeZonesResponse.Unmarshal(m, b)
}
func (m *ChangeTimeZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeTimeZonesResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeTimeZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeTimeZonesResponse.Merge(dst, src)
}
func (m *ChangeTimeZonesResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeTimeZonesResponse.Size(m)
}
func (m *ChangeTimeZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeTimeZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeTimeZonesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TZStartPoint)(nil), "axxonsoft.bl.tz.TZStartPoint")
	proto.RegisterType((*TZInterval)(nil), "axxonsoft.bl.tz.TZInterval")
	proto.RegisterType((*TimeZone)(nil), "axxonsoft.bl.tz.TimeZone")
	proto.RegisterType((*ListTimeZonesRequest)(nil), "axxonsoft.bl.tz.ListTimeZonesRequest")
	proto.RegisterType((*ListTimeZonesResponse)(nil), "axxonsoft.bl.tz.ListTimeZonesResponse")
	proto.RegisterType((*BatchGetTimeZonesRequest)(nil), "axxonsoft.bl.tz.BatchGetTimeZonesRequest")
	proto.RegisterType((*BatchGetTimeZonesResponse)(nil), "axxonsoft.bl.tz.BatchGetTimeZonesResponse")
	proto.RegisterType((*ChangeTimeZonesRequest)(nil), "axxonsoft.bl.tz.ChangeTimeZonesRequest")
	proto.RegisterType((*ChangeTimeZonesRequest_NewIntervalEntry)(nil), "axxonsoft.bl.tz.ChangeTimeZonesRequest.NewIntervalEntry")
	proto.RegisterType((*ChangeTimeZonesResponse)(nil), "axxonsoft.bl.tz.ChangeTimeZonesResponse")
	proto.RegisterEnum("axxonsoft.bl.tz.ListTimeZonesRequest_EViewMode", ListTimeZonesRequest_EViewMode_name, ListTimeZonesRequest_EViewMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TimeZoneManager service

type TimeZoneManagerClient interface {
	ListTimeZones(ctx context.Context, in *ListTimeZonesRequest, opts ...grpc.CallOption) (*ListTimeZonesResponse, error)
	BatchGetZones(ctx context.Context, in *BatchGetTimeZonesRequest, opts ...grpc.CallOption) (*BatchGetTimeZonesResponse, error)
	ChangeTimeZones(ctx context.Context, in *ChangeTimeZonesRequest, opts ...grpc.CallOption) (*ChangeTimeZonesResponse, error)
}

type timeZoneManagerClient struct {
	cc *grpc.ClientConn
}

func NewTimeZoneManagerClient(cc *grpc.ClientConn) TimeZoneManagerClient {
	return &timeZoneManagerClient{cc}
}

func (c *timeZoneManagerClient) ListTimeZones(ctx context.Context, in *ListTimeZonesRequest, opts ...grpc.CallOption) (*ListTimeZonesResponse, error) {
	out := new(ListTimeZonesResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.tz.TimeZoneManager/ListTimeZones", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timeZoneManagerClient) BatchGetZones(ctx context.Context, in *BatchGetTimeZonesRequest, opts ...grpc.CallOption) (*BatchGetTimeZonesResponse, error) {
	out := new(BatchGetTimeZonesResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.tz.TimeZoneManager/BatchGetZones", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timeZoneManagerClient) ChangeTimeZones(ctx context.Context, in *ChangeTimeZonesRequest, opts ...grpc.CallOption) (*ChangeTimeZonesResponse, error) {
	out := new(ChangeTimeZonesResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.tz.TimeZoneManager/ChangeTimeZones", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TimeZoneManager service

type TimeZoneManagerServer interface {
	ListTimeZones(context.Context, *ListTimeZonesRequest) (*ListTimeZonesResponse, error)
	BatchGetZones(context.Context, *BatchGetTimeZonesRequest) (*BatchGetTimeZonesResponse, error)
	ChangeTimeZones(context.Context, *ChangeTimeZonesRequest) (*ChangeTimeZonesResponse, error)
}

func RegisterTimeZoneManagerServer(s *grpc.Server, srv TimeZoneManagerServer) {
	s.RegisterService(&_TimeZoneManager_serviceDesc, srv)
}

func _TimeZoneManager_ListTimeZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTimeZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimeZoneManagerServer).ListTimeZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.tz.TimeZoneManager/ListTimeZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimeZoneManagerServer).ListTimeZones(ctx, req.(*ListTimeZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimeZoneManager_BatchGetZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetTimeZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimeZoneManagerServer).BatchGetZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.tz.TimeZoneManager/BatchGetZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimeZoneManagerServer).BatchGetZones(ctx, req.(*BatchGetTimeZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimeZoneManager_ChangeTimeZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeTimeZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimeZoneManagerServer).ChangeTimeZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.tz.TimeZoneManager/ChangeTimeZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimeZoneManagerServer).ChangeTimeZones(ctx, req.(*ChangeTimeZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimeZoneManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.tz.TimeZoneManager",
	HandlerType: (*TimeZoneManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTimeZones",
			Handler:    _TimeZoneManager_ListTimeZones_Handler,
		},
		{
			MethodName: "BatchGetZones",
			Handler:    _TimeZoneManager_BatchGetZones_Handler,
		},
		{
			MethodName: "ChangeTimeZones",
			Handler:    _TimeZoneManager_ChangeTimeZones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/tz/TimeZonesManager.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/tz/TimeZonesManager.proto", fileDescriptor_TimeZonesManager_598bab729fca5f6d)
}

var fileDescriptor_TimeZonesManager_598bab729fca5f6d = []byte{
	// 831 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0x8e, 0xdb, 0x44,
	0x18, 0xc5, 0xf9, 0xd9, 0x6e, 0xbe, 0x6c, 0x7e, 0x3a, 0x6a, 0xb7, 0x4e, 0xa0, 0x6c, 0x64, 0xd4,
	0x65, 0x29, 0x92, 0xad, 0xa6, 0x42, 0xc0, 0x5e, 0x41, 0xdb, 0x14, 0x82, 0x36, 0x74, 0xe5, 0x0d,
	0xad, 0x94, 0x1b, 0x6b, 0x12, 0x4f, 0x92, 0xd1, 0xda, 0x33, 0xc1, 0x9e, 0x24, 0xcd, 0x5e, 0x72,
	0x01, 0x0f, 0x00, 0x97, 0x48, 0x3c, 0x14, 0x2f, 0xc0, 0x05, 0xef, 0x01, 0xf2, 0x8c, 0xed, 0xec,
	0xc6, 0x81, 0xac, 0x7a, 0xe7, 0x39, 0x73, 0xbe, 0xef, 0x9c, 0x33, 0xfe, 0xc6, 0x86, 0x63, 0xfc,
	0xf6, 0x2d, 0x67, 0x21, 0x1f, 0x0b, 0x6b, 0xe8, 0x59, 0xe2, 0xca, 0xea, 0x53, 0x9f, 0x0c, 0x38,
	0x23, 0x61, 0x0f, 0x33, 0x3c, 0x21, 0x81, 0x39, 0x0b, 0xb8, 0xe0, 0xa8, 0x96, 0xf2, 0xcc, 0xa1,
	0x67, 0x8a, 0xab, 0xe6, 0x07, 0x13, 0xce, 0x27, 0x1e, 0xb1, 0xf0, 0x8c, 0x5a, 0x98, 0x31, 0x2e,
	0xb0, 0xa0, 0x9c, 0x85, 0x8a, 0x6e, 0xfc, 0xa5, 0xc1, 0x41, 0x7f, 0x70, 0x21, 0x70, 0x20, 0xce,
	0x39, 0x65, 0x02, 0x21, 0x28, 0xac, 0x08, 0x0e, 0x74, 0xad, 0xa5, 0x9d, 0x14, 0x6d, 0xf9, 0x8c,
	0xee, 0x41, 0xd1, 0xe7, 0x4c, 0x4c, 0xf5, 0x9c, 0x04, 0xd5, 0x02, 0xb5, 0xe0, 0xc0, 0xc5, 0x2b,
	0x87, 0x8f, 0x1d, 0xb5, 0x99, 0x97, 0x9b, 0xe0, 0xe2, 0xd5, 0xab, 0x71, 0x4f, 0x32, 0x3e, 0x84,
	0x72, 0xcc, 0x58, 0x12, 0x72, 0xa9, 0x17, 0x24, 0xa1, 0x24, 0x09, 0x6f, 0x08, 0xb9, 0x8c, 0xb4,
	0xa6, 0x7c, 0x1e, 0xe8, 0x45, 0xa5, 0x15, 0x3d, 0xa3, 0x43, 0xd8, 0xf3, 0x29, 0x9b, 0x0b, 0xa2,
	0xef, 0x49, 0x34, 0x5e, 0x45, 0x78, 0x48, 0x46, 0x9c, 0xb9, 0xfa, 0x1d, 0x85, 0xab, 0x15, 0x6a,
	0x41, 0xd9, 0xa7, 0x9e, 0x47, 0xe3, 0xcd, 0x7d, 0xb9, 0x79, 0x1d, 0x32, 0xfe, 0xd0, 0x00, 0xfa,
	0x83, 0x2e, 0x13, 0x24, 0x58, 0x60, 0x0f, 0x55, 0x21, 0x47, 0x5d, 0x19, 0xaf, 0x64, 0xe7, 0xa8,
	0x8b, 0x9e, 0x42, 0x31, 0x8c, 0xe2, 0xcb, 0x70, 0xe5, 0xf6, 0x43, 0x73, 0xe3, 0x00, 0xcd, 0xeb,
	0xc7, 0x63, 0x2b, 0x2e, 0x7a, 0x04, 0x55, 0x8f, 0xb0, 0x89, 0x98, 0x3a, 0x4a, 0x24, 0x94, 0xe9,
	0x2b, 0x76, 0x45, 0xa1, 0x17, 0x0a, 0x8c, 0x68, 0x33, 0x12, 0x50, 0xee, 0xa6, 0xb4, 0x82, 0xa2,
	0x29, 0x34, 0xa6, 0x19, 0x14, 0xf6, 0x93, 0xb7, 0x99, 0xb1, 0x87, 0xa0, 0xc0, 0xb0, 0x4f, 0xa4,
	0xbb, 0x92, 0x2d, 0x9f, 0xd1, 0x97, 0x50, 0xa2, 0x71, 0x9c, 0x48, 0x38, 0x7f, 0x52, 0x6e, 0xbf,
	0xbf, 0xc5, 0x76, 0x12, 0xd9, 0x5e, 0xb3, 0x8d, 0xdf, 0x34, 0xb8, 0x77, 0x46, 0x43, 0x91, 0x4e,
	0x8f, 0x4d, 0x7e, 0x9c, 0x93, 0x50, 0xa0, 0xe7, 0x50, 0x58, 0x50, 0xb2, 0x94, 0xca, 0xd5, 0xb6,
	0x95, 0x69, 0xb7, 0xad, 0xc8, 0xec, 0xbc, 0xa6, 0x64, 0xd9, 0xe3, 0x2e, 0xb1, 0x65, 0xb1, 0xf1,
	0x39, 0x94, 0x52, 0x08, 0x1d, 0x02, 0x7a, 0xdd, 0xed, 0xbc, 0x71, 0x7a, 0xaf, 0x5e, 0x74, 0x9c,
	0x8b, 0xbe, 0xdd, 0x3d, 0x3f, 0xef, 0xbc, 0xa8, 0xbf, 0x87, 0x10, 0x54, 0xd7, 0xf8, 0xcb, 0x1f,
	0xce, 0xce, 0xea, 0x9a, 0xf1, 0x2d, 0xdc, 0xdf, 0x10, 0x08, 0x67, 0x9c, 0x85, 0x04, 0x59, 0x50,
	0xa4, 0x82, 0xf8, 0xa1, 0xae, 0xc9, 0x98, 0x8d, 0x6c, 0xcc, 0xb8, 0xc4, 0x56, 0x3c, 0xe3, 0x33,
	0xd0, 0x9f, 0x61, 0x31, 0x9a, 0x7e, 0x43, 0xb2, 0x19, 0x1b, 0xb0, 0x7f, 0xc5, 0x19, 0x71, 0xa8,
	0xab, 0xfa, 0x95, 0xec, 0x3b, 0xd1, 0xba, 0xeb, 0x86, 0x86, 0x80, 0xc6, 0x96, 0xb2, 0x77, 0x34,
	0x81, 0x8e, 0xa1, 0xc6, 0xb8, 0x70, 0xc6, 0x7c, 0xce, 0x5c, 0x27, 0x92, 0x08, 0xf5, 0x9c, 0xd4,
	0xab, 0x30, 0x2e, 0x5e, 0x46, 0xa8, 0x14, 0x30, 0xfe, 0xc9, 0xc3, 0xe1, 0xf3, 0x29, 0x66, 0x13,
	0x92, 0xf1, 0xfa, 0x11, 0x54, 0x02, 0xe2, 0xf3, 0x05, 0x49, 0x1a, 0x28, 0xc3, 0x07, 0x31, 0x28,
	0xb9, 0xe8, 0x53, 0xb8, 0x9b, 0x90, 0xd6, 0x03, 0xa1, 0x94, 0xea, 0xf1, 0x46, 0x32, 0x04, 0x21,
	0xfa, 0x0a, 0xaa, 0x3e, 0x77, 0xe9, 0x98, 0xa6, 0x2d, 0xf3, 0xbb, 0xe2, 0x54, 0x92, 0x02, 0x25,
	0xf7, 0x1d, 0xa0, 0xb4, 0xc3, 0x5a, 0xaf, 0xb0, 0x7b, 0x00, 0xef, 0x26, 0x65, 0x6b, 0x37, 0xa7,
	0x50, 0xc6, 0xae, 0x9b, 0x5a, 0x29, 0xee, 0xb2, 0x02, 0x92, 0xad, 0x7c, 0x60, 0xa8, 0xa9, 0xda,
	0xb5, 0x89, 0x3d, 0x59, 0xff, 0x45, 0xa6, 0x7e, 0xfb, 0xe9, 0x9a, 0xdf, 0x93, 0x65, 0x62, 0xa5,
	0xc3, 0x44, 0xb0, 0xb2, 0xab, 0xb2, 0x61, 0x6a, 0xaf, 0x39, 0x86, 0xfa, 0x26, 0x07, 0x1d, 0x41,
	0x59, 0x50, 0x9f, 0xc4, 0x23, 0x14, 0xdf, 0x51, 0x48, 0xa0, 0xae, 0x8b, 0x9e, 0x40, 0x71, 0x81,
	0xbd, 0x39, 0x89, 0x3f, 0x25, 0xff, 0x7b, 0x24, 0x8a, 0x69, 0x34, 0xe0, 0x41, 0xc6, 0xa2, 0x9a,
	0xba, 0xf6, 0xef, 0x79, 0xa8, 0x25, 0x68, 0xfc, 0x8d, 0x47, 0x0b, 0xa8, 0xdc, 0xb8, 0x27, 0xe8,
	0xd1, 0xad, 0x2e, 0x6a, 0xf3, 0x78, 0x17, 0x4d, 0x69, 0x1a, 0x87, 0x3f, 0xfd, 0xf9, 0xf7, 0xaf,
	0xb9, 0x3a, 0xaa, 0x5a, 0x8b, 0x27, 0x56, 0x94, 0x4c, 0xbd, 0x1e, 0xf4, 0x8b, 0x06, 0x95, 0xe4,
	0x7e, 0x28, 0xe1, 0x4f, 0x32, 0x1d, 0xff, 0xeb, 0xda, 0x35, 0x1f, 0xdf, 0x86, 0x1a, 0x1b, 0x38,
	0x92, 0x06, 0x1a, 0xe8, 0xc1, 0x4d, 0x03, 0xa7, 0xc3, 0xb8, 0x02, 0xfd, 0xac, 0x41, 0x6d, 0xe3,
	0xc4, 0xd0, 0xc7, 0xb7, 0x7c, 0xed, 0xcd, 0x93, 0xdd, 0xc4, 0xd8, 0x47, 0x4b, 0xfa, 0x68, 0x1a,
	0xf7, 0x37, 0x7c, 0x8c, 0x24, 0xff, 0x54, 0x7b, 0xfc, 0xec, 0x68, 0xf0, 0x70, 0x48, 0xc5, 0x70,
	0x3e, 0xba, 0x24, 0xc2, 0xe4, 0xc1, 0xc4, 0xfa, 0xfa, 0xe6, 0x0f, 0x7a, 0xb8, 0x27, 0xff, 0xb0,
	0x4f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xf7, 0x99, 0x35, 0xba, 0x07, 0x00, 0x00,
}
