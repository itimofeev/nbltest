// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/statistics/Statistics.proto

package statistics // import "bitbucket.org/Axxonsoft/bl/statistics"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatPointType int32

const (
	StatPointType_SPT_LiveFPS                 StatPointType = 0
	StatPointType_SPT_LiveBitrate             StatPointType = 1
	StatPointType_SPT_LiveWidth               StatPointType = 2
	StatPointType_SPT_LiveHeight              StatPointType = 3
	StatPointType_SPT_LiveMediaType           StatPointType = 4
	StatPointType_SPT_LiveStreamType          StatPointType = 5
	StatPointType_SPT_ServiceState            StatPointType = 6
	StatPointType_SPT_ArchiveChannelFPS       StatPointType = 7
	StatPointType_SPT_ArchiveChannelBitrate   StatPointType = 8
	StatPointType_SPT_ArchiveChannelLoss      StatPointType = 9
	StatPointType_SPT_ReplicaChannelProgress  StatPointType = 10
	StatPointType_SPT_ReplicaChannelState     StatPointType = 11
	StatPointType_SPT_ArchiveFeedOverflow     StatPointType = 12
	StatPointType_SPT_ArchiveVolumeWriteSpeed StatPointType = 13
	StatPointType_SPT_ArchiveVolumeReadSpeed  StatPointType = 14
	StatPointType_SPT_ArchiveVolumeWriteRatio StatPointType = 15
	StatPointType_SPT_ArchiveVolumeReadRatio  StatPointType = 16
	StatPointType_SPT_ArchiveVolumeState      StatPointType = 17
	StatPointType_SPT_CpuTotalUsage           StatPointType = 18
	StatPointType_SPT_MemoryTotalUsage        StatPointType = 19
	StatPointType_SPT_NetMaxUsage             StatPointType = 20
	StatPointType_SPT_DiskSpaceUsage          StatPointType = 21
	StatPointType_SPT_ArchiveVolumeUsage      StatPointType = 22
	StatPointType_SPT_ArchiveUsage            StatPointType = 23
)

var StatPointType_name = map[int32]string{
	0:  "SPT_LiveFPS",
	1:  "SPT_LiveBitrate",
	2:  "SPT_LiveWidth",
	3:  "SPT_LiveHeight",
	4:  "SPT_LiveMediaType",
	5:  "SPT_LiveStreamType",
	6:  "SPT_ServiceState",
	7:  "SPT_ArchiveChannelFPS",
	8:  "SPT_ArchiveChannelBitrate",
	9:  "SPT_ArchiveChannelLoss",
	10: "SPT_ReplicaChannelProgress",
	11: "SPT_ReplicaChannelState",
	12: "SPT_ArchiveFeedOverflow",
	13: "SPT_ArchiveVolumeWriteSpeed",
	14: "SPT_ArchiveVolumeReadSpeed",
	15: "SPT_ArchiveVolumeWriteRatio",
	16: "SPT_ArchiveVolumeReadRatio",
	17: "SPT_ArchiveVolumeState",
	18: "SPT_CpuTotalUsage",
	19: "SPT_MemoryTotalUsage",
	20: "SPT_NetMaxUsage",
	21: "SPT_DiskSpaceUsage",
	22: "SPT_ArchiveVolumeUsage",
	23: "SPT_ArchiveUsage",
}
var StatPointType_value = map[string]int32{
	"SPT_LiveFPS":                 0,
	"SPT_LiveBitrate":             1,
	"SPT_LiveWidth":               2,
	"SPT_LiveHeight":              3,
	"SPT_LiveMediaType":           4,
	"SPT_LiveStreamType":          5,
	"SPT_ServiceState":            6,
	"SPT_ArchiveChannelFPS":       7,
	"SPT_ArchiveChannelBitrate":   8,
	"SPT_ArchiveChannelLoss":      9,
	"SPT_ReplicaChannelProgress":  10,
	"SPT_ReplicaChannelState":     11,
	"SPT_ArchiveFeedOverflow":     12,
	"SPT_ArchiveVolumeWriteSpeed": 13,
	"SPT_ArchiveVolumeReadSpeed":  14,
	"SPT_ArchiveVolumeWriteRatio": 15,
	"SPT_ArchiveVolumeReadRatio":  16,
	"SPT_ArchiveVolumeState":      17,
	"SPT_CpuTotalUsage":           18,
	"SPT_MemoryTotalUsage":        19,
	"SPT_NetMaxUsage":             20,
	"SPT_DiskSpaceUsage":          21,
	"SPT_ArchiveVolumeUsage":      22,
	"SPT_ArchiveUsage":            23,
}

func (x StatPointType) String() string {
	return proto.EnumName(StatPointType_name, int32(x))
}
func (StatPointType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Statistics_2f837e7b5f1fcd7b, []int{0}
}

type StatPointKey struct {
	Type                 StatPointType `protobuf:"varint,1,opt,name=type,enum=axxonsoft.bl.statistics.StatPointType" json:"type,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StatPointKey) Reset()         { *m = StatPointKey{} }
func (m *StatPointKey) String() string { return proto.CompactTextString(m) }
func (*StatPointKey) ProtoMessage()    {}
func (*StatPointKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_Statistics_2f837e7b5f1fcd7b, []int{0}
}
func (m *StatPointKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatPointKey.Unmarshal(m, b)
}
func (m *StatPointKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatPointKey.Marshal(b, m, deterministic)
}
func (dst *StatPointKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatPointKey.Merge(dst, src)
}
func (m *StatPointKey) XXX_Size() int {
	return xxx_messageInfo_StatPointKey.Size(m)
}
func (m *StatPointKey) XXX_DiscardUnknown() {
	xxx_messageInfo_StatPointKey.DiscardUnknown(m)
}

var xxx_messageInfo_StatPointKey proto.InternalMessageInfo

func (m *StatPointKey) GetType() StatPointType {
	if m != nil {
		return m.Type
	}
	return StatPointType_SPT_LiveFPS
}

func (m *StatPointKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StatPoint struct {
	Hint string        `protobuf:"bytes,1,opt,name=hint" json:"hint,omitempty"`
	Key  *StatPointKey `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*StatPoint_ValueInt32
	//	*StatPoint_ValueUint32
	//	*StatPoint_ValueInt64
	//	*StatPoint_ValueUint64
	//	*StatPoint_ValueDouble
	Value                isStatPoint_Value  `protobuf_oneof:"value"`
	Labels               []*StatPoint_Label `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StatPoint) Reset()         { *m = StatPoint{} }
func (m *StatPoint) String() string { return proto.CompactTextString(m) }
func (*StatPoint) ProtoMessage()    {}
func (*StatPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_Statistics_2f837e7b5f1fcd7b, []int{1}
}
func (m *StatPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatPoint.Unmarshal(m, b)
}
func (m *StatPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatPoint.Marshal(b, m, deterministic)
}
func (dst *StatPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatPoint.Merge(dst, src)
}
func (m *StatPoint) XXX_Size() int {
	return xxx_messageInfo_StatPoint.Size(m)
}
func (m *StatPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_StatPoint.DiscardUnknown(m)
}

var xxx_messageInfo_StatPoint proto.InternalMessageInfo

type isStatPoint_Value interface {
	isStatPoint_Value()
}

type StatPoint_ValueInt32 struct {
	ValueInt32 int32 `protobuf:"varint,20,opt,name=value_int32,json=valueInt32,oneof"`
}
type StatPoint_ValueUint32 struct {
	ValueUint32 uint32 `protobuf:"varint,21,opt,name=value_uint32,json=valueUint32,oneof"`
}
type StatPoint_ValueInt64 struct {
	ValueInt64 int64 `protobuf:"varint,22,opt,name=value_int64,json=valueInt64,oneof"`
}
type StatPoint_ValueUint64 struct {
	ValueUint64 uint64 `protobuf:"varint,23,opt,name=value_uint64,json=valueUint64,oneof"`
}
type StatPoint_ValueDouble struct {
	ValueDouble float64 `protobuf:"fixed64,24,opt,name=value_double,json=valueDouble,oneof"`
}

func (*StatPoint_ValueInt32) isStatPoint_Value()  {}
func (*StatPoint_ValueUint32) isStatPoint_Value() {}
func (*StatPoint_ValueInt64) isStatPoint_Value()  {}
func (*StatPoint_ValueUint64) isStatPoint_Value() {}
func (*StatPoint_ValueDouble) isStatPoint_Value() {}

func (m *StatPoint) GetValue() isStatPoint_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *StatPoint) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

func (m *StatPoint) GetKey() *StatPointKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *StatPoint) GetValueInt32() int32 {
	if x, ok := m.GetValue().(*StatPoint_ValueInt32); ok {
		return x.ValueInt32
	}
	return 0
}

func (m *StatPoint) GetValueUint32() uint32 {
	if x, ok := m.GetValue().(*StatPoint_ValueUint32); ok {
		return x.ValueUint32
	}
	return 0
}

func (m *StatPoint) GetValueInt64() int64 {
	if x, ok := m.GetValue().(*StatPoint_ValueInt64); ok {
		return x.ValueInt64
	}
	return 0
}

func (m *StatPoint) GetValueUint64() uint64 {
	if x, ok := m.GetValue().(*StatPoint_ValueUint64); ok {
		return x.ValueUint64
	}
	return 0
}

func (m *StatPoint) GetValueDouble() float64 {
	if x, ok := m.GetValue().(*StatPoint_ValueDouble); ok {
		return x.ValueDouble
	}
	return 0
}

func (m *StatPoint) GetLabels() []*StatPoint_Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StatPoint) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StatPoint_OneofMarshaler, _StatPoint_OneofUnmarshaler, _StatPoint_OneofSizer, []interface{}{
		(*StatPoint_ValueInt32)(nil),
		(*StatPoint_ValueUint32)(nil),
		(*StatPoint_ValueInt64)(nil),
		(*StatPoint_ValueUint64)(nil),
		(*StatPoint_ValueDouble)(nil),
	}
}

func _StatPoint_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StatPoint)
	// value
	switch x := m.Value.(type) {
	case *StatPoint_ValueInt32:
		b.EncodeVarint(20<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ValueInt32))
	case *StatPoint_ValueUint32:
		b.EncodeVarint(21<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ValueUint32))
	case *StatPoint_ValueInt64:
		b.EncodeVarint(22<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ValueInt64))
	case *StatPoint_ValueUint64:
		b.EncodeVarint(23<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ValueUint64))
	case *StatPoint_ValueDouble:
		b.EncodeVarint(24<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.ValueDouble))
	case nil:
	default:
		return fmt.Errorf("StatPoint.Value has unexpected type %T", x)
	}
	return nil
}

func _StatPoint_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StatPoint)
	switch tag {
	case 20: // value.value_int32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &StatPoint_ValueInt32{int32(x)}
		return true, err
	case 21: // value.value_uint32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &StatPoint_ValueUint32{uint32(x)}
		return true, err
	case 22: // value.value_int64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &StatPoint_ValueInt64{int64(x)}
		return true, err
	case 23: // value.value_uint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &StatPoint_ValueUint64{x}
		return true, err
	case 24: // value.value_double
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &StatPoint_ValueDouble{math.Float64frombits(x)}
		return true, err
	default:
		return false, nil
	}
}

func _StatPoint_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StatPoint)
	// value
	switch x := m.Value.(type) {
	case *StatPoint_ValueInt32:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.ValueInt32))
	case *StatPoint_ValueUint32:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.ValueUint32))
	case *StatPoint_ValueInt64:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.ValueInt64))
	case *StatPoint_ValueUint64:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.ValueUint64))
	case *StatPoint_ValueDouble:
		n += 2 // tag and wire
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type StatPoint_Label struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatPoint_Label) Reset()         { *m = StatPoint_Label{} }
func (m *StatPoint_Label) String() string { return proto.CompactTextString(m) }
func (*StatPoint_Label) ProtoMessage()    {}
func (*StatPoint_Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_Statistics_2f837e7b5f1fcd7b, []int{1, 0}
}
func (m *StatPoint_Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatPoint_Label.Unmarshal(m, b)
}
func (m *StatPoint_Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatPoint_Label.Marshal(b, m, deterministic)
}
func (dst *StatPoint_Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatPoint_Label.Merge(dst, src)
}
func (m *StatPoint_Label) XXX_Size() int {
	return xxx_messageInfo_StatPoint_Label.Size(m)
}
func (m *StatPoint_Label) XXX_DiscardUnknown() {
	xxx_messageInfo_StatPoint_Label.DiscardUnknown(m)
}

var xxx_messageInfo_StatPoint_Label proto.InternalMessageInfo

func (m *StatPoint_Label) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StatPoint_Label) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StatsRequest struct {
	Keys                 []*StatPointKey `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Statistics_2f837e7b5f1fcd7b, []int{2}
}
func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (dst *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(dst, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

func (m *StatsRequest) GetKeys() []*StatPointKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

type StatsResponse struct {
	Stats                []*StatPoint    `protobuf:"bytes,1,rep,name=stats" json:"stats,omitempty"`
	Fails                []*StatPointKey `protobuf:"bytes,2,rep,name=fails" json:"fails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatsResponse) Reset()         { *m = StatsResponse{} }
func (m *StatsResponse) String() string { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()    {}
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Statistics_2f837e7b5f1fcd7b, []int{3}
}
func (m *StatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsResponse.Unmarshal(m, b)
}
func (m *StatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsResponse.Marshal(b, m, deterministic)
}
func (dst *StatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsResponse.Merge(dst, src)
}
func (m *StatsResponse) XXX_Size() int {
	return xxx_messageInfo_StatsResponse.Size(m)
}
func (m *StatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatsResponse proto.InternalMessageInfo

func (m *StatsResponse) GetStats() []*StatPoint {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *StatsResponse) GetFails() []*StatPointKey {
	if m != nil {
		return m.Fails
	}
	return nil
}

func init() {
	proto.RegisterType((*StatPointKey)(nil), "axxonsoft.bl.statistics.StatPointKey")
	proto.RegisterType((*StatPoint)(nil), "axxonsoft.bl.statistics.StatPoint")
	proto.RegisterType((*StatPoint_Label)(nil), "axxonsoft.bl.statistics.StatPoint.Label")
	proto.RegisterType((*StatsRequest)(nil), "axxonsoft.bl.statistics.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "axxonsoft.bl.statistics.StatsResponse")
	proto.RegisterEnum("axxonsoft.bl.statistics.StatPointType", StatPointType_name, StatPointType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StatisticService service

type StatisticServiceClient interface {
	GetStatistics(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatsResponse, error)
}

type statisticServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatisticServiceClient(cc *grpc.ClientConn) StatisticServiceClient {
	return &statisticServiceClient{cc}
}

func (c *statisticServiceClient) GetStatistics(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatsResponse, error) {
	out := new(StatsResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.statistics.StatisticService/GetStatistics", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StatisticService service

type StatisticServiceServer interface {
	GetStatistics(context.Context, *StatsRequest) (*StatsResponse, error)
}

func RegisterStatisticServiceServer(s *grpc.Server, srv StatisticServiceServer) {
	s.RegisterService(&_StatisticService_serviceDesc, srv)
}

func _StatisticService_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticServiceServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.statistics.StatisticService/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticServiceServer).GetStatistics(ctx, req.(*StatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatisticService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.statistics.StatisticService",
	HandlerType: (*StatisticServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatistics",
			Handler:    _StatisticService_GetStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/statistics/Statistics.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/statistics/Statistics.proto", fileDescriptor_Statistics_2f837e7b5f1fcd7b)
}

var fileDescriptor_Statistics_2f837e7b5f1fcd7b = []byte{
	// 728 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5b, 0x53, 0xe2, 0x48,
	0x14, 0x36, 0x02, 0xba, 0x1c, 0x44, 0x63, 0xcb, 0x25, 0xe2, 0x5e, 0xb2, 0x6c, 0xe9, 0xa6, 0xf6,
	0x01, 0x6a, 0xd1, 0x72, 0x6f, 0x2f, 0xeb, 0xa5, 0x5c, 0x2d, 0x75, 0x87, 0x0a, 0x3a, 0x56, 0xcd,
	0x83, 0x56, 0x03, 0x47, 0xe8, 0x22, 0xa4, 0x33, 0xe9, 0x86, 0x91, 0x3f, 0x30, 0x2f, 0xf3, 0xa3,
	0x67, 0x2a, 0xe9, 0x24, 0xc2, 0xa8, 0xc3, 0xcc, 0x5b, 0xf3, 0xdd, 0xce, 0x49, 0x9f, 0xe4, 0x00,
	0x16, 0x7d, 0x78, 0xe0, 0xae, 0xe0, 0xf7, 0xb2, 0xde, 0x76, 0xea, 0x42, 0x52, 0xc9, 0x84, 0x64,
	0x1d, 0x51, 0x6f, 0x25, 0xc7, 0x9a, 0xe7, 0x73, 0xc9, 0x49, 0x39, 0x51, 0xd6, 0xda, 0x4e, 0xed,
	0x51, 0x59, 0xf9, 0xbe, 0xc7, 0x79, 0xcf, 0xc1, 0x3a, 0xf5, 0x58, 0x9d, 0xba, 0x2e, 0x0f, 0x18,
	0xee, 0x46, 0xb6, 0xea, 0x2d, 0xac, 0x04, 0x51, 0x4d, 0xce, 0x5c, 0x79, 0x8e, 0x13, 0xf2, 0x37,
	0xa4, 0xe5, 0xc4, 0x43, 0x43, 0x33, 0x35, 0x6b, 0xb5, 0xb1, 0x53, 0x7b, 0x21, 0xb5, 0x96, 0x98,
	0xae, 0x26, 0x1e, 0xda, 0xa1, 0x87, 0x10, 0x48, 0xbb, 0x74, 0x88, 0xc6, 0xa2, 0xa9, 0x59, 0x59,
	0x3b, 0x3c, 0x57, 0x3f, 0xa4, 0x20, 0x9b, 0x68, 0x03, 0x45, 0x9f, 0xb9, 0x32, 0x4c, 0xcf, 0xda,
	0xe1, 0x99, 0xfc, 0x01, 0xa9, 0x01, 0x4e, 0x42, 0x53, 0xae, 0xb1, 0x3d, 0xbf, 0xe0, 0x39, 0x4e,
	0xec, 0xc0, 0x41, 0x7e, 0x86, 0xdc, 0x98, 0x3a, 0x23, 0xbc, 0x63, 0xae, 0xdc, 0x6d, 0x18, 0x05,
	0x53, 0xb3, 0x32, 0xa7, 0x0b, 0x36, 0x84, 0xe0, 0x59, 0x80, 0x91, 0x5f, 0x60, 0x45, 0x49, 0x46,
	0x4a, 0x53, 0x34, 0x35, 0x2b, 0x7f, 0xba, 0x60, 0x2b, 0xe3, 0x75, 0x08, 0xce, 0xe4, 0xec, 0xef,
	0x19, 0x25, 0x53, 0xb3, 0x52, 0xd3, 0x39, 0xfb, 0x7b, 0xb3, 0x39, 0xfb, 0x7b, 0x46, 0xd9, 0xd4,
	0xac, 0xf4, 0x4c, 0xce, 0xb4, 0xa8, 0xcb, 0x47, 0x6d, 0x07, 0x0d, 0xc3, 0xd4, 0x2c, 0x2d, 0x11,
	0x1d, 0x87, 0x20, 0xf9, 0x17, 0x96, 0x1c, 0xda, 0x46, 0x47, 0x18, 0x29, 0x33, 0x65, 0xe5, 0x1a,
	0xd6, 0xfc, 0x07, 0xae, 0x5d, 0x04, 0x06, 0x3b, 0xf2, 0x55, 0x7e, 0x87, 0x4c, 0x08, 0x24, 0xd7,
	0xad, 0x3d, 0x5e, 0x37, 0x29, 0x40, 0x26, 0xac, 0x16, 0xcd, 0x40, 0xfd, 0x38, 0x5c, 0x8e, 0xd0,
	0xea, 0x99, 0x9a, 0xb6, 0xb0, 0xf1, 0xed, 0x08, 0x85, 0x24, 0x7f, 0x41, 0x7a, 0x80, 0x13, 0x61,
	0x68, 0x61, 0x2f, 0x5f, 0x79, 0xf9, 0xa1, 0xa5, 0xfa, 0x5e, 0x83, 0x7c, 0x94, 0x25, 0x3c, 0xee,
	0x0a, 0x24, 0x7f, 0x42, 0x26, 0xb0, 0xc4, 0x69, 0xd5, 0xf9, 0x69, 0xb6, 0x32, 0x90, 0x7f, 0x20,
	0x73, 0x4f, 0x99, 0x23, 0x8c, 0xc5, 0x6f, 0xe9, 0x43, 0x79, 0x7e, 0xfb, 0x98, 0x56, 0x8d, 0x24,
	0x6f, 0x23, 0x59, 0x83, 0x5c, 0xab, 0x79, 0x75, 0x77, 0xc1, 0xc6, 0x78, 0xd2, 0x6c, 0xe9, 0x0b,
	0x64, 0x03, 0xd6, 0x62, 0xe0, 0x90, 0x49, 0x9f, 0x4a, 0xd4, 0x35, 0xb2, 0x0e, 0xf9, 0x18, 0xbc,
	0x61, 0x5d, 0xd9, 0xd7, 0x17, 0x09, 0x81, 0xd5, 0x18, 0x3a, 0x45, 0xd6, 0xeb, 0x4b, 0x3d, 0x45,
	0x8a, 0xb0, 0x1e, 0x63, 0x97, 0xd8, 0x65, 0x34, 0xa8, 0xa0, 0xa7, 0x49, 0x09, 0x48, 0x0c, 0xb7,
	0xa4, 0x8f, 0x74, 0x18, 0xe2, 0x19, 0x52, 0x00, 0x3d, 0xc0, 0x5b, 0xe8, 0x8f, 0x59, 0x07, 0x83,
	0xbe, 0x50, 0x5f, 0x22, 0x9b, 0x50, 0x0c, 0xd0, 0x03, 0xbf, 0xd3, 0x67, 0x63, 0x3c, 0xea, 0x53,
	0xd7, 0x45, 0x27, 0xe8, 0x6d, 0x99, 0xfc, 0x00, 0x9b, 0x4f, 0xa9, 0xb8, 0xcb, 0xef, 0x48, 0x05,
	0x4a, 0x4f, 0xe9, 0x0b, 0x2e, 0x84, 0x9e, 0x25, 0x3f, 0x42, 0x25, 0xe0, 0x6c, 0xf4, 0x1c, 0xd6,
	0xa1, 0x11, 0xd7, 0xf4, 0x79, 0xcf, 0x47, 0x21, 0x74, 0x20, 0x5b, 0x50, 0x7e, 0xca, 0xab, 0x96,
	0x72, 0x31, 0x19, 0x05, 0x9f, 0x20, 0x76, 0x5f, 0x8d, 0xd1, 0xbf, 0x77, 0xf8, 0x3b, 0x7d, 0x85,
	0xfc, 0x04, 0x5b, 0x53, 0xe4, 0x6b, 0xee, 0x8c, 0x86, 0x78, 0xe3, 0x33, 0x89, 0x2d, 0x0f, 0xb1,
	0xab, 0xe7, 0xe3, 0xd2, 0x33, 0x02, 0x1b, 0x69, 0x57, 0xf1, 0xab, 0x2f, 0x07, 0xd8, 0xc1, 0xf6,
	0xd1, 0xd7, 0x5e, 0x0c, 0x50, 0xbc, 0xfe, 0xd9, 0x73, 0x2b, 0x5e, 0xb5, 0xbe, 0x1e, 0x8f, 0xe4,
	0xc8, 0x1b, 0x5d, 0x71, 0x49, 0x9d, 0x6b, 0x41, 0x7b, 0xa8, 0x13, 0x62, 0x40, 0x21, 0x80, 0x2f,
	0x71, 0xc8, 0xfd, 0xc9, 0x14, 0xb3, 0x11, 0xcf, 0xff, 0x7f, 0x94, 0x97, 0xf4, 0x41, 0x81, 0x85,
	0x78, 0x82, 0xc7, 0x4c, 0x0c, 0x5a, 0x1e, 0xed, 0xa0, 0xc2, 0x8b, 0xcf, 0x56, 0x56, 0x5c, 0x29,
	0x9e, 0x6e, 0xc4, 0x29, 0xb4, 0xdc, 0xf0, 0x41, 0x4f, 0xd6, 0x71, 0x34, 0x78, 0x72, 0x0b, 0xf9,
	0xff, 0x50, 0x3e, 0x6e, 0x69, 0xf2, 0xe5, 0x97, 0x3a, 0xfe, 0x22, 0x2b, 0x3b, 0xf3, 0x64, 0xea,
	0x63, 0x3b, 0xfc, 0xf5, 0xcd, 0x76, 0x9b, 0xc9, 0xf6, 0xa8, 0x33, 0x40, 0x59, 0xe3, 0x7e, 0xaf,
	0x7e, 0xf0, 0xfc, 0x1f, 0x45, 0x7b, 0x29, 0xdc, 0xf3, 0xbb, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x2a, 0x7f, 0x14, 0x2f, 0x4a, 0x06, 0x00, 0x00,
}
