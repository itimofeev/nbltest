// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/domain/Domain.proto

package domain // import "bitbucket.org/Axxonsoft/bl/domain"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import events "bitbucket.org/Axxonsoft/bl/events"
import ptz "bitbucket.org/Axxonsoft/bl/ptz"
import security "bitbucket.org/Axxonsoft/bl/security"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EViewMode int32

const (
	// Server response includes only basic camera or archive info, with no sub components
	// (like Telemetry, Audio, VideoStreaming or StorageSource) in collection.
	// As for control panels, theirs properties will be omitted (supported axes and buttons).
	EViewMode_VIEW_MODE_NO_CHILD_OBJECTS EViewMode = 0
	// Full representation of a camera or an archive with all sub-components.
	EViewMode_VIEW_MODE_FULL EViewMode = 1
)

var EViewMode_name = map[int32]string{
	0: "VIEW_MODE_NO_CHILD_OBJECTS",
	1: "VIEW_MODE_FULL",
}
var EViewMode_value = map[string]int32{
	"VIEW_MODE_NO_CHILD_OBJECTS": 0,
	"VIEW_MODE_FULL":             1,
}

func (x EViewMode) String() string {
	return proto.EnumName(EViewMode_name, int32(x))
}
func (EViewMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{0}
}

type TelemetryCapabilities_EFreedom int32

const (
	TelemetryCapabilities_PAN   TelemetryCapabilities_EFreedom = 0
	TelemetryCapabilities_TILT  TelemetryCapabilities_EFreedom = 1
	TelemetryCapabilities_FOCUS TelemetryCapabilities_EFreedom = 2
	TelemetryCapabilities_ZOOM  TelemetryCapabilities_EFreedom = 3
	TelemetryCapabilities_IRIS  TelemetryCapabilities_EFreedom = 4
)

var TelemetryCapabilities_EFreedom_name = map[int32]string{
	0: "PAN",
	1: "TILT",
	2: "FOCUS",
	3: "ZOOM",
	4: "IRIS",
}
var TelemetryCapabilities_EFreedom_value = map[string]int32{
	"PAN":   0,
	"TILT":  1,
	"FOCUS": 2,
	"ZOOM":  3,
	"IRIS":  4,
}

func (x TelemetryCapabilities_EFreedom) String() string {
	return proto.EnumName(TelemetryCapabilities_EFreedom_name, int32(x))
}
func (TelemetryCapabilities_EFreedom) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{4, 0}
}

type DetectorEventInfo_EventType int32

const (
	DetectorEventInfo_EVENT_TYPE_UNSPECIFIED DetectorEventInfo_EventType = 0
	DetectorEventInfo_ONE_PHASE_EVENT_TYPE   DetectorEventInfo_EventType = 1
	DetectorEventInfo_TWO_PHASE_EVENT_TYPE   DetectorEventInfo_EventType = 2
	DetectorEventInfo_PERIODICAL_EVENT_TYPE  DetectorEventInfo_EventType = 3
)

var DetectorEventInfo_EventType_name = map[int32]string{
	0: "EVENT_TYPE_UNSPECIFIED",
	1: "ONE_PHASE_EVENT_TYPE",
	2: "TWO_PHASE_EVENT_TYPE",
	3: "PERIODICAL_EVENT_TYPE",
}
var DetectorEventInfo_EventType_value = map[string]int32{
	"EVENT_TYPE_UNSPECIFIED": 0,
	"ONE_PHASE_EVENT_TYPE":   1,
	"TWO_PHASE_EVENT_TYPE":   2,
	"PERIODICAL_EVENT_TYPE":  3,
}

func (x DetectorEventInfo_EventType) String() string {
	return proto.EnumName(DetectorEventInfo_EventType_name, int32(x))
}
func (DetectorEventInfo_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{14, 0}
}

type VideoSteamingDetails struct {
	// TODO: use bitrate field instead of resolution?
	// It seems that bitrate we can easily compute,int32 but parsing
	// resolution from video can be treaky.
	Width                uint32   `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Codec                string   `protobuf:"bytes,3,opt,name=codec" json:"codec,omitempty"`
	Framerate            int32    `protobuf:"varint,4,opt,name=framerate" json:"framerate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoSteamingDetails) Reset()         { *m = VideoSteamingDetails{} }
func (m *VideoSteamingDetails) String() string { return proto.CompactTextString(m) }
func (*VideoSteamingDetails) ProtoMessage()    {}
func (*VideoSteamingDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{0}
}
func (m *VideoSteamingDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoSteamingDetails.Unmarshal(m, b)
}
func (m *VideoSteamingDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoSteamingDetails.Marshal(b, m, deterministic)
}
func (dst *VideoSteamingDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoSteamingDetails.Merge(dst, src)
}
func (m *VideoSteamingDetails) XXX_Size() int {
	return xxx_messageInfo_VideoSteamingDetails.Size(m)
}
func (m *VideoSteamingDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoSteamingDetails.DiscardUnknown(m)
}

var xxx_messageInfo_VideoSteamingDetails proto.InternalMessageInfo

func (m *VideoSteamingDetails) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *VideoSteamingDetails) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VideoSteamingDetails) GetCodec() string {
	if m != nil {
		return m.Codec
	}
	return ""
}

func (m *VideoSteamingDetails) GetFramerate() int32 {
	if m != nil {
		return m.Framerate
	}
	return 0
}

type VideoStreaming struct {
	StreamAcessPoint  string `protobuf:"bytes,1,opt,name=stream_acess_point,json=streamAcessPoint" json:"stream_acess_point,omitempty"`
	DecoderAcessPoint string `protobuf:"bytes,2,opt,name=decoder_acess_point,json=decoderAcessPoint" json:"decoder_acess_point,omitempty"`
	Enabled           bool   `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	DisplayName       string `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId         string `protobuf:"bytes,5,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	// Optional fields
	StreamInfo           *VideoSteamingDetails `protobuf:"bytes,16,opt,name=stream_info,json=streamInfo" json:"stream_info,omitempty"`
	IsActivated          bool                  `protobuf:"varint,25,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *VideoStreaming) Reset()         { *m = VideoStreaming{} }
func (m *VideoStreaming) String() string { return proto.CompactTextString(m) }
func (*VideoStreaming) ProtoMessage()    {}
func (*VideoStreaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{1}
}
func (m *VideoStreaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoStreaming.Unmarshal(m, b)
}
func (m *VideoStreaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoStreaming.Marshal(b, m, deterministic)
}
func (dst *VideoStreaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoStreaming.Merge(dst, src)
}
func (m *VideoStreaming) XXX_Size() int {
	return xxx_messageInfo_VideoStreaming.Size(m)
}
func (m *VideoStreaming) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoStreaming.DiscardUnknown(m)
}

var xxx_messageInfo_VideoStreaming proto.InternalMessageInfo

func (m *VideoStreaming) GetStreamAcessPoint() string {
	if m != nil {
		return m.StreamAcessPoint
	}
	return ""
}

func (m *VideoStreaming) GetDecoderAcessPoint() string {
	if m != nil {
		return m.DecoderAcessPoint
	}
	return ""
}

func (m *VideoStreaming) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *VideoStreaming) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *VideoStreaming) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *VideoStreaming) GetStreamInfo() *VideoSteamingDetails {
	if m != nil {
		return m.StreamInfo
	}
	return nil
}

func (m *VideoStreaming) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

type AudioStreaming struct {
	AccessPoint          string                     `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string                     `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string                     `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	MicrophoneAccess     security.EMicrophoneAccess `protobuf:"varint,4,opt,name=microphone_access,json=microphoneAccess,enum=axxonsoft.bl.security.EMicrophoneAccess" json:"microphone_access,omitempty"`
	IsActivated          bool                       `protobuf:"varint,5,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AudioStreaming) Reset()         { *m = AudioStreaming{} }
func (m *AudioStreaming) String() string { return proto.CompactTextString(m) }
func (*AudioStreaming) ProtoMessage()    {}
func (*AudioStreaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{2}
}
func (m *AudioStreaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AudioStreaming.Unmarshal(m, b)
}
func (m *AudioStreaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AudioStreaming.Marshal(b, m, deterministic)
}
func (dst *AudioStreaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioStreaming.Merge(dst, src)
}
func (m *AudioStreaming) XXX_Size() int {
	return xxx_messageInfo_AudioStreaming.Size(m)
}
func (m *AudioStreaming) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioStreaming.DiscardUnknown(m)
}

var xxx_messageInfo_AudioStreaming proto.InternalMessageInfo

func (m *AudioStreaming) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *AudioStreaming) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *AudioStreaming) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *AudioStreaming) GetMicrophoneAccess() security.EMicrophoneAccess {
	if m != nil {
		return m.MicrophoneAccess
	}
	return security.EMicrophoneAccess_MICROPHONE_ACCESS_UNSPECIFIED
}

func (m *AudioStreaming) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

type Speaker struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string   `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	StateControlAp       string   `protobuf:"bytes,4,opt,name=state_control_ap,json=stateControlAp" json:"state_control_ap,omitempty"`
	AudioSourceAp        string   `protobuf:"bytes,5,opt,name=audio_source_ap,json=audioSourceAp" json:"audio_source_ap,omitempty"`
	IsActivated          bool     `protobuf:"varint,6,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Speaker) Reset()         { *m = Speaker{} }
func (m *Speaker) String() string { return proto.CompactTextString(m) }
func (*Speaker) ProtoMessage()    {}
func (*Speaker) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{3}
}
func (m *Speaker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Speaker.Unmarshal(m, b)
}
func (m *Speaker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Speaker.Marshal(b, m, deterministic)
}
func (dst *Speaker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Speaker.Merge(dst, src)
}
func (m *Speaker) XXX_Size() int {
	return xxx_messageInfo_Speaker.Size(m)
}
func (m *Speaker) XXX_DiscardUnknown() {
	xxx_messageInfo_Speaker.DiscardUnknown(m)
}

var xxx_messageInfo_Speaker proto.InternalMessageInfo

func (m *Speaker) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Speaker) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Speaker) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *Speaker) GetStateControlAp() string {
	if m != nil {
		return m.StateControlAp
	}
	return ""
}

func (m *Speaker) GetAudioSourceAp() string {
	if m != nil {
		return m.AudioSourceAp
	}
	return ""
}

func (m *Speaker) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

type TelemetryCapabilities struct {
	MoveSupported        *ptz.Capabilities     `protobuf:"bytes,1,opt,name=move_supported,json=moveSupported" json:"move_supported,omitempty"`
	FocusSupported       *ptz.Capabilities     `protobuf:"bytes,2,opt,name=focus_supported,json=focusSupported" json:"focus_supported,omitempty"`
	ZoomSupported        *ptz.Capabilities     `protobuf:"bytes,3,opt,name=zoom_supported,json=zoomSupported" json:"zoom_supported,omitempty"`
	IrisSupported        *ptz.Capabilities     `protobuf:"bytes,4,opt,name=iris_supported,json=irisSupported" json:"iris_supported,omitempty"`
	IsAreaZoomSupported  bool                  `protobuf:"varint,5,opt,name=is_area_zoom_supported,json=isAreaZoomSupported" json:"is_area_zoom_supported,omitempty"`
	IsPointMoveSupported bool                  `protobuf:"varint,6,opt,name=is_point_move_supported,json=isPointMoveSupported" json:"is_point_move_supported,omitempty"`
	MaximumPresetCount   int32                 `protobuf:"varint,7,opt,name=maximum_preset_count,json=maximumPresetCount" json:"maximum_preset_count,omitempty"`
	IsToursSupported     bool                  `protobuf:"varint,8,opt,name=is_tours_supported,json=isToursSupported" json:"is_tours_supported,omitempty"`
	Limits               map[int32]*ptz.Limits `protobuf:"bytes,10,rep,name=limits" json:"limits,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TelemetryCapabilities) Reset()         { *m = TelemetryCapabilities{} }
func (m *TelemetryCapabilities) String() string { return proto.CompactTextString(m) }
func (*TelemetryCapabilities) ProtoMessage()    {}
func (*TelemetryCapabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{4}
}
func (m *TelemetryCapabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryCapabilities.Unmarshal(m, b)
}
func (m *TelemetryCapabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryCapabilities.Marshal(b, m, deterministic)
}
func (dst *TelemetryCapabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryCapabilities.Merge(dst, src)
}
func (m *TelemetryCapabilities) XXX_Size() int {
	return xxx_messageInfo_TelemetryCapabilities.Size(m)
}
func (m *TelemetryCapabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryCapabilities.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryCapabilities proto.InternalMessageInfo

func (m *TelemetryCapabilities) GetMoveSupported() *ptz.Capabilities {
	if m != nil {
		return m.MoveSupported
	}
	return nil
}

func (m *TelemetryCapabilities) GetFocusSupported() *ptz.Capabilities {
	if m != nil {
		return m.FocusSupported
	}
	return nil
}

func (m *TelemetryCapabilities) GetZoomSupported() *ptz.Capabilities {
	if m != nil {
		return m.ZoomSupported
	}
	return nil
}

func (m *TelemetryCapabilities) GetIrisSupported() *ptz.Capabilities {
	if m != nil {
		return m.IrisSupported
	}
	return nil
}

func (m *TelemetryCapabilities) GetIsAreaZoomSupported() bool {
	if m != nil {
		return m.IsAreaZoomSupported
	}
	return false
}

func (m *TelemetryCapabilities) GetIsPointMoveSupported() bool {
	if m != nil {
		return m.IsPointMoveSupported
	}
	return false
}

func (m *TelemetryCapabilities) GetMaximumPresetCount() int32 {
	if m != nil {
		return m.MaximumPresetCount
	}
	return 0
}

func (m *TelemetryCapabilities) GetIsToursSupported() bool {
	if m != nil {
		return m.IsToursSupported
	}
	return false
}

func (m *TelemetryCapabilities) GetLimits() map[int32]*ptz.Limits {
	if m != nil {
		return m.Limits
	}
	return nil
}

type TagAndTrack struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string   `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagAndTrack) Reset()         { *m = TagAndTrack{} }
func (m *TagAndTrack) String() string { return proto.CompactTextString(m) }
func (*TagAndTrack) ProtoMessage()    {}
func (*TagAndTrack) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{5}
}
func (m *TagAndTrack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagAndTrack.Unmarshal(m, b)
}
func (m *TagAndTrack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagAndTrack.Marshal(b, m, deterministic)
}
func (dst *TagAndTrack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagAndTrack.Merge(dst, src)
}
func (m *TagAndTrack) XXX_Size() int {
	return xxx_messageInfo_TagAndTrack.Size(m)
}
func (m *TagAndTrack) XXX_DiscardUnknown() {
	xxx_messageInfo_TagAndTrack.DiscardUnknown(m)
}

var xxx_messageInfo_TagAndTrack proto.InternalMessageInfo

func (m *TagAndTrack) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *TagAndTrack) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *TagAndTrack) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

type Telemetry struct {
	AccessPoint       string                      `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName       string                      `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId         string                      `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	TelemetryPriority security.ETelemetryPriority `protobuf:"varint,4,opt,name=telemetry_priority,json=telemetryPriority,enum=axxonsoft.bl.security.ETelemetryPriority" json:"telemetry_priority,omitempty"`
	Capabilities      *TelemetryCapabilities      `protobuf:"bytes,16,opt,name=capabilities" json:"capabilities,omitempty"`
	// If current PTZ control does not support Tag&Track then
	// tag_and_track.access_point is empty.
	TagAndTrack          *TagAndTrack `protobuf:"bytes,17,opt,name=tag_and_track,json=tagAndTrack" json:"tag_and_track,omitempty"`
	IsActivated          bool         `protobuf:"varint,25,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Telemetry) Reset()         { *m = Telemetry{} }
func (m *Telemetry) String() string { return proto.CompactTextString(m) }
func (*Telemetry) ProtoMessage()    {}
func (*Telemetry) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{6}
}
func (m *Telemetry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry.Unmarshal(m, b)
}
func (m *Telemetry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry.Marshal(b, m, deterministic)
}
func (dst *Telemetry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry.Merge(dst, src)
}
func (m *Telemetry) XXX_Size() int {
	return xxx_messageInfo_Telemetry.Size(m)
}
func (m *Telemetry) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry proto.InternalMessageInfo

func (m *Telemetry) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Telemetry) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Telemetry) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *Telemetry) GetTelemetryPriority() security.ETelemetryPriority {
	if m != nil {
		return m.TelemetryPriority
	}
	return security.ETelemetryPriority_TELEMETRY_PRIORITY_UNSPECIFIED
}

func (m *Telemetry) GetCapabilities() *TelemetryCapabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *Telemetry) GetTagAndTrack() *TagAndTrack {
	if m != nil {
		return m.TagAndTrack
	}
	return nil
}

func (m *Telemetry) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

// Single archive track
type StorageSource struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Storage              string   `protobuf:"bytes,2,opt,name=storage" json:"storage,omitempty"`
	Binding              string   `protobuf:"bytes,3,opt,name=binding" json:"binding,omitempty"`
	MediaSource          string   `protobuf:"bytes,4,opt,name=media_source,json=mediaSource" json:"media_source,omitempty"`
	Origin               string   `protobuf:"bytes,5,opt,name=origin" json:"origin,omitempty"`
	Mimetype             string   `protobuf:"bytes,6,opt,name=mimetype" json:"mimetype,omitempty"`
	OriginStorage        string   `protobuf:"bytes,7,opt,name=origin_storage,json=originStorage" json:"origin_storage,omitempty"`
	OriginStorageSource  string   `protobuf:"bytes,8,opt,name=origin_storage_source,json=originStorageSource" json:"origin_storage_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageSource) Reset()         { *m = StorageSource{} }
func (m *StorageSource) String() string { return proto.CompactTextString(m) }
func (*StorageSource) ProtoMessage()    {}
func (*StorageSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{7}
}
func (m *StorageSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageSource.Unmarshal(m, b)
}
func (m *StorageSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageSource.Marshal(b, m, deterministic)
}
func (dst *StorageSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageSource.Merge(dst, src)
}
func (m *StorageSource) XXX_Size() int {
	return xxx_messageInfo_StorageSource.Size(m)
}
func (m *StorageSource) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageSource.DiscardUnknown(m)
}

var xxx_messageInfo_StorageSource proto.InternalMessageInfo

func (m *StorageSource) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *StorageSource) GetStorage() string {
	if m != nil {
		return m.Storage
	}
	return ""
}

func (m *StorageSource) GetBinding() string {
	if m != nil {
		return m.Binding
	}
	return ""
}

func (m *StorageSource) GetMediaSource() string {
	if m != nil {
		return m.MediaSource
	}
	return ""
}

func (m *StorageSource) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *StorageSource) GetMimetype() string {
	if m != nil {
		return m.Mimetype
	}
	return ""
}

func (m *StorageSource) GetOriginStorage() string {
	if m != nil {
		return m.OriginStorage
	}
	return ""
}

func (m *StorageSource) GetOriginStorageSource() string {
	if m != nil {
		return m.OriginStorageSource
	}
	return ""
}

// Several logically connected traks
type ArchiveBinding struct {
	// Usally camera or source name
	Name                 string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Storage              string           `protobuf:"bytes,2,opt,name=storage" json:"storage,omitempty"`
	Camera               *Camera          `protobuf:"bytes,3,opt,name=camera" json:"camera,omitempty"`
	Archive              *Archive         `protobuf:"bytes,4,opt,name=archive" json:"archive,omitempty"`
	IsDefault            bool             `protobuf:"varint,5,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	Sources              []*StorageSource `protobuf:"bytes,16,rep,name=sources" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ArchiveBinding) Reset()         { *m = ArchiveBinding{} }
func (m *ArchiveBinding) String() string { return proto.CompactTextString(m) }
func (*ArchiveBinding) ProtoMessage()    {}
func (*ArchiveBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{8}
}
func (m *ArchiveBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveBinding.Unmarshal(m, b)
}
func (m *ArchiveBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveBinding.Marshal(b, m, deterministic)
}
func (dst *ArchiveBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveBinding.Merge(dst, src)
}
func (m *ArchiveBinding) XXX_Size() int {
	return xxx_messageInfo_ArchiveBinding.Size(m)
}
func (m *ArchiveBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveBinding.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveBinding proto.InternalMessageInfo

func (m *ArchiveBinding) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArchiveBinding) GetStorage() string {
	if m != nil {
		return m.Storage
	}
	return ""
}

func (m *ArchiveBinding) GetCamera() *Camera {
	if m != nil {
		return m.Camera
	}
	return nil
}

func (m *ArchiveBinding) GetArchive() *Archive {
	if m != nil {
		return m.Archive
	}
	return nil
}

func (m *ArchiveBinding) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *ArchiveBinding) GetSources() []*StorageSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

type Archive struct {
	AccessPoint          string                  `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string                  `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string                  `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	IsEmbedded           bool                    `protobuf:"varint,4,opt,name=is_embedded,json=isEmbedded" json:"is_embedded,omitempty"`
	ArchiveAccess        security.EArchiveAccess `protobuf:"varint,5,opt,name=archive_access,json=archiveAccess,enum=axxonsoft.bl.security.EArchiveAccess" json:"archive_access,omitempty"`
	Bindings             []*ArchiveBinding       `protobuf:"bytes,16,rep,name=bindings" json:"bindings,omitempty"`
	IsActivated          bool                    `protobuf:"varint,17,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Archive) Reset()         { *m = Archive{} }
func (m *Archive) String() string { return proto.CompactTextString(m) }
func (*Archive) ProtoMessage()    {}
func (*Archive) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{9}
}
func (m *Archive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Archive.Unmarshal(m, b)
}
func (m *Archive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Archive.Marshal(b, m, deterministic)
}
func (dst *Archive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Archive.Merge(dst, src)
}
func (m *Archive) XXX_Size() int {
	return xxx_messageInfo_Archive.Size(m)
}
func (m *Archive) XXX_DiscardUnknown() {
	xxx_messageInfo_Archive.DiscardUnknown(m)
}

var xxx_messageInfo_Archive proto.InternalMessageInfo

func (m *Archive) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Archive) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Archive) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *Archive) GetIsEmbedded() bool {
	if m != nil {
		return m.IsEmbedded
	}
	return false
}

func (m *Archive) GetArchiveAccess() security.EArchiveAccess {
	if m != nil {
		return m.ArchiveAccess
	}
	return security.EArchiveAccess_ARCHIVE_ACCESS_UNSPECIFIED
}

func (m *Archive) GetBindings() []*ArchiveBinding {
	if m != nil {
		return m.Bindings
	}
	return nil
}

func (m *Archive) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

type Ray struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string   `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ray) Reset()         { *m = Ray{} }
func (m *Ray) String() string { return proto.CompactTextString(m) }
func (*Ray) ProtoMessage()    {}
func (*Ray) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{10}
}
func (m *Ray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ray.Unmarshal(m, b)
}
func (m *Ray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ray.Marshal(b, m, deterministic)
}
func (dst *Ray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ray.Merge(dst, src)
}
func (m *Ray) XXX_Size() int {
	return xxx_messageInfo_Ray.Size(m)
}
func (m *Ray) XXX_DiscardUnknown() {
	xxx_messageInfo_Ray.DiscardUnknown(m)
}

var xxx_messageInfo_Ray proto.InternalMessageInfo

func (m *Ray) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Ray) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Ray) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

type Relay struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string   `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Relay) Reset()         { *m = Relay{} }
func (m *Relay) String() string { return proto.CompactTextString(m) }
func (*Relay) ProtoMessage()    {}
func (*Relay) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{11}
}
func (m *Relay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Relay.Unmarshal(m, b)
}
func (m *Relay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Relay.Marshal(b, m, deterministic)
}
func (dst *Relay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Relay.Merge(dst, src)
}
func (m *Relay) XXX_Size() int {
	return xxx_messageInfo_Relay.Size(m)
}
func (m *Relay) XXX_DiscardUnknown() {
	xxx_messageInfo_Relay.DiscardUnknown(m)
}

var xxx_messageInfo_Relay proto.InternalMessageInfo

func (m *Relay) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Relay) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Relay) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

type TextSource struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string   `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextSource) Reset()         { *m = TextSource{} }
func (m *TextSource) String() string { return proto.CompactTextString(m) }
func (*TextSource) ProtoMessage()    {}
func (*TextSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{12}
}
func (m *TextSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextSource.Unmarshal(m, b)
}
func (m *TextSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextSource.Marshal(b, m, deterministic)
}
func (dst *TextSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextSource.Merge(dst, src)
}
func (m *TextSource) XXX_Size() int {
	return xxx_messageInfo_TextSource.Size(m)
}
func (m *TextSource) XXX_DiscardUnknown() {
	xxx_messageInfo_TextSource.DiscardUnknown(m)
}

var xxx_messageInfo_TextSource proto.InternalMessageInfo

func (m *TextSource) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *TextSource) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *TextSource) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

type SceneDescription struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SceneDescription) Reset()         { *m = SceneDescription{} }
func (m *SceneDescription) String() string { return proto.CompactTextString(m) }
func (*SceneDescription) ProtoMessage()    {}
func (*SceneDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{13}
}
func (m *SceneDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneDescription.Unmarshal(m, b)
}
func (m *SceneDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneDescription.Marshal(b, m, deterministic)
}
func (dst *SceneDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneDescription.Merge(dst, src)
}
func (m *SceneDescription) XXX_Size() int {
	return xxx_messageInfo_SceneDescription.Size(m)
}
func (m *SceneDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneDescription.DiscardUnknown(m)
}

var xxx_messageInfo_SceneDescription proto.InternalMessageInfo

func (m *SceneDescription) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type DetectorEventInfo struct {
	Id                   string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	EventType            DetectorEventInfo_EventType `protobuf:"varint,3,opt,name=event_type,json=eventType,enum=axxonsoft.bl.domain.DetectorEventInfo_EventType" json:"event_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DetectorEventInfo) Reset()         { *m = DetectorEventInfo{} }
func (m *DetectorEventInfo) String() string { return proto.CompactTextString(m) }
func (*DetectorEventInfo) ProtoMessage()    {}
func (*DetectorEventInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{14}
}
func (m *DetectorEventInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorEventInfo.Unmarshal(m, b)
}
func (m *DetectorEventInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorEventInfo.Marshal(b, m, deterministic)
}
func (dst *DetectorEventInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorEventInfo.Merge(dst, src)
}
func (m *DetectorEventInfo) XXX_Size() int {
	return xxx_messageInfo_DetectorEventInfo.Size(m)
}
func (m *DetectorEventInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorEventInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorEventInfo proto.InternalMessageInfo

func (m *DetectorEventInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DetectorEventInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetectorEventInfo) GetEventType() DetectorEventInfo_EventType {
	if m != nil {
		return m.EventType
	}
	return DetectorEventInfo_EVENT_TYPE_UNSPECIFIED
}

type Detector struct {
	AccessPoint          string               `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string               `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string               `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	ParentDetector       string               `protobuf:"bytes,4,opt,name=parent_detector,json=parentDetector" json:"parent_detector,omitempty"`
	IsActivated          bool                 `protobuf:"varint,5,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	SceneDescriptions    []*SceneDescription  `protobuf:"bytes,16,rep,name=scene_descriptions,json=sceneDescriptions" json:"scene_descriptions,omitempty"`
	Events               []*DetectorEventInfo `protobuf:"bytes,17,rep,name=events" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Detector) Reset()         { *m = Detector{} }
func (m *Detector) String() string { return proto.CompactTextString(m) }
func (*Detector) ProtoMessage()    {}
func (*Detector) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{15}
}
func (m *Detector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Detector.Unmarshal(m, b)
}
func (m *Detector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Detector.Marshal(b, m, deterministic)
}
func (dst *Detector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Detector.Merge(dst, src)
}
func (m *Detector) XXX_Size() int {
	return xxx_messageInfo_Detector.Size(m)
}
func (m *Detector) XXX_DiscardUnknown() {
	xxx_messageInfo_Detector.DiscardUnknown(m)
}

var xxx_messageInfo_Detector proto.InternalMessageInfo

func (m *Detector) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Detector) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Detector) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *Detector) GetParentDetector() string {
	if m != nil {
		return m.ParentDetector
	}
	return ""
}

func (m *Detector) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

func (m *Detector) GetSceneDescriptions() []*SceneDescription {
	if m != nil {
		return m.SceneDescriptions
	}
	return nil
}

func (m *Detector) GetEvents() []*DetectorEventInfo {
	if m != nil {
		return m.Events
	}
	return nil
}

type Camera struct {
	AccessPoint          string                 `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string                 `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	Version              string                 `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	IpAddress            string                 `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	CameraAccess         security.ECameraAccess `protobuf:"varint,6,opt,name=camera_access,json=cameraAccess,enum=axxonsoft.bl.security.ECameraAccess" json:"camera_access,omitempty"`
	Vendor               string                 `protobuf:"bytes,7,opt,name=vendor" json:"vendor,omitempty"`
	Model                string                 `protobuf:"bytes,8,opt,name=model" json:"model,omitempty"`
	Comment              string                 `protobuf:"bytes,9,opt,name=comment" json:"comment,omitempty"`
	Armed                bool                   `protobuf:"varint,10,opt,name=armed" json:"armed,omitempty"`
	GeoLocationLatitude  string                 `protobuf:"bytes,11,opt,name=geo_location_latitude,json=geoLocationLatitude" json:"geo_location_latitude,omitempty"`
	GeoLocationLongitude string                 `protobuf:"bytes,12,opt,name=geo_location_longitude,json=geoLocationLongitude" json:"geo_location_longitude,omitempty"`
	VideoStreams         []*VideoStreaming      `protobuf:"bytes,16,rep,name=video_streams,json=videoStreams" json:"video_streams,omitempty"`
	Microphones          []*AudioStreaming      `protobuf:"bytes,17,rep,name=microphones" json:"microphones,omitempty"`
	Ptzs                 []*Telemetry           `protobuf:"bytes,18,rep,name=ptzs" json:"ptzs,omitempty"`
	ArchiveBindings      []*ArchiveBinding      `protobuf:"bytes,19,rep,name=archive_bindings,json=archiveBindings" json:"archive_bindings,omitempty"`
	Ray                  []*Ray                 `protobuf:"bytes,20,rep,name=ray" json:"ray,omitempty"`
	Relay                []*Relay               `protobuf:"bytes,21,rep,name=relay" json:"relay,omitempty"`
	// Live detectors
	Detectors []*Detector `protobuf:"bytes,22,rep,name=detectors" json:"detectors,omitempty"`
	// Offline analytics
	OfflineDetectors     []*Detector   `protobuf:"bytes,23,rep,name=offline_detectors,json=offlineDetectors" json:"offline_detectors,omitempty"`
	GroupIds             []string      `protobuf:"bytes,24,rep,name=group_ids,json=groupIds" json:"group_ids,omitempty"`
	IsActivated          bool          `protobuf:"varint,25,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	TextSources          []*TextSource `protobuf:"bytes,26,rep,name=text_sources,json=textSources" json:"text_sources,omitempty"`
	Speakers             []*Speaker    `protobuf:"bytes,27,rep,name=speakers" json:"speakers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Camera) Reset()         { *m = Camera{} }
func (m *Camera) String() string { return proto.CompactTextString(m) }
func (*Camera) ProtoMessage()    {}
func (*Camera) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{16}
}
func (m *Camera) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Camera.Unmarshal(m, b)
}
func (m *Camera) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Camera.Marshal(b, m, deterministic)
}
func (dst *Camera) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Camera.Merge(dst, src)
}
func (m *Camera) XXX_Size() int {
	return xxx_messageInfo_Camera.Size(m)
}
func (m *Camera) XXX_DiscardUnknown() {
	xxx_messageInfo_Camera.DiscardUnknown(m)
}

var xxx_messageInfo_Camera proto.InternalMessageInfo

func (m *Camera) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *Camera) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Camera) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *Camera) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Camera) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Camera) GetCameraAccess() security.ECameraAccess {
	if m != nil {
		return m.CameraAccess
	}
	return security.ECameraAccess_CAMERA_ACCESS_UNSPECIFIED
}

func (m *Camera) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Camera) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Camera) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Camera) GetArmed() bool {
	if m != nil {
		return m.Armed
	}
	return false
}

func (m *Camera) GetGeoLocationLatitude() string {
	if m != nil {
		return m.GeoLocationLatitude
	}
	return ""
}

func (m *Camera) GetGeoLocationLongitude() string {
	if m != nil {
		return m.GeoLocationLongitude
	}
	return ""
}

func (m *Camera) GetVideoStreams() []*VideoStreaming {
	if m != nil {
		return m.VideoStreams
	}
	return nil
}

func (m *Camera) GetMicrophones() []*AudioStreaming {
	if m != nil {
		return m.Microphones
	}
	return nil
}

func (m *Camera) GetPtzs() []*Telemetry {
	if m != nil {
		return m.Ptzs
	}
	return nil
}

func (m *Camera) GetArchiveBindings() []*ArchiveBinding {
	if m != nil {
		return m.ArchiveBindings
	}
	return nil
}

func (m *Camera) GetRay() []*Ray {
	if m != nil {
		return m.Ray
	}
	return nil
}

func (m *Camera) GetRelay() []*Relay {
	if m != nil {
		return m.Relay
	}
	return nil
}

func (m *Camera) GetDetectors() []*Detector {
	if m != nil {
		return m.Detectors
	}
	return nil
}

func (m *Camera) GetOfflineDetectors() []*Detector {
	if m != nil {
		return m.OfflineDetectors
	}
	return nil
}

func (m *Camera) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *Camera) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

func (m *Camera) GetTextSources() []*TextSource {
	if m != nil {
		return m.TextSources
	}
	return nil
}

func (m *Camera) GetSpeakers() []*Speaker {
	if m != nil {
		return m.Speakers
	}
	return nil
}

type ControlPanel struct {
	AccessPoint          string                   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	DisplayName          string                   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayId            string                   `protobuf:"bytes,3,opt,name=display_id,json=displayId" json:"display_id,omitempty"`
	Vendor               string                   `protobuf:"bytes,4,opt,name=vendor" json:"vendor,omitempty"`
	Model                string                   `protobuf:"bytes,5,opt,name=model" json:"model,omitempty"`
	IsActivated          bool                     `protobuf:"varint,6,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	Properties           *ControlPanel_Properties `protobuf:"bytes,16,opt,name=properties" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ControlPanel) Reset()         { *m = ControlPanel{} }
func (m *ControlPanel) String() string { return proto.CompactTextString(m) }
func (*ControlPanel) ProtoMessage()    {}
func (*ControlPanel) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{17}
}
func (m *ControlPanel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPanel.Unmarshal(m, b)
}
func (m *ControlPanel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPanel.Marshal(b, m, deterministic)
}
func (dst *ControlPanel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPanel.Merge(dst, src)
}
func (m *ControlPanel) XXX_Size() int {
	return xxx_messageInfo_ControlPanel.Size(m)
}
func (m *ControlPanel) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPanel.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPanel proto.InternalMessageInfo

func (m *ControlPanel) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *ControlPanel) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ControlPanel) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *ControlPanel) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *ControlPanel) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *ControlPanel) GetIsActivated() bool {
	if m != nil {
		return m.IsActivated
	}
	return false
}

func (m *ControlPanel) GetProperties() *ControlPanel_Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ControlPanel_Properties struct {
	// Information about control panel's axes, where:
	//  key   - axis id (e.g. "pan", "tilt", "zoom" etc.)
	//  value - localization name
	Axes map[string]string `protobuf:"bytes,1,rep,name=axes" json:"axes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Information about control panel's buttons, where:
	//  key   - button number
	//  value - localization name
	Buttons              map[int32]string `protobuf:"bytes,2,rep,name=buttons" json:"buttons,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ControlPanel_Properties) Reset()         { *m = ControlPanel_Properties{} }
func (m *ControlPanel_Properties) String() string { return proto.CompactTextString(m) }
func (*ControlPanel_Properties) ProtoMessage()    {}
func (*ControlPanel_Properties) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{17, 0}
}
func (m *ControlPanel_Properties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPanel_Properties.Unmarshal(m, b)
}
func (m *ControlPanel_Properties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPanel_Properties.Marshal(b, m, deterministic)
}
func (dst *ControlPanel_Properties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPanel_Properties.Merge(dst, src)
}
func (m *ControlPanel_Properties) XXX_Size() int {
	return xxx_messageInfo_ControlPanel_Properties.Size(m)
}
func (m *ControlPanel_Properties) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPanel_Properties.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPanel_Properties proto.InternalMessageInfo

func (m *ControlPanel_Properties) GetAxes() map[string]string {
	if m != nil {
		return m.Axes
	}
	return nil
}

func (m *ControlPanel_Properties) GetButtons() map[int32]string {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type GetVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{18}
}
func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (dst *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(dst, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

type GetVersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{19}
}
func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (dst *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(dst, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type GetHostPlatformInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostPlatformInfoRequest) Reset()         { *m = GetHostPlatformInfoRequest{} }
func (m *GetHostPlatformInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetHostPlatformInfoRequest) ProtoMessage()    {}
func (*GetHostPlatformInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{20}
}
func (m *GetHostPlatformInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostPlatformInfoRequest.Unmarshal(m, b)
}
func (m *GetHostPlatformInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostPlatformInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetHostPlatformInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostPlatformInfoRequest.Merge(dst, src)
}
func (m *GetHostPlatformInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetHostPlatformInfoRequest.Size(m)
}
func (m *GetHostPlatformInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostPlatformInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostPlatformInfoRequest proto.InternalMessageInfo

type GetHostPlatformInfoResponse struct {
	OsSysName            string            `protobuf:"bytes,1,opt,name=os_sys_name,json=osSysName" json:"os_sys_name,omitempty"`
	OsRelease            string            `protobuf:"bytes,2,opt,name=os_release,json=osRelease" json:"os_release,omitempty"`
	OsVersion            string            `protobuf:"bytes,3,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	OsMachine            string            `protobuf:"bytes,4,opt,name=os_machine,json=osMachine" json:"os_machine,omitempty"`
	ComputerName         string            `protobuf:"bytes,5,opt,name=computer_name,json=computerName" json:"computer_name,omitempty"`
	ServerVersion        string            `protobuf:"bytes,6,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	AdditionalInfo       map[string]string `protobuf:"bytes,16,rep,name=additional_info,json=additionalInfo" json:"additional_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetHostPlatformInfoResponse) Reset()         { *m = GetHostPlatformInfoResponse{} }
func (m *GetHostPlatformInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetHostPlatformInfoResponse) ProtoMessage()    {}
func (*GetHostPlatformInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{21}
}
func (m *GetHostPlatformInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostPlatformInfoResponse.Unmarshal(m, b)
}
func (m *GetHostPlatformInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostPlatformInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetHostPlatformInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostPlatformInfoResponse.Merge(dst, src)
}
func (m *GetHostPlatformInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetHostPlatformInfoResponse.Size(m)
}
func (m *GetHostPlatformInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostPlatformInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostPlatformInfoResponse proto.InternalMessageInfo

func (m *GetHostPlatformInfoResponse) GetOsSysName() string {
	if m != nil {
		return m.OsSysName
	}
	return ""
}

func (m *GetHostPlatformInfoResponse) GetOsRelease() string {
	if m != nil {
		return m.OsRelease
	}
	return ""
}

func (m *GetHostPlatformInfoResponse) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *GetHostPlatformInfoResponse) GetOsMachine() string {
	if m != nil {
		return m.OsMachine
	}
	return ""
}

func (m *GetHostPlatformInfoResponse) GetComputerName() string {
	if m != nil {
		return m.ComputerName
	}
	return ""
}

func (m *GetHostPlatformInfoResponse) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

func (m *GetHostPlatformInfoResponse) GetAdditionalInfo() map[string]string {
	if m != nil {
		return m.AdditionalInfo
	}
	return nil
}

type ListCamerasRequest struct {
	Filter    string    `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	View      EViewMode `protobuf:"varint,2,opt,name=view,enum=axxonsoft.bl.domain.EViewMode" json:"view,omitempty"`
	PageToken string    `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	PageSize  int32     `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// group_ids is a filter.
	// Return only cameras which are included in the group_ids.
	// If group_ids is empty will be returned cameras of all groups.
	GroupIds             []string `protobuf:"bytes,5,rep,name=group_ids,json=groupIds" json:"group_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCamerasRequest) Reset()         { *m = ListCamerasRequest{} }
func (m *ListCamerasRequest) String() string { return proto.CompactTextString(m) }
func (*ListCamerasRequest) ProtoMessage()    {}
func (*ListCamerasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{22}
}
func (m *ListCamerasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCamerasRequest.Unmarshal(m, b)
}
func (m *ListCamerasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCamerasRequest.Marshal(b, m, deterministic)
}
func (dst *ListCamerasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCamerasRequest.Merge(dst, src)
}
func (m *ListCamerasRequest) XXX_Size() int {
	return xxx_messageInfo_ListCamerasRequest.Size(m)
}
func (m *ListCamerasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCamerasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCamerasRequest proto.InternalMessageInfo

func (m *ListCamerasRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListCamerasRequest) GetView() EViewMode {
	if m != nil {
		return m.View
	}
	return EViewMode_VIEW_MODE_NO_CHILD_OBJECTS
}

func (m *ListCamerasRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListCamerasRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCamerasRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

type ListCamerasResponse struct {
	Items                []*Camera `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NextPageToken        string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListCamerasResponse) Reset()         { *m = ListCamerasResponse{} }
func (m *ListCamerasResponse) String() string { return proto.CompactTextString(m) }
func (*ListCamerasResponse) ProtoMessage()    {}
func (*ListCamerasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{23}
}
func (m *ListCamerasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCamerasResponse.Unmarshal(m, b)
}
func (m *ListCamerasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCamerasResponse.Marshal(b, m, deterministic)
}
func (dst *ListCamerasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCamerasResponse.Merge(dst, src)
}
func (m *ListCamerasResponse) XXX_Size() int {
	return xxx_messageInfo_ListCamerasResponse.Size(m)
}
func (m *ListCamerasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCamerasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCamerasResponse proto.InternalMessageInfo

func (m *ListCamerasResponse) GetItems() []*Camera {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListCamerasResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ResourceLocator struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceLocator) Reset()         { *m = ResourceLocator{} }
func (m *ResourceLocator) String() string { return proto.CompactTextString(m) }
func (*ResourceLocator) ProtoMessage()    {}
func (*ResourceLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{24}
}
func (m *ResourceLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceLocator.Unmarshal(m, b)
}
func (m *ResourceLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceLocator.Marshal(b, m, deterministic)
}
func (dst *ResourceLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceLocator.Merge(dst, src)
}
func (m *ResourceLocator) XXX_Size() int {
	return xxx_messageInfo_ResourceLocator.Size(m)
}
func (m *ResourceLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceLocator.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceLocator proto.InternalMessageInfo

func (m *ResourceLocator) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *ResourceLocator) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type BatchGetCamerasRequest struct {
	Items                []*ResourceLocator `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BatchGetCamerasRequest) Reset()         { *m = BatchGetCamerasRequest{} }
func (m *BatchGetCamerasRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetCamerasRequest) ProtoMessage()    {}
func (*BatchGetCamerasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{25}
}
func (m *BatchGetCamerasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetCamerasRequest.Unmarshal(m, b)
}
func (m *BatchGetCamerasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetCamerasRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetCamerasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetCamerasRequest.Merge(dst, src)
}
func (m *BatchGetCamerasRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetCamerasRequest.Size(m)
}
func (m *BatchGetCamerasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetCamerasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetCamerasRequest proto.InternalMessageInfo

func (m *BatchGetCamerasRequest) GetItems() []*ResourceLocator {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetCamerasByComponentsRequest struct {
	// items consist of access points of camera components
	// i.e. detector, telemetry, ray (etc.) access point
	// and versions.
	Items                []*ResourceLocator `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetCamerasByComponentsRequest) Reset()         { *m = GetCamerasByComponentsRequest{} }
func (m *GetCamerasByComponentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCamerasByComponentsRequest) ProtoMessage()    {}
func (*GetCamerasByComponentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{26}
}
func (m *GetCamerasByComponentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCamerasByComponentsRequest.Unmarshal(m, b)
}
func (m *GetCamerasByComponentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCamerasByComponentsRequest.Marshal(b, m, deterministic)
}
func (dst *GetCamerasByComponentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCamerasByComponentsRequest.Merge(dst, src)
}
func (m *GetCamerasByComponentsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCamerasByComponentsRequest.Size(m)
}
func (m *GetCamerasByComponentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCamerasByComponentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCamerasByComponentsRequest proto.InternalMessageInfo

func (m *GetCamerasByComponentsRequest) GetItems() []*ResourceLocator {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetCamerasByComponentsResponse struct {
	Items                []*Camera `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NotFoundObjects      []string  `protobuf:"bytes,2,rep,name=not_found_objects,json=notFoundObjects" json:"not_found_objects,omitempty"`
	UnreachableObjects   []string  `protobuf:"bytes,3,rep,name=unreachable_objects,json=unreachableObjects" json:"unreachable_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetCamerasByComponentsResponse) Reset()         { *m = GetCamerasByComponentsResponse{} }
func (m *GetCamerasByComponentsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCamerasByComponentsResponse) ProtoMessage()    {}
func (*GetCamerasByComponentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{27}
}
func (m *GetCamerasByComponentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCamerasByComponentsResponse.Unmarshal(m, b)
}
func (m *GetCamerasByComponentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCamerasByComponentsResponse.Marshal(b, m, deterministic)
}
func (dst *GetCamerasByComponentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCamerasByComponentsResponse.Merge(dst, src)
}
func (m *GetCamerasByComponentsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCamerasByComponentsResponse.Size(m)
}
func (m *GetCamerasByComponentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCamerasByComponentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCamerasByComponentsResponse proto.InternalMessageInfo

func (m *GetCamerasByComponentsResponse) GetItems() []*Camera {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GetCamerasByComponentsResponse) GetNotFoundObjects() []string {
	if m != nil {
		return m.NotFoundObjects
	}
	return nil
}

func (m *GetCamerasByComponentsResponse) GetUnreachableObjects() []string {
	if m != nil {
		return m.UnreachableObjects
	}
	return nil
}

type BatchGetCamerasResponse struct {
	Items                []*Camera `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NotFoundObjects      []string  `protobuf:"bytes,2,rep,name=not_found_objects,json=notFoundObjects" json:"not_found_objects,omitempty"`
	UnreachableObjects   []string  `protobuf:"bytes,3,rep,name=unreachable_objects,json=unreachableObjects" json:"unreachable_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BatchGetCamerasResponse) Reset()         { *m = BatchGetCamerasResponse{} }
func (m *BatchGetCamerasResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetCamerasResponse) ProtoMessage()    {}
func (*BatchGetCamerasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{28}
}
func (m *BatchGetCamerasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetCamerasResponse.Unmarshal(m, b)
}
func (m *BatchGetCamerasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetCamerasResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetCamerasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetCamerasResponse.Merge(dst, src)
}
func (m *BatchGetCamerasResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetCamerasResponse.Size(m)
}
func (m *BatchGetCamerasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetCamerasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetCamerasResponse proto.InternalMessageInfo

func (m *BatchGetCamerasResponse) GetItems() []*Camera {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BatchGetCamerasResponse) GetNotFoundObjects() []string {
	if m != nil {
		return m.NotFoundObjects
	}
	return nil
}

func (m *BatchGetCamerasResponse) GetUnreachableObjects() []string {
	if m != nil {
		return m.UnreachableObjects
	}
	return nil
}

type BatchGetArchivesRequest struct {
	Items                []*ResourceLocator `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BatchGetArchivesRequest) Reset()         { *m = BatchGetArchivesRequest{} }
func (m *BatchGetArchivesRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetArchivesRequest) ProtoMessage()    {}
func (*BatchGetArchivesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{29}
}
func (m *BatchGetArchivesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetArchivesRequest.Unmarshal(m, b)
}
func (m *BatchGetArchivesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetArchivesRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetArchivesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetArchivesRequest.Merge(dst, src)
}
func (m *BatchGetArchivesRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetArchivesRequest.Size(m)
}
func (m *BatchGetArchivesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetArchivesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetArchivesRequest proto.InternalMessageInfo

func (m *BatchGetArchivesRequest) GetItems() []*ResourceLocator {
	if m != nil {
		return m.Items
	}
	return nil
}

type BatchGetArchivesResponse struct {
	Items                []*Archive `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NotFoundObjects      []string   `protobuf:"bytes,2,rep,name=not_found_objects,json=notFoundObjects" json:"not_found_objects,omitempty"`
	UnreachableObjects   []string   `protobuf:"bytes,3,rep,name=unreachable_objects,json=unreachableObjects" json:"unreachable_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BatchGetArchivesResponse) Reset()         { *m = BatchGetArchivesResponse{} }
func (m *BatchGetArchivesResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetArchivesResponse) ProtoMessage()    {}
func (*BatchGetArchivesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{30}
}
func (m *BatchGetArchivesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetArchivesResponse.Unmarshal(m, b)
}
func (m *BatchGetArchivesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetArchivesResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetArchivesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetArchivesResponse.Merge(dst, src)
}
func (m *BatchGetArchivesResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetArchivesResponse.Size(m)
}
func (m *BatchGetArchivesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetArchivesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetArchivesResponse proto.InternalMessageInfo

func (m *BatchGetArchivesResponse) GetItems() []*Archive {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BatchGetArchivesResponse) GetNotFoundObjects() []string {
	if m != nil {
		return m.NotFoundObjects
	}
	return nil
}

func (m *BatchGetArchivesResponse) GetUnreachableObjects() []string {
	if m != nil {
		return m.UnreachableObjects
	}
	return nil
}

type ListArchivesRequest struct {
	Filter               string    `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	View                 EViewMode `protobuf:"varint,2,opt,name=view,enum=axxonsoft.bl.domain.EViewMode" json:"view,omitempty"`
	PageToken            string    `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	PageSize             int32     `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListArchivesRequest) Reset()         { *m = ListArchivesRequest{} }
func (m *ListArchivesRequest) String() string { return proto.CompactTextString(m) }
func (*ListArchivesRequest) ProtoMessage()    {}
func (*ListArchivesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{31}
}
func (m *ListArchivesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArchivesRequest.Unmarshal(m, b)
}
func (m *ListArchivesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArchivesRequest.Marshal(b, m, deterministic)
}
func (dst *ListArchivesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArchivesRequest.Merge(dst, src)
}
func (m *ListArchivesRequest) XXX_Size() int {
	return xxx_messageInfo_ListArchivesRequest.Size(m)
}
func (m *ListArchivesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArchivesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArchivesRequest proto.InternalMessageInfo

func (m *ListArchivesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListArchivesRequest) GetView() EViewMode {
	if m != nil {
		return m.View
	}
	return EViewMode_VIEW_MODE_NO_CHILD_OBJECTS
}

func (m *ListArchivesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListArchivesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListArchivesResponse struct {
	Items                []*Archive `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NextPageToken        string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListArchivesResponse) Reset()         { *m = ListArchivesResponse{} }
func (m *ListArchivesResponse) String() string { return proto.CompactTextString(m) }
func (*ListArchivesResponse) ProtoMessage()    {}
func (*ListArchivesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{32}
}
func (m *ListArchivesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArchivesResponse.Unmarshal(m, b)
}
func (m *ListArchivesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArchivesResponse.Marshal(b, m, deterministic)
}
func (dst *ListArchivesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArchivesResponse.Merge(dst, src)
}
func (m *ListArchivesResponse) XXX_Size() int {
	return xxx_messageInfo_ListArchivesResponse.Size(m)
}
func (m *ListArchivesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArchivesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArchivesResponse proto.InternalMessageInfo

func (m *ListArchivesResponse) GetItems() []*Archive {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListArchivesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ListControlPanelsRequest struct {
	Filter               string    `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	View                 EViewMode `protobuf:"varint,2,opt,name=view,enum=axxonsoft.bl.domain.EViewMode" json:"view,omitempty"`
	PageToken            string    `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	PageSize             int32     `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListControlPanelsRequest) Reset()         { *m = ListControlPanelsRequest{} }
func (m *ListControlPanelsRequest) String() string { return proto.CompactTextString(m) }
func (*ListControlPanelsRequest) ProtoMessage()    {}
func (*ListControlPanelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{33}
}
func (m *ListControlPanelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListControlPanelsRequest.Unmarshal(m, b)
}
func (m *ListControlPanelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListControlPanelsRequest.Marshal(b, m, deterministic)
}
func (dst *ListControlPanelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListControlPanelsRequest.Merge(dst, src)
}
func (m *ListControlPanelsRequest) XXX_Size() int {
	return xxx_messageInfo_ListControlPanelsRequest.Size(m)
}
func (m *ListControlPanelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListControlPanelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListControlPanelsRequest proto.InternalMessageInfo

func (m *ListControlPanelsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListControlPanelsRequest) GetView() EViewMode {
	if m != nil {
		return m.View
	}
	return EViewMode_VIEW_MODE_NO_CHILD_OBJECTS
}

func (m *ListControlPanelsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListControlPanelsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListControlPanelsResponse struct {
	Items                []*ControlPanel `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NextPageToken        string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListControlPanelsResponse) Reset()         { *m = ListControlPanelsResponse{} }
func (m *ListControlPanelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListControlPanelsResponse) ProtoMessage()    {}
func (*ListControlPanelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{34}
}
func (m *ListControlPanelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListControlPanelsResponse.Unmarshal(m, b)
}
func (m *ListControlPanelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListControlPanelsResponse.Marshal(b, m, deterministic)
}
func (dst *ListControlPanelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListControlPanelsResponse.Merge(dst, src)
}
func (m *ListControlPanelsResponse) XXX_Size() int {
	return xxx_messageInfo_ListControlPanelsResponse.Size(m)
}
func (m *ListControlPanelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListControlPanelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListControlPanelsResponse proto.InternalMessageInfo

func (m *ListControlPanelsResponse) GetItems() []*ControlPanel {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListControlPanelsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type BatchGetControlPanelsRequest struct {
	Items                []*ResourceLocator `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BatchGetControlPanelsRequest) Reset()         { *m = BatchGetControlPanelsRequest{} }
func (m *BatchGetControlPanelsRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetControlPanelsRequest) ProtoMessage()    {}
func (*BatchGetControlPanelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{35}
}
func (m *BatchGetControlPanelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetControlPanelsRequest.Unmarshal(m, b)
}
func (m *BatchGetControlPanelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetControlPanelsRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetControlPanelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetControlPanelsRequest.Merge(dst, src)
}
func (m *BatchGetControlPanelsRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetControlPanelsRequest.Size(m)
}
func (m *BatchGetControlPanelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetControlPanelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetControlPanelsRequest proto.InternalMessageInfo

func (m *BatchGetControlPanelsRequest) GetItems() []*ResourceLocator {
	if m != nil {
		return m.Items
	}
	return nil
}

type BatchGetControlPanelsResponse struct {
	Items                []*ControlPanel `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NotFoundObjects      []string        `protobuf:"bytes,2,rep,name=not_found_objects,json=notFoundObjects" json:"not_found_objects,omitempty"`
	UnreachableObjects   []string        `protobuf:"bytes,3,rep,name=unreachable_objects,json=unreachableObjects" json:"unreachable_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BatchGetControlPanelsResponse) Reset()         { *m = BatchGetControlPanelsResponse{} }
func (m *BatchGetControlPanelsResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetControlPanelsResponse) ProtoMessage()    {}
func (*BatchGetControlPanelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{36}
}
func (m *BatchGetControlPanelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetControlPanelsResponse.Unmarshal(m, b)
}
func (m *BatchGetControlPanelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetControlPanelsResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetControlPanelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetControlPanelsResponse.Merge(dst, src)
}
func (m *BatchGetControlPanelsResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetControlPanelsResponse.Size(m)
}
func (m *BatchGetControlPanelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetControlPanelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetControlPanelsResponse proto.InternalMessageInfo

func (m *BatchGetControlPanelsResponse) GetItems() []*ControlPanel {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BatchGetControlPanelsResponse) GetNotFoundObjects() []string {
	if m != nil {
		return m.NotFoundObjects
	}
	return nil
}

func (m *BatchGetControlPanelsResponse) GetUnreachableObjects() []string {
	if m != nil {
		return m.UnreachableObjects
	}
	return nil
}

type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{37}
}
func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(dst, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

type ListNodesResponse struct {
	Nodes                []*events.HostStatus `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Domain_bd119d8562d02155, []int{38}
}
func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(dst, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetNodes() []*events.HostStatus {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*VideoSteamingDetails)(nil), "axxonsoft.bl.domain.VideoSteamingDetails")
	proto.RegisterType((*VideoStreaming)(nil), "axxonsoft.bl.domain.VideoStreaming")
	proto.RegisterType((*AudioStreaming)(nil), "axxonsoft.bl.domain.AudioStreaming")
	proto.RegisterType((*Speaker)(nil), "axxonsoft.bl.domain.Speaker")
	proto.RegisterType((*TelemetryCapabilities)(nil), "axxonsoft.bl.domain.TelemetryCapabilities")
	proto.RegisterMapType((map[int32]*ptz.Limits)(nil), "axxonsoft.bl.domain.TelemetryCapabilities.LimitsEntry")
	proto.RegisterType((*TagAndTrack)(nil), "axxonsoft.bl.domain.TagAndTrack")
	proto.RegisterType((*Telemetry)(nil), "axxonsoft.bl.domain.Telemetry")
	proto.RegisterType((*StorageSource)(nil), "axxonsoft.bl.domain.StorageSource")
	proto.RegisterType((*ArchiveBinding)(nil), "axxonsoft.bl.domain.ArchiveBinding")
	proto.RegisterType((*Archive)(nil), "axxonsoft.bl.domain.Archive")
	proto.RegisterType((*Ray)(nil), "axxonsoft.bl.domain.Ray")
	proto.RegisterType((*Relay)(nil), "axxonsoft.bl.domain.Relay")
	proto.RegisterType((*TextSource)(nil), "axxonsoft.bl.domain.TextSource")
	proto.RegisterType((*SceneDescription)(nil), "axxonsoft.bl.domain.SceneDescription")
	proto.RegisterType((*DetectorEventInfo)(nil), "axxonsoft.bl.domain.DetectorEventInfo")
	proto.RegisterType((*Detector)(nil), "axxonsoft.bl.domain.Detector")
	proto.RegisterType((*Camera)(nil), "axxonsoft.bl.domain.Camera")
	proto.RegisterType((*ControlPanel)(nil), "axxonsoft.bl.domain.ControlPanel")
	proto.RegisterType((*ControlPanel_Properties)(nil), "axxonsoft.bl.domain.ControlPanel.Properties")
	proto.RegisterMapType((map[string]string)(nil), "axxonsoft.bl.domain.ControlPanel.Properties.AxesEntry")
	proto.RegisterMapType((map[int32]string)(nil), "axxonsoft.bl.domain.ControlPanel.Properties.ButtonsEntry")
	proto.RegisterType((*GetVersionRequest)(nil), "axxonsoft.bl.domain.GetVersionRequest")
	proto.RegisterType((*GetVersionResponse)(nil), "axxonsoft.bl.domain.GetVersionResponse")
	proto.RegisterType((*GetHostPlatformInfoRequest)(nil), "axxonsoft.bl.domain.GetHostPlatformInfoRequest")
	proto.RegisterType((*GetHostPlatformInfoResponse)(nil), "axxonsoft.bl.domain.GetHostPlatformInfoResponse")
	proto.RegisterMapType((map[string]string)(nil), "axxonsoft.bl.domain.GetHostPlatformInfoResponse.AdditionalInfoEntry")
	proto.RegisterType((*ListCamerasRequest)(nil), "axxonsoft.bl.domain.ListCamerasRequest")
	proto.RegisterType((*ListCamerasResponse)(nil), "axxonsoft.bl.domain.ListCamerasResponse")
	proto.RegisterType((*ResourceLocator)(nil), "axxonsoft.bl.domain.ResourceLocator")
	proto.RegisterType((*BatchGetCamerasRequest)(nil), "axxonsoft.bl.domain.BatchGetCamerasRequest")
	proto.RegisterType((*GetCamerasByComponentsRequest)(nil), "axxonsoft.bl.domain.GetCamerasByComponentsRequest")
	proto.RegisterType((*GetCamerasByComponentsResponse)(nil), "axxonsoft.bl.domain.GetCamerasByComponentsResponse")
	proto.RegisterType((*BatchGetCamerasResponse)(nil), "axxonsoft.bl.domain.BatchGetCamerasResponse")
	proto.RegisterType((*BatchGetArchivesRequest)(nil), "axxonsoft.bl.domain.BatchGetArchivesRequest")
	proto.RegisterType((*BatchGetArchivesResponse)(nil), "axxonsoft.bl.domain.BatchGetArchivesResponse")
	proto.RegisterType((*ListArchivesRequest)(nil), "axxonsoft.bl.domain.ListArchivesRequest")
	proto.RegisterType((*ListArchivesResponse)(nil), "axxonsoft.bl.domain.ListArchivesResponse")
	proto.RegisterType((*ListControlPanelsRequest)(nil), "axxonsoft.bl.domain.ListControlPanelsRequest")
	proto.RegisterType((*ListControlPanelsResponse)(nil), "axxonsoft.bl.domain.ListControlPanelsResponse")
	proto.RegisterType((*BatchGetControlPanelsRequest)(nil), "axxonsoft.bl.domain.BatchGetControlPanelsRequest")
	proto.RegisterType((*BatchGetControlPanelsResponse)(nil), "axxonsoft.bl.domain.BatchGetControlPanelsResponse")
	proto.RegisterType((*ListNodesRequest)(nil), "axxonsoft.bl.domain.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "axxonsoft.bl.domain.ListNodesResponse")
	proto.RegisterEnum("axxonsoft.bl.domain.EViewMode", EViewMode_name, EViewMode_value)
	proto.RegisterEnum("axxonsoft.bl.domain.TelemetryCapabilities_EFreedom", TelemetryCapabilities_EFreedom_name, TelemetryCapabilities_EFreedom_value)
	proto.RegisterEnum("axxonsoft.bl.domain.DetectorEventInfo_EventType", DetectorEventInfo_EventType_name, DetectorEventInfo_EventType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DomainService service

type DomainServiceClient interface {
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
	GetHostPlatformInfo(ctx context.Context, in *GetHostPlatformInfoRequest, opts ...grpc.CallOption) (*GetHostPlatformInfoResponse, error)
	// Search for cameras in domain
	ListCameras(ctx context.Context, in *ListCamerasRequest, opts ...grpc.CallOption) (DomainService_ListCamerasClient, error)
	// Fast lookup for retrieving cameras by id
	BatchGetCameras(ctx context.Context, in *BatchGetCamerasRequest, opts ...grpc.CallOption) (DomainService_BatchGetCamerasClient, error)
	// Fast lookup for retrieving cameras by their component
	GetCamerasByComponents(ctx context.Context, in *GetCamerasByComponentsRequest, opts ...grpc.CallOption) (DomainService_GetCamerasByComponentsClient, error)
	// Search for archives in domain.
	ListArchives(ctx context.Context, in *ListArchivesRequest, opts ...grpc.CallOption) (DomainService_ListArchivesClient, error)
	// / Fast lookup for retrieving archives by id
	BatchGetArchives(ctx context.Context, in *BatchGetArchivesRequest, opts ...grpc.CallOption) (DomainService_BatchGetArchivesClient, error)
	ListControlPanels(ctx context.Context, in *ListControlPanelsRequest, opts ...grpc.CallOption) (DomainService_ListControlPanelsClient, error)
	BatchGetControlPanels(ctx context.Context, in *BatchGetControlPanelsRequest, opts ...grpc.CallOption) (DomainService_BatchGetControlPanelsClient, error)
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
}

type domainServiceClient struct {
	cc *grpc.ClientConn
}

func NewDomainServiceClient(cc *grpc.ClientConn) DomainServiceClient {
	return &domainServiceClient{cc}
}

func (c *domainServiceClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.domain.DomainService/GetVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainServiceClient) GetHostPlatformInfo(ctx context.Context, in *GetHostPlatformInfoRequest, opts ...grpc.CallOption) (*GetHostPlatformInfoResponse, error) {
	out := new(GetHostPlatformInfoResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.domain.DomainService/GetHostPlatformInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainServiceClient) ListCameras(ctx context.Context, in *ListCamerasRequest, opts ...grpc.CallOption) (DomainService_ListCamerasClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[0], c.cc, "/axxonsoft.bl.domain.DomainService/ListCameras", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceListCamerasClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_ListCamerasClient interface {
	Recv() (*ListCamerasResponse, error)
	grpc.ClientStream
}

type domainServiceListCamerasClient struct {
	grpc.ClientStream
}

func (x *domainServiceListCamerasClient) Recv() (*ListCamerasResponse, error) {
	m := new(ListCamerasResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) BatchGetCameras(ctx context.Context, in *BatchGetCamerasRequest, opts ...grpc.CallOption) (DomainService_BatchGetCamerasClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[1], c.cc, "/axxonsoft.bl.domain.DomainService/BatchGetCameras", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceBatchGetCamerasClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_BatchGetCamerasClient interface {
	Recv() (*BatchGetCamerasResponse, error)
	grpc.ClientStream
}

type domainServiceBatchGetCamerasClient struct {
	grpc.ClientStream
}

func (x *domainServiceBatchGetCamerasClient) Recv() (*BatchGetCamerasResponse, error) {
	m := new(BatchGetCamerasResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) GetCamerasByComponents(ctx context.Context, in *GetCamerasByComponentsRequest, opts ...grpc.CallOption) (DomainService_GetCamerasByComponentsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[2], c.cc, "/axxonsoft.bl.domain.DomainService/GetCamerasByComponents", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceGetCamerasByComponentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_GetCamerasByComponentsClient interface {
	Recv() (*GetCamerasByComponentsResponse, error)
	grpc.ClientStream
}

type domainServiceGetCamerasByComponentsClient struct {
	grpc.ClientStream
}

func (x *domainServiceGetCamerasByComponentsClient) Recv() (*GetCamerasByComponentsResponse, error) {
	m := new(GetCamerasByComponentsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) ListArchives(ctx context.Context, in *ListArchivesRequest, opts ...grpc.CallOption) (DomainService_ListArchivesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[3], c.cc, "/axxonsoft.bl.domain.DomainService/ListArchives", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceListArchivesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_ListArchivesClient interface {
	Recv() (*ListArchivesResponse, error)
	grpc.ClientStream
}

type domainServiceListArchivesClient struct {
	grpc.ClientStream
}

func (x *domainServiceListArchivesClient) Recv() (*ListArchivesResponse, error) {
	m := new(ListArchivesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) BatchGetArchives(ctx context.Context, in *BatchGetArchivesRequest, opts ...grpc.CallOption) (DomainService_BatchGetArchivesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[4], c.cc, "/axxonsoft.bl.domain.DomainService/BatchGetArchives", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceBatchGetArchivesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_BatchGetArchivesClient interface {
	Recv() (*BatchGetArchivesResponse, error)
	grpc.ClientStream
}

type domainServiceBatchGetArchivesClient struct {
	grpc.ClientStream
}

func (x *domainServiceBatchGetArchivesClient) Recv() (*BatchGetArchivesResponse, error) {
	m := new(BatchGetArchivesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) ListControlPanels(ctx context.Context, in *ListControlPanelsRequest, opts ...grpc.CallOption) (DomainService_ListControlPanelsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[5], c.cc, "/axxonsoft.bl.domain.DomainService/ListControlPanels", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceListControlPanelsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_ListControlPanelsClient interface {
	Recv() (*ListControlPanelsResponse, error)
	grpc.ClientStream
}

type domainServiceListControlPanelsClient struct {
	grpc.ClientStream
}

func (x *domainServiceListControlPanelsClient) Recv() (*ListControlPanelsResponse, error) {
	m := new(ListControlPanelsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) BatchGetControlPanels(ctx context.Context, in *BatchGetControlPanelsRequest, opts ...grpc.CallOption) (DomainService_BatchGetControlPanelsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainService_serviceDesc.Streams[6], c.cc, "/axxonsoft.bl.domain.DomainService/BatchGetControlPanels", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainServiceBatchGetControlPanelsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainService_BatchGetControlPanelsClient interface {
	Recv() (*BatchGetControlPanelsResponse, error)
	grpc.ClientStream
}

type domainServiceBatchGetControlPanelsClient struct {
	grpc.ClientStream
}

func (x *domainServiceBatchGetControlPanelsClient) Recv() (*BatchGetControlPanelsResponse, error) {
	m := new(BatchGetControlPanelsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainServiceClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.domain.DomainService/ListNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DomainService service

type DomainServiceServer interface {
	GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	GetHostPlatformInfo(context.Context, *GetHostPlatformInfoRequest) (*GetHostPlatformInfoResponse, error)
	// Search for cameras in domain
	ListCameras(*ListCamerasRequest, DomainService_ListCamerasServer) error
	// Fast lookup for retrieving cameras by id
	BatchGetCameras(*BatchGetCamerasRequest, DomainService_BatchGetCamerasServer) error
	// Fast lookup for retrieving cameras by their component
	GetCamerasByComponents(*GetCamerasByComponentsRequest, DomainService_GetCamerasByComponentsServer) error
	// Search for archives in domain.
	ListArchives(*ListArchivesRequest, DomainService_ListArchivesServer) error
	// / Fast lookup for retrieving archives by id
	BatchGetArchives(*BatchGetArchivesRequest, DomainService_BatchGetArchivesServer) error
	ListControlPanels(*ListControlPanelsRequest, DomainService_ListControlPanelsServer) error
	BatchGetControlPanels(*BatchGetControlPanelsRequest, DomainService_BatchGetControlPanelsServer) error
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
}

func RegisterDomainServiceServer(s *grpc.Server, srv DomainServiceServer) {
	s.RegisterService(&_DomainService_serviceDesc, srv)
}

func _DomainService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.domain.DomainService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServiceServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DomainService_GetHostPlatformInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostPlatformInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServiceServer).GetHostPlatformInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.domain.DomainService/GetHostPlatformInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServiceServer).GetHostPlatformInfo(ctx, req.(*GetHostPlatformInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DomainService_ListCameras_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListCamerasRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).ListCameras(m, &domainServiceListCamerasServer{stream})
}

type DomainService_ListCamerasServer interface {
	Send(*ListCamerasResponse) error
	grpc.ServerStream
}

type domainServiceListCamerasServer struct {
	grpc.ServerStream
}

func (x *domainServiceListCamerasServer) Send(m *ListCamerasResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_BatchGetCameras_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BatchGetCamerasRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).BatchGetCameras(m, &domainServiceBatchGetCamerasServer{stream})
}

type DomainService_BatchGetCamerasServer interface {
	Send(*BatchGetCamerasResponse) error
	grpc.ServerStream
}

type domainServiceBatchGetCamerasServer struct {
	grpc.ServerStream
}

func (x *domainServiceBatchGetCamerasServer) Send(m *BatchGetCamerasResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_GetCamerasByComponents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCamerasByComponentsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).GetCamerasByComponents(m, &domainServiceGetCamerasByComponentsServer{stream})
}

type DomainService_GetCamerasByComponentsServer interface {
	Send(*GetCamerasByComponentsResponse) error
	grpc.ServerStream
}

type domainServiceGetCamerasByComponentsServer struct {
	grpc.ServerStream
}

func (x *domainServiceGetCamerasByComponentsServer) Send(m *GetCamerasByComponentsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_ListArchives_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListArchivesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).ListArchives(m, &domainServiceListArchivesServer{stream})
}

type DomainService_ListArchivesServer interface {
	Send(*ListArchivesResponse) error
	grpc.ServerStream
}

type domainServiceListArchivesServer struct {
	grpc.ServerStream
}

func (x *domainServiceListArchivesServer) Send(m *ListArchivesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_BatchGetArchives_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BatchGetArchivesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).BatchGetArchives(m, &domainServiceBatchGetArchivesServer{stream})
}

type DomainService_BatchGetArchivesServer interface {
	Send(*BatchGetArchivesResponse) error
	grpc.ServerStream
}

type domainServiceBatchGetArchivesServer struct {
	grpc.ServerStream
}

func (x *domainServiceBatchGetArchivesServer) Send(m *BatchGetArchivesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_ListControlPanels_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListControlPanelsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).ListControlPanels(m, &domainServiceListControlPanelsServer{stream})
}

type DomainService_ListControlPanelsServer interface {
	Send(*ListControlPanelsResponse) error
	grpc.ServerStream
}

type domainServiceListControlPanelsServer struct {
	grpc.ServerStream
}

func (x *domainServiceListControlPanelsServer) Send(m *ListControlPanelsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_BatchGetControlPanels_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BatchGetControlPanelsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainServiceServer).BatchGetControlPanels(m, &domainServiceBatchGetControlPanelsServer{stream})
}

type DomainService_BatchGetControlPanelsServer interface {
	Send(*BatchGetControlPanelsResponse) error
	grpc.ServerStream
}

type domainServiceBatchGetControlPanelsServer struct {
	grpc.ServerStream
}

func (x *domainServiceBatchGetControlPanelsServer) Send(m *BatchGetControlPanelsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainService_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServiceServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.domain.DomainService/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServiceServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DomainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.domain.DomainService",
	HandlerType: (*DomainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _DomainService_GetVersion_Handler,
		},
		{
			MethodName: "GetHostPlatformInfo",
			Handler:    _DomainService_GetHostPlatformInfo_Handler,
		},
		{
			MethodName: "ListNodes",
			Handler:    _DomainService_ListNodes_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListCameras",
			Handler:       _DomainService_ListCameras_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BatchGetCameras",
			Handler:       _DomainService_BatchGetCameras_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetCamerasByComponents",
			Handler:       _DomainService_GetCamerasByComponents_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListArchives",
			Handler:       _DomainService_ListArchives_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BatchGetArchives",
			Handler:       _DomainService_BatchGetArchives_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListControlPanels",
			Handler:       _DomainService_ListControlPanels_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BatchGetControlPanels",
			Handler:       _DomainService_BatchGetControlPanels_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "axxonsoft/bl/domain/Domain.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/domain/Domain.proto", fileDescriptor_Domain_bd119d8562d02155)
}

var fileDescriptor_Domain_bd119d8562d02155 = []byte{
	// 2856 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcf, 0x6f, 0x1b, 0xc7,
	0xf5, 0xcf, 0x92, 0xa2, 0x24, 0x3e, 0x49, 0x14, 0x35, 0x92, 0x95, 0x0d, 0xfd, 0x23, 0xf2, 0x26,
	0xb6, 0x15, 0x7f, 0x13, 0xca, 0x91, 0xbf, 0xf9, 0x51, 0x37, 0x68, 0x40, 0x4b, 0xb4, 0x2d, 0x43,
	0x96, 0x84, 0x25, 0xed, 0xb4, 0x2e, 0x8a, 0xc5, 0x8a, 0x3b, 0xa2, 0x26, 0xe6, 0xee, 0x6c, 0x76,
	0x86, 0x8a, 0x64, 0x14, 0x45, 0x90, 0x5e, 0x7a, 0x2f, 0x50, 0x04, 0x05, 0x7a, 0xc9, 0xad, 0xe8,
	0xa5, 0x28, 0x50, 0x14, 0x39, 0xf6, 0xd4, 0x73, 0xd1, 0x3f, 0xa1, 0xb9, 0xf7, 0xd0, 0x7f, 0xa0,
	0x98, 0x1f, 0x4b, 0xee, 0x92, 0x4b, 0x89, 0xae, 0x53, 0x21, 0x27, 0xed, 0xbc, 0x79, 0xef, 0xcd,
	0x67, 0xde, 0x7b, 0xf3, 0xde, 0x9b, 0x11, 0x61, 0xc5, 0x3d, 0x3e, 0xa6, 0x01, 0xa3, 0x07, 0x7c,
	0x6d, 0xbf, 0xb3, 0xe6, 0x51, 0xdf, 0x25, 0xc1, 0xda, 0xa6, 0xfc, 0x53, 0x0d, 0x23, 0xca, 0x29,
	0x5a, 0xec, 0x71, 0x54, 0xf7, 0x3b, 0x55, 0xc5, 0x51, 0xb9, 0xd4, 0xa6, 0xb4, 0xdd, 0xc1, 0x6b,
	0x6e, 0x48, 0xd6, 0xdc, 0x20, 0xa0, 0xdc, 0xe5, 0x84, 0x06, 0x4c, 0x89, 0x54, 0xae, 0xa7, 0x94,
	0x86, 0xfc, 0xf9, 0x5a, 0x13, 0x77, 0xb0, 0x8f, 0x79, 0x74, 0xf2, 0x00, 0x77, 0x42, 0x1c, 0x69,
	0xbe, 0x6a, 0x8a, 0x8f, 0xe1, 0x56, 0x37, 0x22, 0xfc, 0x64, 0x6d, 0x77, 0xff, 0x53, 0xdc, 0xe2,
	0x6c, 0x0f, 0x47, 0x3e, 0x61, 0x2c, 0xa1, 0x37, 0x0d, 0x16, 0x1f, 0xe1, 0x80, 0xb3, 0xb5, 0xba,
	0xfc, 0xa3, 0x38, 0xac, 0x63, 0x58, 0x7a, 0x42, 0x3c, 0x4c, 0x1b, 0x1c, 0xbb, 0x3e, 0x09, 0xda,
	0x9b, 0x98, 0xbb, 0xa4, 0xc3, 0xd0, 0x12, 0x14, 0x3e, 0x27, 0x1e, 0x3f, 0x34, 0x8d, 0x15, 0x63,
	0x75, 0xce, 0x56, 0x03, 0xb4, 0x0c, 0x93, 0x87, 0x98, 0xb4, 0x0f, 0xb9, 0x99, 0x93, 0x64, 0x3d,
	0x12, 0xdc, 0x2d, 0xea, 0xe1, 0x96, 0x99, 0x5f, 0x31, 0x56, 0x8b, 0xb6, 0x1a, 0xa0, 0x4b, 0x50,
	0x3c, 0x88, 0x5c, 0x1f, 0x47, 0x2e, 0xc7, 0xe6, 0xc4, 0x8a, 0xb1, 0x5a, 0xb0, 0xfb, 0x04, 0xeb,
	0x9b, 0x1c, 0x94, 0xf4, 0xd2, 0x91, 0x5a, 0x1b, 0xbd, 0x0d, 0x88, 0xc9, 0x81, 0xe3, 0xb6, 0x30,
	0x63, 0x4e, 0x48, 0x49, 0xc0, 0x25, 0x82, 0xa2, 0x5d, 0x56, 0x33, 0x35, 0x31, 0xb1, 0x27, 0xe8,
	0xa8, 0x0a, 0x8b, 0x1e, 0x16, 0x2b, 0x45, 0x29, 0xf6, 0x9c, 0x64, 0x5f, 0xd0, 0x53, 0x09, 0x7e,
	0x13, 0xa6, 0x70, 0xe0, 0xee, 0x77, 0xb0, 0x27, 0x61, 0x4e, 0xdb, 0xf1, 0x10, 0x5d, 0x85, 0x59,
	0x8f, 0xb0, 0xb0, 0xe3, 0x9e, 0x38, 0x81, 0xeb, 0x2b, 0xac, 0x45, 0x7b, 0x46, 0xd3, 0x76, 0x5c,
	0x1f, 0xa3, 0xcb, 0x00, 0x31, 0x0b, 0xf1, 0xcc, 0x82, 0x64, 0x28, 0x6a, 0xca, 0x96, 0x87, 0x1e,
	0xc2, 0x8c, 0x46, 0x4e, 0x82, 0x03, 0x6a, 0x96, 0x57, 0x8c, 0xd5, 0x99, 0xf5, 0xb7, 0xaa, 0x19,
	0x91, 0x50, 0xcd, 0x32, 0xb7, 0x0d, 0x4a, 0x7a, 0x2b, 0x38, 0xa0, 0x02, 0x0d, 0x61, 0x8e, 0xdb,
	0xe2, 0xe4, 0xc8, 0xe5, 0xd8, 0x33, 0x5f, 0x93, 0x60, 0x67, 0x08, 0xab, 0xc5, 0x24, 0xeb, 0x5f,
	0x06, 0x94, 0x6a, 0x5d, 0x8f, 0x24, 0x6c, 0x77, 0x15, 0x66, 0xdd, 0xd6, 0x90, 0xd5, 0x66, 0x14,
	0x4d, 0x19, 0x60, 0x70, 0x9b, 0xb9, 0xb3, 0xb6, 0x99, 0x1f, 0xdc, 0xe6, 0x63, 0x58, 0xf0, 0x49,
	0x2b, 0xa2, 0xe1, 0x21, 0x0d, 0xb0, 0xa3, 0x74, 0x4b, 0x6b, 0x95, 0xd6, 0x57, 0xd3, 0x9b, 0x8d,
	0x63, 0xb3, 0x5a, 0x7f, 0xd4, 0x13, 0xa8, 0x49, 0x7e, 0xbb, 0xec, 0x0f, 0x50, 0x86, 0x76, 0x5c,
	0x18, 0xde, 0xf1, 0x3f, 0x0d, 0x98, 0x6a, 0x84, 0xd8, 0x7d, 0x86, 0xa3, 0xf3, 0xd9, 0xea, 0x2a,
	0x94, 0x19, 0x77, 0x39, 0x76, 0x5a, 0x34, 0xe0, 0x11, 0xed, 0x38, 0x6e, 0xa8, 0xe3, 0xa2, 0x24,
	0xe9, 0x1b, 0x8a, 0x5c, 0x0b, 0xd1, 0x75, 0x98, 0x77, 0x85, 0x2f, 0x1c, 0x46, 0xbb, 0x51, 0x0b,
	0x0b, 0x46, 0x15, 0x1f, 0x73, 0x92, 0xdc, 0x90, 0xd4, 0x5a, 0x38, 0xb4, 0xcb, 0xc9, 0xe1, 0x5d,
	0x7e, 0x5b, 0x80, 0x0b, 0xbd, 0x93, 0xbf, 0xe1, 0x86, 0xee, 0x3e, 0xe9, 0x10, 0x4e, 0x30, 0x43,
	0x75, 0x28, 0xf9, 0xf4, 0x08, 0x3b, 0xac, 0x1b, 0x86, 0x34, 0x12, 0xe2, 0x86, 0x8c, 0xb1, 0x2b,
	0x69, 0xb3, 0x87, 0xfc, 0x79, 0x35, 0x29, 0x67, 0xcf, 0x09, 0xa9, 0x46, 0x2c, 0x84, 0xee, 0xc3,
	0xfc, 0x01, 0x6d, 0x75, 0x59, 0x42, 0x4f, 0x6e, 0x2c, 0x3d, 0x25, 0x29, 0xd6, 0x57, 0x54, 0x87,
	0xd2, 0x73, 0x4a, 0xfd, 0x84, 0x9e, 0xfc, 0x78, 0x78, 0x84, 0x54, 0x4a, 0x0d, 0x89, 0x48, 0x12,
	0xce, 0xc4, 0x78, 0x6a, 0x84, 0x54, 0x5f, 0xcd, 0x6d, 0x58, 0x16, 0xa6, 0x8d, 0xb0, 0xeb, 0x0c,
	0xa0, 0x52, 0xa1, 0xb4, 0x48, 0x58, 0x2d, 0xc2, 0xee, 0xd3, 0xd4, 0xda, 0xef, 0xc1, 0xab, 0x44,
	0x87, 0x90, 0x33, 0x60, 0x5b, 0xe5, 0x9a, 0x25, 0xa2, 0xa2, 0xe9, 0x51, 0xca, 0x84, 0xb7, 0x60,
	0xc9, 0x77, 0x8f, 0x89, 0xdf, 0xf5, 0x9d, 0x30, 0xc2, 0x0c, 0x73, 0xa7, 0x45, 0xbb, 0x01, 0x37,
	0xa7, 0x64, 0x82, 0x43, 0x7a, 0x6e, 0x4f, 0x4e, 0x6d, 0x88, 0x19, 0x91, 0xd6, 0x08, 0x73, 0x38,
	0xed, 0x46, 0xc9, 0x8d, 0x4e, 0xcb, 0x35, 0xca, 0x84, 0x35, 0xc5, 0x44, 0x5f, 0xff, 0x0e, 0x4c,
	0x76, 0x88, 0x4f, 0x38, 0x33, 0x61, 0x25, 0xbf, 0x3a, 0xb3, 0xfe, 0x7e, 0x66, 0x16, 0xc9, 0x8c,
	0x92, 0xea, 0xb6, 0x14, 0xac, 0x07, 0x3c, 0x3a, 0xb1, 0xb5, 0x96, 0x4a, 0x03, 0x66, 0x12, 0x64,
	0x54, 0x86, 0xfc, 0x33, 0x7c, 0x22, 0xa3, 0xa7, 0x60, 0x8b, 0x4f, 0x54, 0x85, 0xc2, 0x91, 0xdb,
	0xe9, 0x62, 0x1d, 0x09, 0xe6, 0xb0, 0xe9, 0x95, 0xbc, 0xad, 0xd8, 0xee, 0xe4, 0x3e, 0x34, 0xac,
	0x8f, 0x60, 0xba, 0x7e, 0x2f, 0xc2, 0xd8, 0xa3, 0x3e, 0x9a, 0x82, 0xfc, 0x5e, 0x6d, 0xa7, 0xfc,
	0x0a, 0x9a, 0x86, 0x89, 0xe6, 0xd6, 0x76, 0xb3, 0x6c, 0xa0, 0x22, 0x14, 0xee, 0xed, 0x6e, 0x3c,
	0x6e, 0x94, 0x73, 0x82, 0xf8, 0x74, 0x77, 0xf7, 0x51, 0x39, 0x2f, 0xbe, 0xb6, 0xec, 0xad, 0x46,
	0x79, 0xc2, 0x8a, 0x60, 0xa6, 0xe9, 0xb6, 0x6b, 0x81, 0xd7, 0x8c, 0xdc, 0xd6, 0xb3, 0x73, 0x39,
	0xcf, 0xd6, 0x2f, 0xf3, 0x50, 0xec, 0x19, 0xed, 0x7c, 0x52, 0xc8, 0x8f, 0x01, 0xf1, 0x78, 0x45,
	0x27, 0x8c, 0x08, 0x15, 0x09, 0x51, 0xa7, 0xcb, 0xb7, 0x46, 0xa5, 0xcb, 0x1e, 0xc6, 0x3d, 0x2d,
	0x60, 0x2f, 0xf0, 0x41, 0x12, 0xda, 0x81, 0xd9, 0x56, 0xc2, 0xef, 0xba, 0xde, 0xdc, 0x1c, 0x3f,
	0x52, 0xec, 0x94, 0x3c, 0xda, 0x84, 0x39, 0xee, 0xb6, 0x1d, 0x37, 0xf0, 0x1c, 0x2e, 0x5c, 0x62,
	0x2e, 0x48, 0x85, 0x2b, 0xd9, 0x0a, 0xfb, 0xae, 0xb3, 0x67, 0x78, 0xda, 0x8f, 0x67, 0x15, 0xae,
	0xaf, 0x72, 0x30, 0xd7, 0xe0, 0x34, 0x72, 0xdb, 0x58, 0xe5, 0xc5, 0x71, 0x3c, 0x61, 0xc2, 0x14,
	0x53, 0x32, 0xda, 0x09, 0xf1, 0x50, 0xcc, 0xec, 0x93, 0xc0, 0x23, 0x41, 0x5b, 0x5b, 0x3f, 0x1e,
	0x0a, 0xb5, 0x3e, 0xf6, 0x88, 0xab, 0x93, 0x72, 0x5c, 0xd2, 0x25, 0x4d, 0xaf, 0xbc, 0x0c, 0x93,
	0x34, 0x22, 0x6d, 0x12, 0xe8, 0x74, 0xad, 0x47, 0xa8, 0x02, 0xd3, 0x3e, 0xf1, 0x31, 0x3f, 0x09,
	0xb1, 0x4c, 0x04, 0x45, 0xbb, 0x37, 0x46, 0xd7, 0xa0, 0xa4, 0xb8, 0x9c, 0x18, 0xd1, 0x94, 0x4a,
	0xf5, 0x8a, 0xaa, 0xb7, 0x86, 0xd6, 0xe1, 0x42, 0x9a, 0x2d, 0x86, 0x31, 0x2d, 0xb9, 0x17, 0x53,
	0xdc, 0x0a, 0x8e, 0xf5, 0xab, 0x1c, 0x94, 0x6a, 0x51, 0xeb, 0x90, 0x1c, 0xe1, 0xbb, 0x7a, 0x13,
	0x08, 0x26, 0x64, 0xe8, 0x29, 0x9b, 0xc8, 0xef, 0x53, 0x8c, 0x71, 0x1b, 0x26, 0x5b, 0xb2, 0xb9,
	0xd2, 0xa9, 0xf8, 0x62, 0xa6, 0xf7, 0x36, 0x24, 0x8b, 0xad, 0x59, 0xd1, 0xfb, 0x30, 0xe5, 0xaa,
	0x45, 0x75, 0xe6, 0xbd, 0x94, 0x29, 0xa5, 0x81, 0xd9, 0x31, 0xb3, 0x08, 0x7d, 0xc2, 0x1c, 0x0f,
	0x1f, 0xb8, 0xdd, 0x0e, 0xd7, 0x59, 0xb6, 0x48, 0xd8, 0xa6, 0x22, 0xa0, 0x8f, 0x60, 0x4a, 0xed,
	0x58, 0xc4, 0xa6, 0xc8, 0x62, 0x56, 0xa6, 0xda, 0x94, 0x05, 0xec, 0x58, 0xc4, 0xfa, 0x6b, 0x0e,
	0xa6, 0xf4, 0x8a, 0xe7, 0x73, 0x52, 0x5f, 0x87, 0x19, 0xc2, 0x1c, 0xec, 0xef, 0x63, 0xcf, 0xd3,
	0x35, 0x68, 0xda, 0x06, 0xc2, 0xea, 0x9a, 0x82, 0xb6, 0xa1, 0xa4, 0x77, 0x1e, 0x77, 0x3d, 0x05,
	0x79, 0x8c, 0xaf, 0x8d, 0x3a, 0xc6, 0x1a, 0xbe, 0x6e, 0x79, 0xe6, 0xdc, 0xe4, 0x10, 0x7d, 0x0c,
	0xd3, 0x3a, 0x4e, 0x63, 0xf3, 0xbc, 0x71, 0x9a, 0xd5, 0x75, 0x38, 0xd8, 0x3d, 0xa1, 0xa1, 0x93,
	0xb6, 0x30, 0x7c, 0xd2, 0x3e, 0x85, 0xbc, 0xed, 0x9e, 0x4f, 0xa2, 0xb3, 0x3a, 0x50, 0xb0, 0x71,
	0xe7, 0xbc, 0x56, 0xfb, 0x0c, 0xa0, 0x89, 0x8f, 0xf9, 0xf8, 0xf9, 0xe3, 0xe5, 0x97, 0x7c, 0x0f,
	0xca, 0x8d, 0x16, 0x0e, 0xf0, 0x26, 0x66, 0xad, 0x88, 0x84, 0xe2, 0xea, 0x36, 0xc6, 0xc2, 0xd6,
	0x17, 0x39, 0x58, 0xd8, 0xc4, 0x1c, 0xb7, 0x38, 0x8d, 0xe4, 0xad, 0x4b, 0xf6, 0xf7, 0x25, 0xc8,
	0x11, 0x4f, 0xb3, 0xe7, 0x88, 0xd7, 0x3b, 0xe5, 0xb9, 0xc4, 0x29, 0xdf, 0x05, 0x90, 0xb7, 0x35,
	0x47, 0x66, 0xa1, 0xbc, 0x8c, 0xb5, 0x5b, 0x99, 0x31, 0x32, 0xa4, 0xbf, 0x2a, 0xbf, 0x9a, 0x27,
	0x21, 0xb6, 0x8b, 0x38, 0xfe, 0xb4, 0x8e, 0xa0, 0xd8, 0xa3, 0xa3, 0x0a, 0x2c, 0xd7, 0x9f, 0xd4,
	0x77, 0x9a, 0x4e, 0xf3, 0x27, 0x7b, 0x75, 0xe7, 0xf1, 0x4e, 0x63, 0xaf, 0xbe, 0xb1, 0x75, 0x6f,
	0xab, 0xbe, 0x59, 0x7e, 0x05, 0x99, 0xb0, 0xb4, 0xbb, 0x53, 0x77, 0xf6, 0x1e, 0xd4, 0x1a, 0x75,
	0xa7, 0xcf, 0x55, 0x36, 0xc4, 0x4c, 0xf3, 0x93, 0xdd, 0xe1, 0x99, 0x1c, 0x7a, 0x0d, 0x2e, 0xec,
	0xd5, 0xed, 0xad, 0xdd, 0xcd, 0xad, 0x8d, 0xda, 0x76, 0x72, 0x2a, 0x6f, 0xfd, 0x3d, 0x07, 0xd3,
	0x31, 0xc4, 0xf3, 0x39, 0xcb, 0x37, 0x60, 0x3e, 0x74, 0x23, 0x61, 0x3b, 0x4f, 0xaf, 0x1b, 0xf7,
	0xed, 0x8a, 0x9c, 0x44, 0x73, 0xc6, 0xad, 0x03, 0x35, 0x01, 0x31, 0xe1, 0x77, 0xc7, 0xeb, 0x3b,
	0x3e, 0x3e, 0xb2, 0xd7, 0xb2, 0x33, 0xda, 0x40, 0x98, 0xd8, 0x0b, 0x6c, 0x80, 0xc2, 0xd0, 0x8f,
	0x60, 0x52, 0x5d, 0xc5, 0xcd, 0x05, 0xa9, 0xe9, 0xfa, 0x78, 0x8e, 0xb5, 0xb5, 0x94, 0xf5, 0xef,
	0x69, 0x98, 0x54, 0x69, 0xfc, 0x7c, 0x2c, 0x6a, 0xc2, 0xd4, 0x11, 0x8e, 0x18, 0xa1, 0x81, 0xb6,
	0x64, 0x3c, 0x94, 0x55, 0x20, 0x74, 0x5c, 0xcf, 0x8b, 0xe2, 0x94, 0x58, 0xb4, 0x8b, 0x24, 0xac,
	0x29, 0x02, 0xda, 0x82, 0x39, 0x55, 0x66, 0xe2, 0xa4, 0x39, 0x29, 0x03, 0xf9, 0xcd, 0x51, 0x49,
	0x53, 0x6d, 0x4a, 0xe7, 0xcc, 0xd9, 0x56, 0x62, 0x24, 0x8a, 0xf5, 0x11, 0x0e, 0x3c, 0x1a, 0xe9,
	0x82, 0xab, 0x47, 0x68, 0x09, 0x0a, 0x3e, 0xf5, 0x70, 0x47, 0x57, 0x56, 0x35, 0x10, 0x88, 0x5b,
	0xd4, 0xf7, 0x71, 0xc0, 0xcd, 0xa2, 0x42, 0xac, 0x87, 0x82, 0xdf, 0x8d, 0x7c, 0xec, 0x99, 0x20,
	0xbd, 0xad, 0x06, 0xa2, 0x5e, 0xb7, 0x31, 0x75, 0x3a, 0xb4, 0x25, 0x9f, 0x65, 0x9c, 0x8e, 0xcb,
	0x09, 0xef, 0x7a, 0xd8, 0x9c, 0x51, 0xf5, 0xba, 0x8d, 0xe9, 0xb6, 0x9e, 0xdb, 0xd6, 0x53, 0xe8,
	0xff, 0x61, 0x39, 0x2d, 0x43, 0x83, 0xb6, 0x12, 0x9a, 0x95, 0x42, 0x4b, 0x49, 0xa1, 0x78, 0x0e,
	0x3d, 0x80, 0xb9, 0x23, 0xe2, 0x61, 0xea, 0xa8, 0x0b, 0xff, 0xe9, 0xf9, 0x3f, 0xfd, 0x3c, 0x62,
	0xcf, 0x1e, 0xf5, 0xc7, 0xe2, 0x46, 0x38, 0xd3, 0xbf, 0x48, 0xc7, 0xa1, 0x34, 0xa2, 0x8e, 0xa4,
	0x9e, 0x0a, 0xec, 0xa4, 0x1c, 0x5a, 0x87, 0x89, 0x90, 0x3f, 0x67, 0x26, 0x92, 0xf2, 0x57, 0x4e,
	0x6f, 0x21, 0x6d, 0xc9, 0x8b, 0x76, 0xa0, 0x1c, 0x57, 0xc3, 0x5e, 0x1d, 0x5b, 0x1c, 0xbf, 0x8e,
	0xcd, 0xbb, 0xa9, 0x31, 0x43, 0x37, 0x21, 0x1f, 0xb9, 0x27, 0xe6, 0x92, 0x54, 0x61, 0x66, 0xaa,
	0xb0, 0xdd, 0x13, 0x5b, 0x30, 0xa1, 0x5b, 0x50, 0x88, 0x44, 0xad, 0x31, 0x2f, 0x48, 0xee, 0x4a,
	0x36, 0xb7, 0xe0, 0xb0, 0x15, 0x23, 0xfa, 0x21, 0x14, 0xe3, 0x4c, 0xc0, 0xcc, 0x65, 0x29, 0x75,
	0xf9, 0xd4, 0x13, 0x67, 0xf7, 0xf9, 0xd1, 0x43, 0x58, 0xa0, 0x07, 0x07, 0x1d, 0x22, 0x73, 0x40,
	0xac, 0xe4, 0xd5, 0x71, 0x94, 0x94, 0xb5, 0xdc, 0x66, 0x4f, 0xd7, 0x45, 0x28, 0xb6, 0x23, 0xda,
	0x0d, 0x1d, 0xe2, 0x31, 0xd3, 0x5c, 0xc9, 0x8b, 0xce, 0x52, 0x12, 0xb6, 0x3c, 0x36, 0x46, 0xf3,
	0x8c, 0xee, 0xc2, 0x2c, 0xc7, 0xc7, 0xdc, 0x89, 0x3b, 0xab, 0x8a, 0x84, 0xf1, 0xfa, 0x08, 0x97,
	0xc5, 0x15, 0xd2, 0x9e, 0xe1, 0xbd, 0x6f, 0x86, 0x3e, 0x84, 0x69, 0xa6, 0x9e, 0x51, 0x98, 0x79,
	0x51, 0xca, 0x67, 0x37, 0x7c, 0xfa, 0xad, 0xc5, 0xee, 0x71, 0x5b, 0x7f, 0x99, 0x80, 0x59, 0xfd,
	0xe8, 0xb1, 0xe7, 0x06, 0xb8, 0x73, 0x3e, 0xb9, 0xa7, 0x7f, 0xee, 0x27, 0xb2, 0xcf, 0x7d, 0x21,
	0x79, 0xee, 0xcf, 0x7e, 0x62, 0x41, 0xdb, 0x00, 0x61, 0x44, 0x43, 0x1c, 0x25, 0x2e, 0x4e, 0x6f,
	0x67, 0x77, 0xca, 0x89, 0xcd, 0x56, 0xf7, 0x7a, 0x32, 0x76, 0x42, 0xbe, 0xf2, 0x75, 0x0e, 0xa0,
	0x3f, 0x85, 0x1e, 0xc2, 0x84, 0x7b, 0x8c, 0x99, 0x69, 0x9c, 0x72, 0x73, 0x1f, 0xa1, 0xb6, 0x5a,
	0x3b, 0xc6, 0xfa, 0xe6, 0x2e, 0x75, 0xa0, 0x06, 0x4c, 0xed, 0x77, 0x39, 0x17, 0x05, 0x27, 0x27,
	0xd5, 0xfd, 0xe0, 0x85, 0xd4, 0xdd, 0x55, 0xb2, 0x4a, 0x63, 0xac, 0xa9, 0xf2, 0x01, 0x14, 0x7b,
	0xeb, 0x24, 0x9f, 0x02, 0x8a, 0xea, 0x29, 0x60, 0x29, 0xf9, 0x14, 0x50, 0x4c, 0x5c, 0xf8, 0x2b,
	0x77, 0x60, 0x36, 0xa9, 0x31, 0xe3, 0x19, 0x61, 0xa4, 0xac, 0xb5, 0x08, 0x0b, 0xf7, 0x31, 0x7f,
	0xa2, 0x6a, 0x86, 0x8d, 0x3f, 0xeb, 0x62, 0xc6, 0xad, 0x2a, 0xa0, 0x24, 0x91, 0x85, 0x34, 0x60,
	0xf2, 0x76, 0xa3, 0x49, 0x1a, 0x56, 0x3c, 0xb4, 0x2e, 0x41, 0xe5, 0x3e, 0xe6, 0x0f, 0x28, 0xe3,
	0x7b, 0x1d, 0x97, 0x1f, 0xd0, 0x48, 0x3e, 0x96, 0xc6, 0xda, 0xbe, 0xca, 0xc3, 0xc5, 0xcc, 0x69,
	0xad, 0xf7, 0x0a, 0xcc, 0x50, 0xe6, 0xb0, 0x13, 0xe6, 0x24, 0x2e, 0x54, 0x45, 0xca, 0x1a, 0x27,
	0x2c, 0x8e, 0x42, 0xca, 0x9c, 0x08, 0x77, 0xb0, 0xcb, 0xe2, 0x1d, 0x14, 0x29, 0xb3, 0x15, 0x41,
	0x4f, 0xc7, 0x45, 0x30, 0x1f, 0x4f, 0x3f, 0xe9, 0x97, 0x41, 0xca, 0x1c, 0xdf, 0x6d, 0x1d, 0x92,
	0x20, 0xbe, 0x6a, 0x16, 0x29, 0x7b, 0xa4, 0x08, 0xe8, 0x0d, 0x98, 0x6b, 0x51, 0x3f, 0xec, 0x72,
	0x1c, 0xa9, 0xe5, 0x55, 0xcc, 0xce, 0xc6, 0x44, 0x89, 0xe0, 0x1a, 0x94, 0x18, 0x8e, 0x8e, 0x70,
	0xd4, 0x5b, 0x46, 0xdd, 0x3d, 0xe7, 0x14, 0x35, 0x5e, 0xca, 0x87, 0x79, 0xd7, 0xf3, 0x88, 0x28,
	0x2a, 0x6e, 0x27, 0x7e, 0x6c, 0x16, 0xd1, 0xb1, 0x99, 0x19, 0x1d, 0xa7, 0xd8, 0xa4, 0x5a, 0xeb,
	0xe9, 0x11, 0x64, 0x15, 0x28, 0x25, 0x37, 0x45, 0xac, 0xd4, 0x60, 0x31, 0x83, 0xed, 0x45, 0x22,
	0xc7, 0xfa, 0xc6, 0x00, 0xb4, 0x4d, 0x18, 0x57, 0xc5, 0x9d, 0x69, 0x8f, 0x89, 0x83, 0x7d, 0x40,
	0x3a, 0x1c, 0x47, 0x5a, 0x8b, 0x1e, 0x89, 0x7a, 0x74, 0x44, 0xf0, 0xe7, 0x52, 0x4f, 0x69, 0x44,
	0x3d, 0xaa, 0x3f, 0x21, 0xf8, 0xf3, 0x47, 0xd4, 0xc3, 0xb6, 0xe4, 0x15, 0xf6, 0x0f, 0xc5, 0x25,
	0x9b, 0xd3, 0x67, 0xb8, 0xe7, 0x1e, 0x41, 0x69, 0x0a, 0x82, 0xc8, 0xbb, 0x72, 0x9a, 0x91, 0xe7,
	0xf1, 0xff, 0x21, 0xa6, 0x05, 0xa1, 0x41, 0x9e, 0xe3, 0x74, 0x52, 0x2e, 0xa4, 0x93, 0xb2, 0x15,
	0xc2, 0x62, 0x0a, 0xba, 0x8e, 0xa6, 0x77, 0xa1, 0x40, 0x38, 0xf6, 0xe3, 0x73, 0x7e, 0xea, 0x45,
	0x5b, 0x71, 0xa2, 0xeb, 0x30, 0x1f, 0x88, 0xdc, 0x9d, 0xc0, 0xa9, 0x2c, 0x35, 0x27, 0xc8, 0x7b,
	0x31, 0x56, 0x6b, 0x07, 0xe6, 0x6d, 0xac, 0x12, 0xbc, 0x6c, 0x1e, 0xc6, 0xeb, 0x9a, 0x13, 0x1d,
	0x5a, 0x2e, 0xd5, 0xa1, 0x59, 0x4d, 0x58, 0xbe, 0xeb, 0xf2, 0xd6, 0xe1, 0x7d, 0x3c, 0xe8, 0x80,
	0x3b, 0xe9, 0x4d, 0xbc, 0x39, 0xa2, 0x90, 0xa6, 0xb0, 0xe8, 0xdd, 0x58, 0x3f, 0x85, 0xcb, 0x7d,
	0x85, 0x77, 0x4f, 0x36, 0xa8, 0x1f, 0xd2, 0x40, 0xf4, 0xa6, 0xdf, 0x85, 0xf2, 0x3f, 0x1a, 0x70,
	0x65, 0x94, 0xf6, 0xff, 0xde, 0x01, 0x37, 0x61, 0x21, 0xa0, 0xdc, 0x39, 0xa0, 0xdd, 0xc0, 0x73,
	0xa8, 0xfa, 0x87, 0x99, 0x4c, 0xac, 0x45, 0x7b, 0x3e, 0xa0, 0xfc, 0x9e, 0xa0, 0xeb, 0xff, 0xa3,
	0xa1, 0x35, 0x58, 0xec, 0x06, 0x11, 0x76, 0x5b, 0x87, 0xee, 0x7e, 0x07, 0xf7, 0xb8, 0xf3, 0x92,
	0x1b, 0x25, 0xa6, 0xb4, 0x80, 0xf5, 0x7b, 0x03, 0x5e, 0x1d, 0x32, 0xf3, 0xf7, 0x14, 0xeb, 0xe3,
	0x3e, 0x54, 0xdd, 0x97, 0x7d, 0x27, 0x5e, 0xfb, 0x83, 0x01, 0xe6, 0xb0, 0x5e, 0x6d, 0x83, 0xf5,
	0xb4, 0xe2, 0xd3, 0xdf, 0x98, 0xce, 0xc3, 0x08, 0xbf, 0x33, 0xd4, 0xc9, 0x1e, 0xb4, 0xc0, 0xf7,
	0x24, 0x2b, 0x59, 0x11, 0x2c, 0xa5, 0xe1, 0xbd, 0x84, 0x21, 0xc7, 0x4d, 0x3d, 0x5f, 0x1b, 0x60,
	0xca, 0x6c, 0x97, 0xe8, 0x28, 0xbe, 0x77, 0x86, 0xf9, 0x39, 0xbc, 0x96, 0x81, 0x51, 0x5b, 0xe7,
	0x83, 0xb4, 0x75, 0xae, 0x9e, 0xd9, 0x30, 0xbd, 0xa8, 0x89, 0x9e, 0xc2, 0xa5, 0xde, 0x31, 0xcf,
	0xb2, 0xd2, 0xcb, 0x1c, 0xa0, 0x3f, 0x1b, 0x70, 0x79, 0x84, 0xf2, 0x97, 0xdd, 0xde, 0xff, 0xf4,
	0x28, 0x21, 0x28, 0x0b, 0x8f, 0xec, 0x50, 0xaf, 0x77, 0x8c, 0xac, 0x87, 0xb0, 0x90, 0xa0, 0x69,
	0xf8, 0xef, 0x41, 0x21, 0x10, 0x04, 0x0d, 0x7f, 0xe0, 0xde, 0xa2, 0xde, 0x36, 0xaa, 0xa2, 0x5b,
	0x69, 0x70, 0x97, 0x77, 0x99, 0xad, 0xb8, 0x6f, 0x7e, 0x0c, 0xc5, 0x5e, 0x00, 0xa1, 0x2b, 0x50,
	0x79, 0xb2, 0x55, 0xff, 0xc4, 0x79, 0xb4, 0xbb, 0x59, 0x77, 0x76, 0x76, 0x9d, 0x8d, 0x07, 0x5b,
	0xdb, 0x9b, 0xce, 0xee, 0xdd, 0x87, 0xf5, 0x8d, 0x66, 0xa3, 0xfc, 0x0a, 0x42, 0x50, 0xea, 0xcf,
	0xdf, 0x7b, 0xbc, 0xbd, 0x5d, 0x36, 0xd6, 0xff, 0x06, 0x30, 0xa7, 0x7e, 0xa0, 0xd1, 0xc0, 0xd1,
	0x11, 0x69, 0x61, 0xf4, 0x33, 0x80, 0x7e, 0xef, 0x89, 0xae, 0x8f, 0xea, 0x9c, 0xd2, 0x1d, 0x6b,
	0xe5, 0xc6, 0x99, 0x7c, 0x7a, 0xa3, 0xc7, 0xb0, 0x98, 0xd1, 0x77, 0xa1, 0xb5, 0xf1, 0x3b, 0x34,
	0xb5, 0xe0, 0xad, 0x17, 0x6d, 0xe9, 0xd0, 0x2f, 0x60, 0x26, 0xd1, 0xaf, 0xa0, 0x6c, 0xc4, 0xc3,
	0xcd, 0x58, 0x65, 0xf5, 0x6c, 0x46, 0xb5, 0x82, 0x55, 0xf9, 0xf2, 0x1f, 0xdf, 0xfe, 0x3a, 0xb7,
	0x84, 0xd0, 0xda, 0xd1, 0xbb, 0xf1, 0xaf, 0x5f, 0xd4, 0x43, 0x0d, 0xbb, 0x65, 0xa0, 0xdf, 0x18,
	0x30, 0x3f, 0x50, 0x07, 0xd1, 0xff, 0x65, 0xea, 0xce, 0x6e, 0x4a, 0x2a, 0x6f, 0x8f, 0xc7, 0xac,
	0xc1, 0x5c, 0x97, 0x60, 0x56, 0xac, 0x8b, 0xc3, 0x60, 0xee, 0xec, 0x6b, 0x99, 0x3b, 0xc6, 0xcd,
	0x5b, 0x06, 0xfa, 0x93, 0x01, 0xcb, 0xd9, 0x3d, 0x05, 0x5a, 0x1f, 0x65, 0xe5, 0xd1, 0xed, 0x4d,
	0xe5, 0xf6, 0x0b, 0xc9, 0x68, 0xb4, 0xef, 0x48, 0xb4, 0x37, 0x2c, 0x2b, 0x03, 0x6d, 0x1b, 0xf3,
	0xa4, 0x8c, 0x02, 0xfd, 0xa5, 0x01, 0xb3, 0xc9, 0x2a, 0x80, 0x46, 0xbb, 0x69, 0xa0, 0x8e, 0x55,
	0xde, 0x1a, 0x83, 0x53, 0xc3, 0xba, 0x28, 0x61, 0x5d, 0x40, 0x8b, 0x09, 0x58, 0xfa, 0x81, 0x46,
	0xb8, 0xf4, 0xb7, 0x06, 0x94, 0x07, 0xeb, 0x3a, 0x3a, 0xdd, 0x4d, 0x83, 0x60, 0xde, 0x19, 0x93,
	0x5b, 0x03, 0xba, 0x21, 0x01, 0x5d, 0xb5, 0x2e, 0x65, 0x00, 0x1a, 0x70, 0x2b, 0x57, 0x79, 0x26,
	0x95, 0x2e, 0xd1, 0x3b, 0xa3, 0x83, 0x39, 0x23, 0x67, 0x57, 0xaa, 0xe3, 0xb2, 0x2b, 0x78, 0xb7,
	0x0c, 0xf4, 0x85, 0x01, 0x17, 0x32, 0x33, 0x35, 0x7a, 0xf7, 0xf4, 0xf0, 0xcd, 0x5a, 0x7e, 0xfd,
	0x45, 0x44, 0x7a, 0x10, 0x38, 0x14, 0x7b, 0x09, 0x16, 0x5d, 0x1b, 0xb9, 0x83, 0x64, 0x52, 0xae,
	0x5c, 0x3f, 0x8b, 0x4d, 0xdb, 0xdf, 0x94, 0xf6, 0x47, 0xa8, 0x9c, 0xb0, 0xbf, 0x4c, 0xc5, 0x77,
	0xdf, 0x78, 0x7a, 0x75, 0x9f, 0xf0, 0xfd, 0x6e, 0xeb, 0x19, 0xe6, 0x55, 0x1a, 0xb5, 0xd7, 0x6a,
	0xc3, 0xbf, 0x85, 0xdb, 0x9f, 0x94, 0x3f, 0x2c, 0xbb, 0xfd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x0b, 0x60, 0x17, 0x6c, 0x29, 0x27, 0x00, 0x00,
}
