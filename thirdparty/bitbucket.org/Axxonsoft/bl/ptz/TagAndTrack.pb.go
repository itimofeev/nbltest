// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/ptz/TagAndTrack.proto

package ptz // import "bitbucket.org/Axxonsoft/bl/ptz"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import primitive "bitbucket.org/Axxonsoft/bl/primitive"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ETagAndTrackMode int32

const (
	ETagAndTrackMode_TAG_AND_TRACK_EVENT_TYPE_OFF                  ETagAndTrackMode = 0
	ETagAndTrackMode_TAG_AND_TRACK_EVENT_TYPE_MANUAL               ETagAndTrackMode = 1
	ETagAndTrackMode_TAG_AND_TRACK_EVENT_TYPE_AUTOMATIC            ETagAndTrackMode = 2
	ETagAndTrackMode_TAG_AND_TRACK_EVENT_TYPE_USER_PRIORITY        ETagAndTrackMode = 3
	ETagAndTrackMode_TAG_AND_TRACK_EVENT_TYPE_USER_PRIORITY_MANUAL ETagAndTrackMode = 4
)

var ETagAndTrackMode_name = map[int32]string{
	0: "TAG_AND_TRACK_EVENT_TYPE_OFF",
	1: "TAG_AND_TRACK_EVENT_TYPE_MANUAL",
	2: "TAG_AND_TRACK_EVENT_TYPE_AUTOMATIC",
	3: "TAG_AND_TRACK_EVENT_TYPE_USER_PRIORITY",
	4: "TAG_AND_TRACK_EVENT_TYPE_USER_PRIORITY_MANUAL",
}
var ETagAndTrackMode_value = map[string]int32{
	"TAG_AND_TRACK_EVENT_TYPE_OFF":                  0,
	"TAG_AND_TRACK_EVENT_TYPE_MANUAL":               1,
	"TAG_AND_TRACK_EVENT_TYPE_AUTOMATIC":            2,
	"TAG_AND_TRACK_EVENT_TYPE_USER_PRIORITY":        3,
	"TAG_AND_TRACK_EVENT_TYPE_USER_PRIORITY_MANUAL": 4,
}

func (x ETagAndTrackMode) String() string {
	return proto.EnumName(ETagAndTrackMode_name, int32(x))
}
func (ETagAndTrackMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{0}
}

type TnTCalibrationPoint struct {
	ImagePosition        *primitive.Point  `protobuf:"bytes,1,opt,name=image_position,json=imagePosition" json:"image_position,omitempty"`
	PtzPosition          *AbsolutePosition `protobuf:"bytes,2,opt,name=ptz_position,json=ptzPosition" json:"ptz_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TnTCalibrationPoint) Reset()         { *m = TnTCalibrationPoint{} }
func (m *TnTCalibrationPoint) String() string { return proto.CompactTextString(m) }
func (*TnTCalibrationPoint) ProtoMessage()    {}
func (*TnTCalibrationPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{0}
}
func (m *TnTCalibrationPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TnTCalibrationPoint.Unmarshal(m, b)
}
func (m *TnTCalibrationPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TnTCalibrationPoint.Marshal(b, m, deterministic)
}
func (dst *TnTCalibrationPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TnTCalibrationPoint.Merge(dst, src)
}
func (m *TnTCalibrationPoint) XXX_Size() int {
	return xxx_messageInfo_TnTCalibrationPoint.Size(m)
}
func (m *TnTCalibrationPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_TnTCalibrationPoint.DiscardUnknown(m)
}

var xxx_messageInfo_TnTCalibrationPoint proto.InternalMessageInfo

func (m *TnTCalibrationPoint) GetImagePosition() *primitive.Point {
	if m != nil {
		return m.ImagePosition
	}
	return nil
}

func (m *TnTCalibrationPoint) GetPtzPosition() *AbsolutePosition {
	if m != nil {
		return m.PtzPosition
	}
	return nil
}

type TnTTracker struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ImageWidth           int32                  `protobuf:"varint,2,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight          int32                  `protobuf:"varint,3,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	CalibrationPoints    []*TnTCalibrationPoint `protobuf:"bytes,4,rep,name=calibration_points,json=calibrationPoints" json:"calibration_points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TnTTracker) Reset()         { *m = TnTTracker{} }
func (m *TnTTracker) String() string { return proto.CompactTextString(m) }
func (*TnTTracker) ProtoMessage()    {}
func (*TnTTracker) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{1}
}
func (m *TnTTracker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TnTTracker.Unmarshal(m, b)
}
func (m *TnTTracker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TnTTracker.Marshal(b, m, deterministic)
}
func (dst *TnTTracker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TnTTracker.Merge(dst, src)
}
func (m *TnTTracker) XXX_Size() int {
	return xxx_messageInfo_TnTTracker.Size(m)
}
func (m *TnTTracker) XXX_DiscardUnknown() {
	xxx_messageInfo_TnTTracker.DiscardUnknown(m)
}

var xxx_messageInfo_TnTTracker proto.InternalMessageInfo

func (m *TnTTracker) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TnTTracker) GetImageWidth() int32 {
	if m != nil {
		return m.ImageWidth
	}
	return 0
}

func (m *TnTTracker) GetImageHeight() int32 {
	if m != nil {
		return m.ImageHeight
	}
	return 0
}

func (m *TnTTracker) GetCalibrationPoints() []*TnTCalibrationPoint {
	if m != nil {
		return m.CalibrationPoints
	}
	return nil
}

type ListTnTTrackersRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTnTTrackersRequest) Reset()         { *m = ListTnTTrackersRequest{} }
func (m *ListTnTTrackersRequest) String() string { return proto.CompactTextString(m) }
func (*ListTnTTrackersRequest) ProtoMessage()    {}
func (*ListTnTTrackersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{2}
}
func (m *ListTnTTrackersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTnTTrackersRequest.Unmarshal(m, b)
}
func (m *ListTnTTrackersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTnTTrackersRequest.Marshal(b, m, deterministic)
}
func (dst *ListTnTTrackersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTnTTrackersRequest.Merge(dst, src)
}
func (m *ListTnTTrackersRequest) XXX_Size() int {
	return xxx_messageInfo_ListTnTTrackersRequest.Size(m)
}
func (m *ListTnTTrackersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTnTTrackersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTnTTrackersRequest proto.InternalMessageInfo

func (m *ListTnTTrackersRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type ListTnTTrackersResponse struct {
	Mode                 ETagAndTrackMode `protobuf:"varint,1,opt,name=mode,enum=axxonsoft.bl.ptz.ETagAndTrackMode" json:"mode,omitempty"`
	Trackers             []*TnTTracker    `protobuf:"bytes,2,rep,name=trackers" json:"trackers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListTnTTrackersResponse) Reset()         { *m = ListTnTTrackersResponse{} }
func (m *ListTnTTrackersResponse) String() string { return proto.CompactTextString(m) }
func (*ListTnTTrackersResponse) ProtoMessage()    {}
func (*ListTnTTrackersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{3}
}
func (m *ListTnTTrackersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTnTTrackersResponse.Unmarshal(m, b)
}
func (m *ListTnTTrackersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTnTTrackersResponse.Marshal(b, m, deterministic)
}
func (dst *ListTnTTrackersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTnTTrackersResponse.Merge(dst, src)
}
func (m *ListTnTTrackersResponse) XXX_Size() int {
	return xxx_messageInfo_ListTnTTrackersResponse.Size(m)
}
func (m *ListTnTTrackersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTnTTrackersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTnTTrackersResponse proto.InternalMessageInfo

func (m *ListTnTTrackersResponse) GetMode() ETagAndTrackMode {
	if m != nil {
		return m.Mode
	}
	return ETagAndTrackMode_TAG_AND_TRACK_EVENT_TYPE_OFF
}

func (m *ListTnTTrackersResponse) GetTrackers() []*TnTTracker {
	if m != nil {
		return m.Trackers
	}
	return nil
}

type TnTFollowTrackRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	TrackerId            string   `protobuf:"bytes,2,opt,name=tracker_id,json=trackerId" json:"tracker_id,omitempty"`
	TrackId              int32    `protobuf:"varint,3,opt,name=track_id,json=trackId" json:"track_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TnTFollowTrackRequest) Reset()         { *m = TnTFollowTrackRequest{} }
func (m *TnTFollowTrackRequest) String() string { return proto.CompactTextString(m) }
func (*TnTFollowTrackRequest) ProtoMessage()    {}
func (*TnTFollowTrackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{4}
}
func (m *TnTFollowTrackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TnTFollowTrackRequest.Unmarshal(m, b)
}
func (m *TnTFollowTrackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TnTFollowTrackRequest.Marshal(b, m, deterministic)
}
func (dst *TnTFollowTrackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TnTFollowTrackRequest.Merge(dst, src)
}
func (m *TnTFollowTrackRequest) XXX_Size() int {
	return xxx_messageInfo_TnTFollowTrackRequest.Size(m)
}
func (m *TnTFollowTrackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TnTFollowTrackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TnTFollowTrackRequest proto.InternalMessageInfo

func (m *TnTFollowTrackRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *TnTFollowTrackRequest) GetTrackerId() string {
	if m != nil {
		return m.TrackerId
	}
	return ""
}

func (m *TnTFollowTrackRequest) GetTrackId() int32 {
	if m != nil {
		return m.TrackId
	}
	return 0
}

type TnTFollowTrackResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TnTFollowTrackResponse) Reset()         { *m = TnTFollowTrackResponse{} }
func (m *TnTFollowTrackResponse) String() string { return proto.CompactTextString(m) }
func (*TnTFollowTrackResponse) ProtoMessage()    {}
func (*TnTFollowTrackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{5}
}
func (m *TnTFollowTrackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TnTFollowTrackResponse.Unmarshal(m, b)
}
func (m *TnTFollowTrackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TnTFollowTrackResponse.Marshal(b, m, deterministic)
}
func (dst *TnTFollowTrackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TnTFollowTrackResponse.Merge(dst, src)
}
func (m *TnTFollowTrackResponse) XXX_Size() int {
	return xxx_messageInfo_TnTFollowTrackResponse.Size(m)
}
func (m *TnTFollowTrackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TnTFollowTrackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TnTFollowTrackResponse proto.InternalMessageInfo

type TnTMoveToCoordsRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	TrackerId            string   `protobuf:"bytes,2,opt,name=tracker_id,json=trackerId" json:"tracker_id,omitempty"`
	X                    float64  `protobuf:"fixed64,3,opt,name=x" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,4,opt,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TnTMoveToCoordsRequest) Reset()         { *m = TnTMoveToCoordsRequest{} }
func (m *TnTMoveToCoordsRequest) String() string { return proto.CompactTextString(m) }
func (*TnTMoveToCoordsRequest) ProtoMessage()    {}
func (*TnTMoveToCoordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{6}
}
func (m *TnTMoveToCoordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TnTMoveToCoordsRequest.Unmarshal(m, b)
}
func (m *TnTMoveToCoordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TnTMoveToCoordsRequest.Marshal(b, m, deterministic)
}
func (dst *TnTMoveToCoordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TnTMoveToCoordsRequest.Merge(dst, src)
}
func (m *TnTMoveToCoordsRequest) XXX_Size() int {
	return xxx_messageInfo_TnTMoveToCoordsRequest.Size(m)
}
func (m *TnTMoveToCoordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TnTMoveToCoordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TnTMoveToCoordsRequest proto.InternalMessageInfo

func (m *TnTMoveToCoordsRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *TnTMoveToCoordsRequest) GetTrackerId() string {
	if m != nil {
		return m.TrackerId
	}
	return ""
}

func (m *TnTMoveToCoordsRequest) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *TnTMoveToCoordsRequest) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type TnTMoveToCoordsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TnTMoveToCoordsResponse) Reset()         { *m = TnTMoveToCoordsResponse{} }
func (m *TnTMoveToCoordsResponse) String() string { return proto.CompactTextString(m) }
func (*TnTMoveToCoordsResponse) ProtoMessage()    {}
func (*TnTMoveToCoordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_TagAndTrack_baa77d6a023880b5, []int{7}
}
func (m *TnTMoveToCoordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TnTMoveToCoordsResponse.Unmarshal(m, b)
}
func (m *TnTMoveToCoordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TnTMoveToCoordsResponse.Marshal(b, m, deterministic)
}
func (dst *TnTMoveToCoordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TnTMoveToCoordsResponse.Merge(dst, src)
}
func (m *TnTMoveToCoordsResponse) XXX_Size() int {
	return xxx_messageInfo_TnTMoveToCoordsResponse.Size(m)
}
func (m *TnTMoveToCoordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TnTMoveToCoordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TnTMoveToCoordsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TnTCalibrationPoint)(nil), "axxonsoft.bl.ptz.TnTCalibrationPoint")
	proto.RegisterType((*TnTTracker)(nil), "axxonsoft.bl.ptz.TnTTracker")
	proto.RegisterType((*ListTnTTrackersRequest)(nil), "axxonsoft.bl.ptz.ListTnTTrackersRequest")
	proto.RegisterType((*ListTnTTrackersResponse)(nil), "axxonsoft.bl.ptz.ListTnTTrackersResponse")
	proto.RegisterType((*TnTFollowTrackRequest)(nil), "axxonsoft.bl.ptz.TnTFollowTrackRequest")
	proto.RegisterType((*TnTFollowTrackResponse)(nil), "axxonsoft.bl.ptz.TnTFollowTrackResponse")
	proto.RegisterType((*TnTMoveToCoordsRequest)(nil), "axxonsoft.bl.ptz.TnTMoveToCoordsRequest")
	proto.RegisterType((*TnTMoveToCoordsResponse)(nil), "axxonsoft.bl.ptz.TnTMoveToCoordsResponse")
	proto.RegisterEnum("axxonsoft.bl.ptz.ETagAndTrackMode", ETagAndTrackMode_name, ETagAndTrackMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TagAndTrackService service

type TagAndTrackServiceClient interface {
	ListTrackers(ctx context.Context, in *ListTnTTrackersRequest, opts ...grpc.CallOption) (*ListTnTTrackersResponse, error)
	FollowTrack(ctx context.Context, in *TnTFollowTrackRequest, opts ...grpc.CallOption) (*TnTFollowTrackResponse, error)
	MoveToCoords(ctx context.Context, in *TnTMoveToCoordsRequest, opts ...grpc.CallOption) (*TnTMoveToCoordsResponse, error)
}

type tagAndTrackServiceClient struct {
	cc *grpc.ClientConn
}

func NewTagAndTrackServiceClient(cc *grpc.ClientConn) TagAndTrackServiceClient {
	return &tagAndTrackServiceClient{cc}
}

func (c *tagAndTrackServiceClient) ListTrackers(ctx context.Context, in *ListTnTTrackersRequest, opts ...grpc.CallOption) (*ListTnTTrackersResponse, error) {
	out := new(ListTnTTrackersResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TagAndTrackService/ListTrackers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagAndTrackServiceClient) FollowTrack(ctx context.Context, in *TnTFollowTrackRequest, opts ...grpc.CallOption) (*TnTFollowTrackResponse, error) {
	out := new(TnTFollowTrackResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TagAndTrackService/FollowTrack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagAndTrackServiceClient) MoveToCoords(ctx context.Context, in *TnTMoveToCoordsRequest, opts ...grpc.CallOption) (*TnTMoveToCoordsResponse, error) {
	out := new(TnTMoveToCoordsResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TagAndTrackService/MoveToCoords", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TagAndTrackService service

type TagAndTrackServiceServer interface {
	ListTrackers(context.Context, *ListTnTTrackersRequest) (*ListTnTTrackersResponse, error)
	FollowTrack(context.Context, *TnTFollowTrackRequest) (*TnTFollowTrackResponse, error)
	MoveToCoords(context.Context, *TnTMoveToCoordsRequest) (*TnTMoveToCoordsResponse, error)
}

func RegisterTagAndTrackServiceServer(s *grpc.Server, srv TagAndTrackServiceServer) {
	s.RegisterService(&_TagAndTrackService_serviceDesc, srv)
}

func _TagAndTrackService_ListTrackers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTnTTrackersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagAndTrackServiceServer).ListTrackers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TagAndTrackService/ListTrackers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagAndTrackServiceServer).ListTrackers(ctx, req.(*ListTnTTrackersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagAndTrackService_FollowTrack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TnTFollowTrackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagAndTrackServiceServer).FollowTrack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TagAndTrackService/FollowTrack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagAndTrackServiceServer).FollowTrack(ctx, req.(*TnTFollowTrackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagAndTrackService_MoveToCoords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TnTMoveToCoordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagAndTrackServiceServer).MoveToCoords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TagAndTrackService/MoveToCoords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagAndTrackServiceServer).MoveToCoords(ctx, req.(*TnTMoveToCoordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TagAndTrackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.ptz.TagAndTrackService",
	HandlerType: (*TagAndTrackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTrackers",
			Handler:    _TagAndTrackService_ListTrackers_Handler,
		},
		{
			MethodName: "FollowTrack",
			Handler:    _TagAndTrackService_FollowTrack_Handler,
		},
		{
			MethodName: "MoveToCoords",
			Handler:    _TagAndTrackService_MoveToCoords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/ptz/TagAndTrack.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/ptz/TagAndTrack.proto", fileDescriptor_TagAndTrack_baa77d6a023880b5)
}

var fileDescriptor_TagAndTrack_baa77d6a023880b5 = []byte{
	// 737 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0x9c, 0xe4, 0xfb, 0xe9, 0x4d, 0xbe, 0x2a, 0x0c, 0xa2, 0x4d, 0xa3, 0x94, 0x86, 0x01,
	0xda, 0x10, 0x09, 0x5b, 0x2d, 0x12, 0x42, 0x65, 0x65, 0xd2, 0x14, 0x22, 0x9a, 0x36, 0x72, 0xa7,
	0xa0, 0xb2, 0xb1, 0x1c, 0x7b, 0x9a, 0x8e, 0xea, 0x78, 0x8c, 0x3d, 0x4d, 0xd3, 0x2c, 0xd9, 0xb0,
	0x00, 0x56, 0xbc, 0x01, 0x0f, 0xc1, 0x8e, 0xa7, 0xe0, 0x05, 0x58, 0xf0, 0x20, 0x28, 0x63, 0xa7,
	0x4d, 0x13, 0x47, 0x74, 0xc1, 0xce, 0x73, 0xe7, 0x9c, 0x7b, 0xcf, 0xbd, 0xf7, 0x58, 0x03, 0xd8,
	0xea, 0xf7, 0xb9, 0x17, 0xf2, 0x23, 0xa1, 0xb5, 0x5d, 0xcd, 0x17, 0x03, 0x8d, 0x58, 0x1d, 0xdd,
	0x73, 0x48, 0x60, 0xd9, 0x27, 0xaa, 0x1f, 0x70, 0xc1, 0x51, 0xfe, 0x02, 0xa3, 0xb6, 0x5d, 0xd5,
	0x17, 0x83, 0x62, 0xa9, 0xc3, 0x79, 0xc7, 0xa5, 0x9a, 0xe5, 0x33, 0xcd, 0xf2, 0x3c, 0x2e, 0x2c,
	0xc1, 0xb8, 0x17, 0x46, 0xf8, 0x62, 0x79, 0x3a, 0x27, 0x75, 0x69, 0x97, 0x8a, 0xe0, 0x3c, 0x46,
	0xac, 0x5d, 0x45, 0x04, 0xac, 0xcb, 0x04, 0xeb, 0x51, 0xad, 0x35, 0xfa, 0x8a, 0x53, 0xe1, 0x2f,
	0x0a, 0xdc, 0x24, 0x1e, 0xa9, 0x59, 0x2e, 0x6b, 0x07, 0xb2, 0x48, 0x8b, 0x33, 0x4f, 0xa0, 0x2d,
	0x98, 0x67, 0x5d, 0xab, 0x43, 0x4d, 0x9f, 0x87, 0x6c, 0x18, 0x2e, 0x28, 0x65, 0xa5, 0x92, 0xdd,
	0x58, 0x56, 0xaf, 0x6a, 0x1d, 0xe5, 0x53, 0x25, 0xcd, 0xf8, 0x5f, 0x92, 0x5a, 0x31, 0x07, 0xd5,
	0x21, 0xe7, 0x8b, 0xc1, 0x65, 0x8e, 0x94, 0xcc, 0x81, 0xd5, 0xc9, 0x7e, 0x55, 0xbd, 0x1d, 0x72,
	0xf7, 0x54, 0x5c, 0x30, 0x8d, 0xac, 0x2f, 0x06, 0xa3, 0x03, 0xfe, 0xaa, 0x00, 0x10, 0x8f, 0xc8,
	0x91, 0xd1, 0x00, 0xcd, 0x43, 0x8a, 0x39, 0x52, 0xcf, 0x9c, 0x91, 0x62, 0x0e, 0x5a, 0x81, 0x6c,
	0xa4, 0xf5, 0x8c, 0x39, 0xe2, 0x58, 0x16, 0xf9, 0xdb, 0x00, 0x19, 0x7a, 0x3d, 0x8c, 0xa0, 0x3b,
	0x90, 0x8b, 0x00, 0xc7, 0x94, 0x75, 0x8e, 0x45, 0x21, 0x2d, 0x11, 0x11, 0xe9, 0x85, 0x0c, 0x21,
	0x02, 0xc8, 0xbe, 0x9c, 0x81, 0xe9, 0x0f, 0xbb, 0x09, 0x0b, 0x99, 0x72, 0xba, 0x92, 0xdd, 0xb8,
	0x3f, 0xad, 0x37, 0x61, 0x64, 0xc6, 0x0d, 0x7b, 0x22, 0x12, 0xe2, 0xa7, 0xb0, 0xb0, 0xc3, 0x42,
	0x71, 0xa9, 0x3d, 0x34, 0xe8, 0xdb, 0x53, 0x1a, 0x8a, 0xa1, 0x24, 0xcb, 0xb6, 0x69, 0x18, 0x46,
	0xa5, 0xe2, 0x6e, 0xb2, 0x51, 0x4c, 0xb2, 0xf1, 0x07, 0x05, 0x16, 0xa7, 0xd8, 0xa1, 0xcf, 0xbd,
	0x90, 0xa2, 0xc7, 0x90, 0xe9, 0x72, 0x87, 0x4a, 0xda, 0x7c, 0xd2, 0x40, 0xeb, 0x63, 0x2e, 0x6b,
	0x72, 0x87, 0x1a, 0x12, 0x8f, 0x9e, 0xc0, 0x7f, 0x22, 0xce, 0x55, 0x48, 0xc9, 0xe6, 0x4a, 0x89,
	0xcd, 0xc5, 0x05, 0x8d, 0x0b, 0x34, 0x16, 0x70, 0x8b, 0x78, 0x64, 0x9b, 0xbb, 0x2e, 0x3f, 0x93,
	0xb7, 0xd7, 0xef, 0x04, 0x2d, 0x03, 0xc4, 0x79, 0x4c, 0xe6, 0xc8, 0xfd, 0xcc, 0x19, 0x73, 0x71,
	0xa4, 0xe1, 0xa0, 0xa5, 0x58, 0xd4, 0xf0, 0x32, 0x5a, 0xcd, 0xbf, 0xf2, 0xdc, 0x70, 0x70, 0x01,
	0x16, 0x26, 0xab, 0x46, 0x13, 0xc0, 0x3d, 0x79, 0xd3, 0xe4, 0x3d, 0x4a, 0x78, 0x8d, 0xf3, 0xc0,
	0x09, 0xff, 0x9c, 0xa0, 0x1c, 0x28, 0x7d, 0xa9, 0x44, 0x31, 0x94, 0xfe, 0xf0, 0x74, 0x5e, 0xc8,
	0x44, 0xa7, 0x73, 0xbc, 0x04, 0x8b, 0x53, 0x75, 0x23, 0x49, 0xd5, 0x1f, 0x0a, 0xe4, 0x27, 0xe7,
	0x8e, 0xca, 0x50, 0x22, 0xfa, 0x73, 0x53, 0xdf, 0xdd, 0x32, 0x89, 0xa1, 0xd7, 0x5e, 0x9a, 0xf5,
	0x57, 0xf5, 0x5d, 0x62, 0x92, 0xc3, 0x56, 0xdd, 0xdc, 0xdb, 0xde, 0xce, 0xff, 0x85, 0xee, 0xc2,
	0xca, 0x4c, 0x44, 0x53, 0xdf, 0x3d, 0xd0, 0x77, 0xf2, 0x0a, 0x5a, 0x05, 0x3c, 0x13, 0xa4, 0x1f,
	0x90, 0xbd, 0xa6, 0x4e, 0x1a, 0xb5, 0x7c, 0x0a, 0x55, 0x61, 0x75, 0x26, 0xee, 0x60, 0xbf, 0x6e,
	0x98, 0x2d, 0xa3, 0xb1, 0x67, 0x34, 0xc8, 0x61, 0x3e, 0x8d, 0xd6, 0xe1, 0xe1, 0xf5, 0xb0, 0x23,
	0x19, 0x99, 0x8d, 0x6f, 0x69, 0x40, 0x63, 0x1d, 0xee, 0xd3, 0xa0, 0xc7, 0x6c, 0x8a, 0xde, 0x2b,
	0x90, 0x93, 0x56, 0x8d, 0xdd, 0x82, 0x2a, 0xd3, 0xae, 0x4a, 0xfe, 0x11, 0x8a, 0x0f, 0xae, 0x81,
	0x8c, 0x57, 0x8e, 0xdf, 0x7d, 0xff, 0xf9, 0x39, 0x55, 0x42, 0x45, 0xad, 0xb7, 0xae, 0x09, 0xab,
	0x63, 0x5a, 0x9e, 0x63, 0xca, 0xad, 0x69, 0x23, 0x9b, 0xa2, 0x8f, 0x0a, 0x64, 0xc7, 0xec, 0x82,
	0xd6, 0x12, 0xed, 0x3d, 0x6d, 0xe3, 0x62, 0xe5, 0xf7, 0xc0, 0x58, 0x46, 0x55, 0xca, 0xb8, 0x87,
	0x57, 0xa6, 0x65, 0x58, 0xf6, 0xf0, 0xe7, 0xdf, 0x3c, 0x92, 0xac, 0x4d, 0xa5, 0x8a, 0x3e, 0x29,
	0x90, 0x1b, 0xf7, 0x0a, 0x4a, 0x2e, 0x93, 0x60, 0xe3, 0xa4, 0xc1, 0xcc, 0x30, 0x1e, 0xae, 0x48,
	0x45, 0x18, 0x2f, 0xcf, 0x54, 0xd4, 0xe5, 0x3d, 0xba, 0xa9, 0x54, 0x9f, 0x95, 0xdf, 0xdc, 0x6e,
	0x33, 0xd1, 0x3e, 0xb5, 0x4f, 0xa8, 0x50, 0x79, 0xd0, 0xd1, 0xf4, 0x89, 0x97, 0xa4, 0xfd, 0x8f,
	0x7c, 0x17, 0x1e, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x1b, 0x71, 0xa5, 0xb8, 0x06, 0x00,
	0x00,
}
