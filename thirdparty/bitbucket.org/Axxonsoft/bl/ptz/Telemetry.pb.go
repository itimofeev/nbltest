// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/ptz/Telemetry.proto

package ptz // import "bitbucket.org/Axxonsoft/bl/ptz"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import primitive "bitbucket.org/Axxonsoft/bl/primitive"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AcquireSessionResponse_EErrorCode int32

const (
	AcquireSessionResponse_NotError           AcquireSessionResponse_EErrorCode = 0
	AcquireSessionResponse_SessionUnavailable AcquireSessionResponse_EErrorCode = 1
	AcquireSessionResponse_GeneralError       AcquireSessionResponse_EErrorCode = 2
	AcquireSessionResponse_PresetError        AcquireSessionResponse_EErrorCode = 3
)

var AcquireSessionResponse_EErrorCode_name = map[int32]string{
	0: "NotError",
	1: "SessionUnavailable",
	2: "GeneralError",
	3: "PresetError",
}
var AcquireSessionResponse_EErrorCode_value = map[string]int32{
	"NotError":           0,
	"SessionUnavailable": 1,
	"GeneralError":       2,
	"PresetError":        3,
}

func (x AcquireSessionResponse_EErrorCode) String() string {
	return proto.EnumName(AcquireSessionResponse_EErrorCode_name, int32(x))
}
func (AcquireSessionResponse_EErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{3, 0}
}

type MoveRequest struct {
	AccessPoint          string        `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32         `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Mode                 *Capabilities `protobuf:"bytes,3,opt,name=mode" json:"mode,omitempty"`
	ValPan               float64       `protobuf:"fixed64,4,opt,name=val_pan,json=valPan" json:"val_pan,omitempty"`
	ValTilt              float64       `protobuf:"fixed64,5,opt,name=val_tilt,json=valTilt" json:"val_tilt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{0}
}
func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (dst *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(dst, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *MoveRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *MoveRequest) GetMode() *Capabilities {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *MoveRequest) GetValPan() float64 {
	if m != nil {
		return m.ValPan
	}
	return 0
}

func (m *MoveRequest) GetValTilt() float64 {
	if m != nil {
		return m.ValTilt
	}
	return 0
}

type UserSessionInformation struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSessionInformation) Reset()         { *m = UserSessionInformation{} }
func (m *UserSessionInformation) String() string { return proto.CompactTextString(m) }
func (*UserSessionInformation) ProtoMessage()    {}
func (*UserSessionInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{1}
}
func (m *UserSessionInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSessionInformation.Unmarshal(m, b)
}
func (m *UserSessionInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSessionInformation.Marshal(b, m, deterministic)
}
func (dst *UserSessionInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSessionInformation.Merge(dst, src)
}
func (m *UserSessionInformation) XXX_Size() int {
	return xxx_messageInfo_UserSessionInformation.Size(m)
}
func (m *UserSessionInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSessionInformation.DiscardUnknown(m)
}

var xxx_messageInfo_UserSessionInformation proto.InternalMessageInfo

func (m *UserSessionInformation) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserSessionInformation) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

type AcquireSessionRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireSessionRequest) Reset()         { *m = AcquireSessionRequest{} }
func (m *AcquireSessionRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireSessionRequest) ProtoMessage()    {}
func (*AcquireSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{2}
}
func (m *AcquireSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireSessionRequest.Unmarshal(m, b)
}
func (m *AcquireSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireSessionRequest.Marshal(b, m, deterministic)
}
func (dst *AcquireSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireSessionRequest.Merge(dst, src)
}
func (m *AcquireSessionRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireSessionRequest.Size(m)
}
func (m *AcquireSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireSessionRequest proto.InternalMessageInfo

func (m *AcquireSessionRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *AcquireSessionRequest) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

type AcquireSessionResponse struct {
	SessionId            int32                             `protobuf:"varint,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	UserSessionInfo      *UserSessionInformation           `protobuf:"bytes,2,opt,name=user_session_info,json=userSessionInfo" json:"user_session_info,omitempty"`
	ErrorCode            AcquireSessionResponse_EErrorCode `protobuf:"varint,3,opt,name=error_code,json=errorCode,enum=axxonsoft.bl.ptz.AcquireSessionResponse_EErrorCode" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *AcquireSessionResponse) Reset()         { *m = AcquireSessionResponse{} }
func (m *AcquireSessionResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireSessionResponse) ProtoMessage()    {}
func (*AcquireSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{3}
}
func (m *AcquireSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireSessionResponse.Unmarshal(m, b)
}
func (m *AcquireSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireSessionResponse.Marshal(b, m, deterministic)
}
func (dst *AcquireSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireSessionResponse.Merge(dst, src)
}
func (m *AcquireSessionResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireSessionResponse.Size(m)
}
func (m *AcquireSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireSessionResponse proto.InternalMessageInfo

func (m *AcquireSessionResponse) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *AcquireSessionResponse) GetUserSessionInfo() *UserSessionInformation {
	if m != nil {
		return m.UserSessionInfo
	}
	return nil
}

func (m *AcquireSessionResponse) GetErrorCode() AcquireSessionResponse_EErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return AcquireSessionResponse_NotError
}

type SessionRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32    `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{4}
}
func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (dst *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(dst, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

func (m *SessionRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *SessionRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type KeepAliveResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAliveResponse) Reset()         { *m = KeepAliveResponse{} }
func (m *KeepAliveResponse) String() string { return proto.CompactTextString(m) }
func (*KeepAliveResponse) ProtoMessage()    {}
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{5}
}
func (m *KeepAliveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveResponse.Unmarshal(m, b)
}
func (m *KeepAliveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveResponse.Marshal(b, m, deterministic)
}
func (dst *KeepAliveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveResponse.Merge(dst, src)
}
func (m *KeepAliveResponse) XXX_Size() int {
	return xxx_messageInfo_KeepAliveResponse.Size(m)
}
func (m *KeepAliveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveResponse proto.InternalMessageInfo

func (m *KeepAliveResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type IsSessionAvailableRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsSessionAvailableRequest) Reset()         { *m = IsSessionAvailableRequest{} }
func (m *IsSessionAvailableRequest) String() string { return proto.CompactTextString(m) }
func (*IsSessionAvailableRequest) ProtoMessage()    {}
func (*IsSessionAvailableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{6}
}
func (m *IsSessionAvailableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsSessionAvailableRequest.Unmarshal(m, b)
}
func (m *IsSessionAvailableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsSessionAvailableRequest.Marshal(b, m, deterministic)
}
func (dst *IsSessionAvailableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsSessionAvailableRequest.Merge(dst, src)
}
func (m *IsSessionAvailableRequest) XXX_Size() int {
	return xxx_messageInfo_IsSessionAvailableRequest.Size(m)
}
func (m *IsSessionAvailableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsSessionAvailableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsSessionAvailableRequest proto.InternalMessageInfo

func (m *IsSessionAvailableRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type IsSessionAvailableResponse struct {
	IsAvailable          bool                    `protobuf:"varint,1,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	UserSessionInfo      *UserSessionInformation `protobuf:"bytes,2,opt,name=user_session_info,json=userSessionInfo" json:"user_session_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *IsSessionAvailableResponse) Reset()         { *m = IsSessionAvailableResponse{} }
func (m *IsSessionAvailableResponse) String() string { return proto.CompactTextString(m) }
func (*IsSessionAvailableResponse) ProtoMessage()    {}
func (*IsSessionAvailableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{7}
}
func (m *IsSessionAvailableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsSessionAvailableResponse.Unmarshal(m, b)
}
func (m *IsSessionAvailableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsSessionAvailableResponse.Marshal(b, m, deterministic)
}
func (dst *IsSessionAvailableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsSessionAvailableResponse.Merge(dst, src)
}
func (m *IsSessionAvailableResponse) XXX_Size() int {
	return xxx_messageInfo_IsSessionAvailableResponse.Size(m)
}
func (m *IsSessionAvailableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsSessionAvailableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsSessionAvailableResponse proto.InternalMessageInfo

func (m *IsSessionAvailableResponse) GetIsAvailable() bool {
	if m != nil {
		return m.IsAvailable
	}
	return false
}

func (m *IsSessionAvailableResponse) GetUserSessionInfo() *UserSessionInformation {
	if m != nil {
		return m.UserSessionInfo
	}
	return nil
}

type CommonRequest struct {
	AccessPoint          string        `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32         `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Mode                 *Capabilities `protobuf:"bytes,3,opt,name=mode" json:"mode,omitempty"`
	Value                float64       `protobuf:"fixed64,4,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CommonRequest) Reset()         { *m = CommonRequest{} }
func (m *CommonRequest) String() string { return proto.CompactTextString(m) }
func (*CommonRequest) ProtoMessage()    {}
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{8}
}
func (m *CommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonRequest.Unmarshal(m, b)
}
func (m *CommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonRequest.Marshal(b, m, deterministic)
}
func (dst *CommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonRequest.Merge(dst, src)
}
func (m *CommonRequest) XXX_Size() int {
	return xxx_messageInfo_CommonRequest.Size(m)
}
func (m *CommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonRequest proto.InternalMessageInfo

func (m *CommonRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *CommonRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *CommonRequest) GetMode() *Capabilities {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *CommonRequest) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SessionID struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32    `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionID) Reset()         { *m = SessionID{} }
func (m *SessionID) String() string { return proto.CompactTextString(m) }
func (*SessionID) ProtoMessage()    {}
func (*SessionID) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{9}
}
func (m *SessionID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionID.Unmarshal(m, b)
}
func (m *SessionID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionID.Marshal(b, m, deterministic)
}
func (dst *SessionID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionID.Merge(dst, src)
}
func (m *SessionID) XXX_Size() int {
	return xxx_messageInfo_SessionID.Size(m)
}
func (m *SessionID) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionID.DiscardUnknown(m)
}

var xxx_messageInfo_SessionID proto.InternalMessageInfo

func (m *SessionID) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *SessionID) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type AbsolutePosition struct {
	Pan                  int32    `protobuf:"varint,1,opt,name=pan" json:"pan,omitempty"`
	Tilt                 int32    `protobuf:"varint,2,opt,name=tilt" json:"tilt,omitempty"`
	Zoom                 int32    `protobuf:"varint,3,opt,name=zoom" json:"zoom,omitempty"`
	Mask                 int32    `protobuf:"varint,4,opt,name=mask" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AbsolutePosition) Reset()         { *m = AbsolutePosition{} }
func (m *AbsolutePosition) String() string { return proto.CompactTextString(m) }
func (*AbsolutePosition) ProtoMessage()    {}
func (*AbsolutePosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{10}
}
func (m *AbsolutePosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbsolutePosition.Unmarshal(m, b)
}
func (m *AbsolutePosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbsolutePosition.Marshal(b, m, deterministic)
}
func (dst *AbsolutePosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbsolutePosition.Merge(dst, src)
}
func (m *AbsolutePosition) XXX_Size() int {
	return xxx_messageInfo_AbsolutePosition.Size(m)
}
func (m *AbsolutePosition) XXX_DiscardUnknown() {
	xxx_messageInfo_AbsolutePosition.DiscardUnknown(m)
}

var xxx_messageInfo_AbsolutePosition proto.InternalMessageInfo

func (m *AbsolutePosition) GetPan() int32 {
	if m != nil {
		return m.Pan
	}
	return 0
}

func (m *AbsolutePosition) GetTilt() int32 {
	if m != nil {
		return m.Tilt
	}
	return 0
}

func (m *AbsolutePosition) GetZoom() int32 {
	if m != nil {
		return m.Zoom
	}
	return 0
}

func (m *AbsolutePosition) GetMask() int32 {
	if m != nil {
		return m.Mask
	}
	return 0
}

type AbsolutePositionNormalized struct {
	Pan                  float64  `protobuf:"fixed64,1,opt,name=pan" json:"pan,omitempty"`
	Tilt                 float64  `protobuf:"fixed64,2,opt,name=tilt" json:"tilt,omitempty"`
	Zoom                 float64  `protobuf:"fixed64,3,opt,name=zoom" json:"zoom,omitempty"`
	Mask                 int32    `protobuf:"varint,4,opt,name=mask" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AbsolutePositionNormalized) Reset()         { *m = AbsolutePositionNormalized{} }
func (m *AbsolutePositionNormalized) String() string { return proto.CompactTextString(m) }
func (*AbsolutePositionNormalized) ProtoMessage()    {}
func (*AbsolutePositionNormalized) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{11}
}
func (m *AbsolutePositionNormalized) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbsolutePositionNormalized.Unmarshal(m, b)
}
func (m *AbsolutePositionNormalized) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbsolutePositionNormalized.Marshal(b, m, deterministic)
}
func (dst *AbsolutePositionNormalized) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbsolutePositionNormalized.Merge(dst, src)
}
func (m *AbsolutePositionNormalized) XXX_Size() int {
	return xxx_messageInfo_AbsolutePositionNormalized.Size(m)
}
func (m *AbsolutePositionNormalized) XXX_DiscardUnknown() {
	xxx_messageInfo_AbsolutePositionNormalized.DiscardUnknown(m)
}

var xxx_messageInfo_AbsolutePositionNormalized proto.InternalMessageInfo

func (m *AbsolutePositionNormalized) GetPan() float64 {
	if m != nil {
		return m.Pan
	}
	return 0
}

func (m *AbsolutePositionNormalized) GetTilt() float64 {
	if m != nil {
		return m.Tilt
	}
	return 0
}

func (m *AbsolutePositionNormalized) GetZoom() float64 {
	if m != nil {
		return m.Zoom
	}
	return 0
}

func (m *AbsolutePositionNormalized) GetMask() int32 {
	if m != nil {
		return m.Mask
	}
	return 0
}

type AbsoluteMoveRequest struct {
	AccessPoint          string            `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32             `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	AbsolutePosition     *AbsolutePosition `protobuf:"bytes,3,opt,name=absolute_position,json=absolutePosition" json:"absolute_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AbsoluteMoveRequest) Reset()         { *m = AbsoluteMoveRequest{} }
func (m *AbsoluteMoveRequest) String() string { return proto.CompactTextString(m) }
func (*AbsoluteMoveRequest) ProtoMessage()    {}
func (*AbsoluteMoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{12}
}
func (m *AbsoluteMoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbsoluteMoveRequest.Unmarshal(m, b)
}
func (m *AbsoluteMoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbsoluteMoveRequest.Marshal(b, m, deterministic)
}
func (dst *AbsoluteMoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbsoluteMoveRequest.Merge(dst, src)
}
func (m *AbsoluteMoveRequest) XXX_Size() int {
	return xxx_messageInfo_AbsoluteMoveRequest.Size(m)
}
func (m *AbsoluteMoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AbsoluteMoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AbsoluteMoveRequest proto.InternalMessageInfo

func (m *AbsoluteMoveRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *AbsoluteMoveRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *AbsoluteMoveRequest) GetAbsolutePosition() *AbsolutePosition {
	if m != nil {
		return m.AbsolutePosition
	}
	return nil
}

type AbsoluteMoveNormalizedRequest struct {
	AccessPoint          string                      `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32                       `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	AbsolutePosition     *AbsolutePositionNormalized `protobuf:"bytes,3,opt,name=absolute_position,json=absolutePosition" json:"absolute_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AbsoluteMoveNormalizedRequest) Reset()         { *m = AbsoluteMoveNormalizedRequest{} }
func (m *AbsoluteMoveNormalizedRequest) String() string { return proto.CompactTextString(m) }
func (*AbsoluteMoveNormalizedRequest) ProtoMessage()    {}
func (*AbsoluteMoveNormalizedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{13}
}
func (m *AbsoluteMoveNormalizedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbsoluteMoveNormalizedRequest.Unmarshal(m, b)
}
func (m *AbsoluteMoveNormalizedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbsoluteMoveNormalizedRequest.Marshal(b, m, deterministic)
}
func (dst *AbsoluteMoveNormalizedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbsoluteMoveNormalizedRequest.Merge(dst, src)
}
func (m *AbsoluteMoveNormalizedRequest) XXX_Size() int {
	return xxx_messageInfo_AbsoluteMoveNormalizedRequest.Size(m)
}
func (m *AbsoluteMoveNormalizedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AbsoluteMoveNormalizedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AbsoluteMoveNormalizedRequest proto.InternalMessageInfo

func (m *AbsoluteMoveNormalizedRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *AbsoluteMoveNormalizedRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *AbsoluteMoveNormalizedRequest) GetAbsolutePosition() *AbsolutePositionNormalized {
	if m != nil {
		return m.AbsolutePosition
	}
	return nil
}

type GetPositionInformationRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPositionInformationRequest) Reset()         { *m = GetPositionInformationRequest{} }
func (m *GetPositionInformationRequest) String() string { return proto.CompactTextString(m) }
func (*GetPositionInformationRequest) ProtoMessage()    {}
func (*GetPositionInformationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{14}
}
func (m *GetPositionInformationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPositionInformationRequest.Unmarshal(m, b)
}
func (m *GetPositionInformationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPositionInformationRequest.Marshal(b, m, deterministic)
}
func (dst *GetPositionInformationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPositionInformationRequest.Merge(dst, src)
}
func (m *GetPositionInformationRequest) XXX_Size() int {
	return xxx_messageInfo_GetPositionInformationRequest.Size(m)
}
func (m *GetPositionInformationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPositionInformationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPositionInformationRequest proto.InternalMessageInfo

func (m *GetPositionInformationRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type GetPositionInformationResponse struct {
	AbsolutePosition     *AbsolutePosition `protobuf:"bytes,1,opt,name=absolute_position,json=absolutePosition" json:"absolute_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPositionInformationResponse) Reset()         { *m = GetPositionInformationResponse{} }
func (m *GetPositionInformationResponse) String() string { return proto.CompactTextString(m) }
func (*GetPositionInformationResponse) ProtoMessage()    {}
func (*GetPositionInformationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{15}
}
func (m *GetPositionInformationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPositionInformationResponse.Unmarshal(m, b)
}
func (m *GetPositionInformationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPositionInformationResponse.Marshal(b, m, deterministic)
}
func (dst *GetPositionInformationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPositionInformationResponse.Merge(dst, src)
}
func (m *GetPositionInformationResponse) XXX_Size() int {
	return xxx_messageInfo_GetPositionInformationResponse.Size(m)
}
func (m *GetPositionInformationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPositionInformationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPositionInformationResponse proto.InternalMessageInfo

func (m *GetPositionInformationResponse) GetAbsolutePosition() *AbsolutePosition {
	if m != nil {
		return m.AbsolutePosition
	}
	return nil
}

type GetPositionInformationNormalizedResponse struct {
	AbsolutePosition     *AbsolutePositionNormalized `protobuf:"bytes,1,opt,name=absolute_position,json=absolutePosition" json:"absolute_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetPositionInformationNormalizedResponse) Reset() {
	*m = GetPositionInformationNormalizedResponse{}
}
func (m *GetPositionInformationNormalizedResponse) String() string { return proto.CompactTextString(m) }
func (*GetPositionInformationNormalizedResponse) ProtoMessage()    {}
func (*GetPositionInformationNormalizedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{16}
}
func (m *GetPositionInformationNormalizedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPositionInformationNormalizedResponse.Unmarshal(m, b)
}
func (m *GetPositionInformationNormalizedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPositionInformationNormalizedResponse.Marshal(b, m, deterministic)
}
func (dst *GetPositionInformationNormalizedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPositionInformationNormalizedResponse.Merge(dst, src)
}
func (m *GetPositionInformationNormalizedResponse) XXX_Size() int {
	return xxx_messageInfo_GetPositionInformationNormalizedResponse.Size(m)
}
func (m *GetPositionInformationNormalizedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPositionInformationNormalizedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPositionInformationNormalizedResponse proto.InternalMessageInfo

func (m *GetPositionInformationNormalizedResponse) GetAbsolutePosition() *AbsolutePositionNormalized {
	if m != nil {
		return m.AbsolutePosition
	}
	return nil
}

type SetPresetRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32    `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Position             int32    `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
	Label                string   `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPresetRequest) Reset()         { *m = SetPresetRequest{} }
func (m *SetPresetRequest) String() string { return proto.CompactTextString(m) }
func (*SetPresetRequest) ProtoMessage()    {}
func (*SetPresetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{17}
}
func (m *SetPresetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPresetRequest.Unmarshal(m, b)
}
func (m *SetPresetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPresetRequest.Marshal(b, m, deterministic)
}
func (dst *SetPresetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPresetRequest.Merge(dst, src)
}
func (m *SetPresetRequest) XXX_Size() int {
	return xxx_messageInfo_SetPresetRequest.Size(m)
}
func (m *SetPresetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPresetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPresetRequest proto.InternalMessageInfo

func (m *SetPresetRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *SetPresetRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SetPresetRequest) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *SetPresetRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type PointMoveRequest struct {
	AccessPoint          string           `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32            `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Point                *primitive.Point `protobuf:"bytes,3,opt,name=point" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PointMoveRequest) Reset()         { *m = PointMoveRequest{} }
func (m *PointMoveRequest) String() string { return proto.CompactTextString(m) }
func (*PointMoveRequest) ProtoMessage()    {}
func (*PointMoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{18}
}
func (m *PointMoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointMoveRequest.Unmarshal(m, b)
}
func (m *PointMoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointMoveRequest.Marshal(b, m, deterministic)
}
func (dst *PointMoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointMoveRequest.Merge(dst, src)
}
func (m *PointMoveRequest) XXX_Size() int {
	return xxx_messageInfo_PointMoveRequest.Size(m)
}
func (m *PointMoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PointMoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PointMoveRequest proto.InternalMessageInfo

func (m *PointMoveRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *PointMoveRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *PointMoveRequest) GetPoint() *primitive.Point {
	if m != nil {
		return m.Point
	}
	return nil
}

type AreaZoomRequest struct {
	AccessPoint          string               `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32                `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Rectangle            *primitive.Rectangle `protobuf:"bytes,3,opt,name=rectangle" json:"rectangle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AreaZoomRequest) Reset()         { *m = AreaZoomRequest{} }
func (m *AreaZoomRequest) String() string { return proto.CompactTextString(m) }
func (*AreaZoomRequest) ProtoMessage()    {}
func (*AreaZoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{19}
}
func (m *AreaZoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaZoomRequest.Unmarshal(m, b)
}
func (m *AreaZoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaZoomRequest.Marshal(b, m, deterministic)
}
func (dst *AreaZoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaZoomRequest.Merge(dst, src)
}
func (m *AreaZoomRequest) XXX_Size() int {
	return xxx_messageInfo_AreaZoomRequest.Size(m)
}
func (m *AreaZoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaZoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AreaZoomRequest proto.InternalMessageInfo

func (m *AreaZoomRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *AreaZoomRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *AreaZoomRequest) GetRectangle() *primitive.Rectangle {
	if m != nil {
		return m.Rectangle
	}
	return nil
}

type PresetInfo struct {
	Label                string   `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Position             int32    `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PresetInfo) Reset()         { *m = PresetInfo{} }
func (m *PresetInfo) String() string { return proto.CompactTextString(m) }
func (*PresetInfo) ProtoMessage()    {}
func (*PresetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{20}
}
func (m *PresetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresetInfo.Unmarshal(m, b)
}
func (m *PresetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresetInfo.Marshal(b, m, deterministic)
}
func (dst *PresetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresetInfo.Merge(dst, src)
}
func (m *PresetInfo) XXX_Size() int {
	return xxx_messageInfo_PresetInfo.Size(m)
}
func (m *PresetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PresetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PresetInfo proto.InternalMessageInfo

func (m *PresetInfo) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *PresetInfo) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type PresetCollectionResponse struct {
	PresetInfo           []*PresetInfo `protobuf:"bytes,1,rep,name=preset_info,json=presetInfo" json:"preset_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PresetCollectionResponse) Reset()         { *m = PresetCollectionResponse{} }
func (m *PresetCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*PresetCollectionResponse) ProtoMessage()    {}
func (*PresetCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{21}
}
func (m *PresetCollectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresetCollectionResponse.Unmarshal(m, b)
}
func (m *PresetCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresetCollectionResponse.Marshal(b, m, deterministic)
}
func (dst *PresetCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresetCollectionResponse.Merge(dst, src)
}
func (m *PresetCollectionResponse) XXX_Size() int {
	return xxx_messageInfo_PresetCollectionResponse.Size(m)
}
func (m *PresetCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PresetCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PresetCollectionResponse proto.InternalMessageInfo

func (m *PresetCollectionResponse) GetPresetInfo() []*PresetInfo {
	if m != nil {
		return m.PresetInfo
	}
	return nil
}

type Preset struct {
	Label                string   `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	SavedOnDevice        bool     `protobuf:"varint,2,opt,name=saved_on_device,json=savedOnDevice" json:"saved_on_device,omitempty"`
	AbsolutePan          int32    `protobuf:"varint,3,opt,name=absolute_pan,json=absolutePan" json:"absolute_pan,omitempty"`
	AbsoluteTilt         int32    `protobuf:"varint,4,opt,name=absolute_tilt,json=absoluteTilt" json:"absolute_tilt,omitempty"`
	AbsoluteZoom         int32    `protobuf:"varint,5,opt,name=absolute_zoom,json=absoluteZoom" json:"absolute_zoom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Preset) Reset()         { *m = Preset{} }
func (m *Preset) String() string { return proto.CompactTextString(m) }
func (*Preset) ProtoMessage()    {}
func (*Preset) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{22}
}
func (m *Preset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Preset.Unmarshal(m, b)
}
func (m *Preset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Preset.Marshal(b, m, deterministic)
}
func (dst *Preset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Preset.Merge(dst, src)
}
func (m *Preset) XXX_Size() int {
	return xxx_messageInfo_Preset.Size(m)
}
func (m *Preset) XXX_DiscardUnknown() {
	xxx_messageInfo_Preset.DiscardUnknown(m)
}

var xxx_messageInfo_Preset proto.InternalMessageInfo

func (m *Preset) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Preset) GetSavedOnDevice() bool {
	if m != nil {
		return m.SavedOnDevice
	}
	return false
}

func (m *Preset) GetAbsolutePan() int32 {
	if m != nil {
		return m.AbsolutePan
	}
	return 0
}

func (m *Preset) GetAbsoluteTilt() int32 {
	if m != nil {
		return m.AbsoluteTilt
	}
	return 0
}

func (m *Preset) GetAbsoluteZoom() int32 {
	if m != nil {
		return m.AbsoluteZoom
	}
	return 0
}

type GetPresetsInfoRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPresetsInfoRequest) Reset()         { *m = GetPresetsInfoRequest{} }
func (m *GetPresetsInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetPresetsInfoRequest) ProtoMessage()    {}
func (*GetPresetsInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{23}
}
func (m *GetPresetsInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPresetsInfoRequest.Unmarshal(m, b)
}
func (m *GetPresetsInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPresetsInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetPresetsInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPresetsInfoRequest.Merge(dst, src)
}
func (m *GetPresetsInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetPresetsInfoRequest.Size(m)
}
func (m *GetPresetsInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPresetsInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPresetsInfoRequest proto.InternalMessageInfo

func (m *GetPresetsInfoRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type ConfigurePresetRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Position             int32    `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	Preset               *Preset  `protobuf:"bytes,3,opt,name=preset" json:"preset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigurePresetRequest) Reset()         { *m = ConfigurePresetRequest{} }
func (m *ConfigurePresetRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigurePresetRequest) ProtoMessage()    {}
func (*ConfigurePresetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{24}
}
func (m *ConfigurePresetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigurePresetRequest.Unmarshal(m, b)
}
func (m *ConfigurePresetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigurePresetRequest.Marshal(b, m, deterministic)
}
func (dst *ConfigurePresetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigurePresetRequest.Merge(dst, src)
}
func (m *ConfigurePresetRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigurePresetRequest.Size(m)
}
func (m *ConfigurePresetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigurePresetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigurePresetRequest proto.InternalMessageInfo

func (m *ConfigurePresetRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *ConfigurePresetRequest) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *ConfigurePresetRequest) GetPreset() *Preset {
	if m != nil {
		return m.Preset
	}
	return nil
}

type GoPresetRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32    `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Position             int32    `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
	Speed                float64  `protobuf:"fixed64,4,opt,name=speed" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoPresetRequest) Reset()         { *m = GoPresetRequest{} }
func (m *GoPresetRequest) String() string { return proto.CompactTextString(m) }
func (*GoPresetRequest) ProtoMessage()    {}
func (*GoPresetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{25}
}
func (m *GoPresetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoPresetRequest.Unmarshal(m, b)
}
func (m *GoPresetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoPresetRequest.Marshal(b, m, deterministic)
}
func (dst *GoPresetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoPresetRequest.Merge(dst, src)
}
func (m *GoPresetRequest) XXX_Size() int {
	return xxx_messageInfo_GoPresetRequest.Size(m)
}
func (m *GoPresetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GoPresetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GoPresetRequest proto.InternalMessageInfo

func (m *GoPresetRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *GoPresetRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *GoPresetRequest) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *GoPresetRequest) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type RemovePresetRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32    `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Position             int32    `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePresetRequest) Reset()         { *m = RemovePresetRequest{} }
func (m *RemovePresetRequest) String() string { return proto.CompactTextString(m) }
func (*RemovePresetRequest) ProtoMessage()    {}
func (*RemovePresetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{26}
}
func (m *RemovePresetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePresetRequest.Unmarshal(m, b)
}
func (m *RemovePresetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePresetRequest.Marshal(b, m, deterministic)
}
func (dst *RemovePresetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePresetRequest.Merge(dst, src)
}
func (m *RemovePresetRequest) XXX_Size() int {
	return xxx_messageInfo_RemovePresetRequest.Size(m)
}
func (m *RemovePresetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePresetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePresetRequest proto.InternalMessageInfo

func (m *RemovePresetRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *RemovePresetRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RemovePresetRequest) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type GetAuxiliaryOperationsRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuxiliaryOperationsRequest) Reset()         { *m = GetAuxiliaryOperationsRequest{} }
func (m *GetAuxiliaryOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuxiliaryOperationsRequest) ProtoMessage()    {}
func (*GetAuxiliaryOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{27}
}
func (m *GetAuxiliaryOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuxiliaryOperationsRequest.Unmarshal(m, b)
}
func (m *GetAuxiliaryOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuxiliaryOperationsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAuxiliaryOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuxiliaryOperationsRequest.Merge(dst, src)
}
func (m *GetAuxiliaryOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuxiliaryOperationsRequest.Size(m)
}
func (m *GetAuxiliaryOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuxiliaryOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuxiliaryOperationsRequest proto.InternalMessageInfo

func (m *GetAuxiliaryOperationsRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type GetAuxiliaryOperationsResponse struct {
	Operations           []string `protobuf:"bytes,1,rep,name=operations" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuxiliaryOperationsResponse) Reset()         { *m = GetAuxiliaryOperationsResponse{} }
func (m *GetAuxiliaryOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuxiliaryOperationsResponse) ProtoMessage()    {}
func (*GetAuxiliaryOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{28}
}
func (m *GetAuxiliaryOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuxiliaryOperationsResponse.Unmarshal(m, b)
}
func (m *GetAuxiliaryOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuxiliaryOperationsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAuxiliaryOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuxiliaryOperationsResponse.Merge(dst, src)
}
func (m *GetAuxiliaryOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuxiliaryOperationsResponse.Size(m)
}
func (m *GetAuxiliaryOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuxiliaryOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuxiliaryOperationsResponse proto.InternalMessageInfo

func (m *GetAuxiliaryOperationsResponse) GetOperations() []string {
	if m != nil {
		return m.Operations
	}
	return nil
}

type PerformAuxiliaryOperationRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	SessionId            int32    `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Operation            string   `protobuf:"bytes,3,opt,name=operation" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformAuxiliaryOperationRequest) Reset()         { *m = PerformAuxiliaryOperationRequest{} }
func (m *PerformAuxiliaryOperationRequest) String() string { return proto.CompactTextString(m) }
func (*PerformAuxiliaryOperationRequest) ProtoMessage()    {}
func (*PerformAuxiliaryOperationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{29}
}
func (m *PerformAuxiliaryOperationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformAuxiliaryOperationRequest.Unmarshal(m, b)
}
func (m *PerformAuxiliaryOperationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformAuxiliaryOperationRequest.Marshal(b, m, deterministic)
}
func (dst *PerformAuxiliaryOperationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformAuxiliaryOperationRequest.Merge(dst, src)
}
func (m *PerformAuxiliaryOperationRequest) XXX_Size() int {
	return xxx_messageInfo_PerformAuxiliaryOperationRequest.Size(m)
}
func (m *PerformAuxiliaryOperationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformAuxiliaryOperationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PerformAuxiliaryOperationRequest proto.InternalMessageInfo

func (m *PerformAuxiliaryOperationRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *PerformAuxiliaryOperationRequest) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *PerformAuxiliaryOperationRequest) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

type PerformAuxiliaryOperationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformAuxiliaryOperationResponse) Reset()         { *m = PerformAuxiliaryOperationResponse{} }
func (m *PerformAuxiliaryOperationResponse) String() string { return proto.CompactTextString(m) }
func (*PerformAuxiliaryOperationResponse) ProtoMessage()    {}
func (*PerformAuxiliaryOperationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Telemetry_192ed945dbff1567, []int{30}
}
func (m *PerformAuxiliaryOperationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformAuxiliaryOperationResponse.Unmarshal(m, b)
}
func (m *PerformAuxiliaryOperationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformAuxiliaryOperationResponse.Marshal(b, m, deterministic)
}
func (dst *PerformAuxiliaryOperationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformAuxiliaryOperationResponse.Merge(dst, src)
}
func (m *PerformAuxiliaryOperationResponse) XXX_Size() int {
	return xxx_messageInfo_PerformAuxiliaryOperationResponse.Size(m)
}
func (m *PerformAuxiliaryOperationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformAuxiliaryOperationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PerformAuxiliaryOperationResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MoveRequest)(nil), "axxonsoft.bl.ptz.MoveRequest")
	proto.RegisterType((*UserSessionInformation)(nil), "axxonsoft.bl.ptz.UserSessionInformation")
	proto.RegisterType((*AcquireSessionRequest)(nil), "axxonsoft.bl.ptz.AcquireSessionRequest")
	proto.RegisterType((*AcquireSessionResponse)(nil), "axxonsoft.bl.ptz.AcquireSessionResponse")
	proto.RegisterType((*SessionRequest)(nil), "axxonsoft.bl.ptz.SessionRequest")
	proto.RegisterType((*KeepAliveResponse)(nil), "axxonsoft.bl.ptz.KeepAliveResponse")
	proto.RegisterType((*IsSessionAvailableRequest)(nil), "axxonsoft.bl.ptz.IsSessionAvailableRequest")
	proto.RegisterType((*IsSessionAvailableResponse)(nil), "axxonsoft.bl.ptz.IsSessionAvailableResponse")
	proto.RegisterType((*CommonRequest)(nil), "axxonsoft.bl.ptz.CommonRequest")
	proto.RegisterType((*SessionID)(nil), "axxonsoft.bl.ptz.SessionID")
	proto.RegisterType((*AbsolutePosition)(nil), "axxonsoft.bl.ptz.AbsolutePosition")
	proto.RegisterType((*AbsolutePositionNormalized)(nil), "axxonsoft.bl.ptz.AbsolutePositionNormalized")
	proto.RegisterType((*AbsoluteMoveRequest)(nil), "axxonsoft.bl.ptz.AbsoluteMoveRequest")
	proto.RegisterType((*AbsoluteMoveNormalizedRequest)(nil), "axxonsoft.bl.ptz.AbsoluteMoveNormalizedRequest")
	proto.RegisterType((*GetPositionInformationRequest)(nil), "axxonsoft.bl.ptz.GetPositionInformationRequest")
	proto.RegisterType((*GetPositionInformationResponse)(nil), "axxonsoft.bl.ptz.GetPositionInformationResponse")
	proto.RegisterType((*GetPositionInformationNormalizedResponse)(nil), "axxonsoft.bl.ptz.GetPositionInformationNormalizedResponse")
	proto.RegisterType((*SetPresetRequest)(nil), "axxonsoft.bl.ptz.SetPresetRequest")
	proto.RegisterType((*PointMoveRequest)(nil), "axxonsoft.bl.ptz.PointMoveRequest")
	proto.RegisterType((*AreaZoomRequest)(nil), "axxonsoft.bl.ptz.AreaZoomRequest")
	proto.RegisterType((*PresetInfo)(nil), "axxonsoft.bl.ptz.PresetInfo")
	proto.RegisterType((*PresetCollectionResponse)(nil), "axxonsoft.bl.ptz.PresetCollectionResponse")
	proto.RegisterType((*Preset)(nil), "axxonsoft.bl.ptz.Preset")
	proto.RegisterType((*GetPresetsInfoRequest)(nil), "axxonsoft.bl.ptz.GetPresetsInfoRequest")
	proto.RegisterType((*ConfigurePresetRequest)(nil), "axxonsoft.bl.ptz.ConfigurePresetRequest")
	proto.RegisterType((*GoPresetRequest)(nil), "axxonsoft.bl.ptz.GoPresetRequest")
	proto.RegisterType((*RemovePresetRequest)(nil), "axxonsoft.bl.ptz.RemovePresetRequest")
	proto.RegisterType((*GetAuxiliaryOperationsRequest)(nil), "axxonsoft.bl.ptz.GetAuxiliaryOperationsRequest")
	proto.RegisterType((*GetAuxiliaryOperationsResponse)(nil), "axxonsoft.bl.ptz.GetAuxiliaryOperationsResponse")
	proto.RegisterType((*PerformAuxiliaryOperationRequest)(nil), "axxonsoft.bl.ptz.PerformAuxiliaryOperationRequest")
	proto.RegisterType((*PerformAuxiliaryOperationResponse)(nil), "axxonsoft.bl.ptz.PerformAuxiliaryOperationResponse")
	proto.RegisterEnum("axxonsoft.bl.ptz.AcquireSessionResponse_EErrorCode", AcquireSessionResponse_EErrorCode_name, AcquireSessionResponse_EErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TelemetryService service

type TelemetryServiceClient interface {
	AcquireSessionId(ctx context.Context, in *AcquireSessionRequest, opts ...grpc.CallOption) (*AcquireSessionResponse, error)
	KeepAlive(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
	// TODO: rename methods and structs
	ReleaseSessionId(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IsSessionAvailable(ctx context.Context, in *IsSessionAvailableRequest, opts ...grpc.CallOption) (*IsSessionAvailableResponse, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Zoom(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Focus(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	FocusAuto(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*empty.Empty, error)
	Iris(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IrisAuto(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*empty.Empty, error)
	AbsoluteMove(ctx context.Context, in *AbsoluteMoveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	AbsoluteMoveNormalized(ctx context.Context, in *AbsoluteMoveNormalizedRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetPositionInformation(ctx context.Context, in *GetPositionInformationRequest, opts ...grpc.CallOption) (*GetPositionInformationResponse, error)
	GetPositionInformationNormalized(ctx context.Context, in *GetPositionInformationRequest, opts ...grpc.CallOption) (*GetPositionInformationNormalizedResponse, error)
	SetPreset(ctx context.Context, in *SetPresetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ConfigurePreset(ctx context.Context, in *ConfigurePresetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GoPreset(ctx context.Context, in *GoPresetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RemovePreset(ctx context.Context, in *RemovePresetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	PointMove(ctx context.Context, in *PointMoveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	AreaZoom(ctx context.Context, in *AreaZoomRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetPresetsInfo(ctx context.Context, in *GetPresetsInfoRequest, opts ...grpc.CallOption) (*PresetCollectionResponse, error)
	GetAuxiliaryOperations(ctx context.Context, in *GetAuxiliaryOperationsRequest, opts ...grpc.CallOption) (*GetAuxiliaryOperationsResponse, error)
	PerformAuxiliaryOperation(ctx context.Context, in *PerformAuxiliaryOperationRequest, opts ...grpc.CallOption) (*PerformAuxiliaryOperationResponse, error)
}

type telemetryServiceClient struct {
	cc *grpc.ClientConn
}

func NewTelemetryServiceClient(cc *grpc.ClientConn) TelemetryServiceClient {
	return &telemetryServiceClient{cc}
}

func (c *telemetryServiceClient) AcquireSessionId(ctx context.Context, in *AcquireSessionRequest, opts ...grpc.CallOption) (*AcquireSessionResponse, error) {
	out := new(AcquireSessionResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/AcquireSessionId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) KeepAlive(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/KeepAlive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) ReleaseSessionId(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/ReleaseSessionId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) IsSessionAvailable(ctx context.Context, in *IsSessionAvailableRequest, opts ...grpc.CallOption) (*IsSessionAvailableResponse, error) {
	out := new(IsSessionAvailableResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/IsSessionAvailable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/Move", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) Zoom(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/Zoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) Focus(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/Focus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) FocusAuto(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/FocusAuto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) Iris(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/Iris", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) IrisAuto(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/IrisAuto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) AbsoluteMove(ctx context.Context, in *AbsoluteMoveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/AbsoluteMove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) AbsoluteMoveNormalized(ctx context.Context, in *AbsoluteMoveNormalizedRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/AbsoluteMoveNormalized", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) GetPositionInformation(ctx context.Context, in *GetPositionInformationRequest, opts ...grpc.CallOption) (*GetPositionInformationResponse, error) {
	out := new(GetPositionInformationResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/GetPositionInformation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) GetPositionInformationNormalized(ctx context.Context, in *GetPositionInformationRequest, opts ...grpc.CallOption) (*GetPositionInformationNormalizedResponse, error) {
	out := new(GetPositionInformationNormalizedResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/GetPositionInformationNormalized", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) SetPreset(ctx context.Context, in *SetPresetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/SetPreset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) ConfigurePreset(ctx context.Context, in *ConfigurePresetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/ConfigurePreset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) GoPreset(ctx context.Context, in *GoPresetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/GoPreset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) RemovePreset(ctx context.Context, in *RemovePresetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/RemovePreset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) PointMove(ctx context.Context, in *PointMoveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/PointMove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) AreaZoom(ctx context.Context, in *AreaZoomRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/AreaZoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) GetPresetsInfo(ctx context.Context, in *GetPresetsInfoRequest, opts ...grpc.CallOption) (*PresetCollectionResponse, error) {
	out := new(PresetCollectionResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/GetPresetsInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) GetAuxiliaryOperations(ctx context.Context, in *GetAuxiliaryOperationsRequest, opts ...grpc.CallOption) (*GetAuxiliaryOperationsResponse, error) {
	out := new(GetAuxiliaryOperationsResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/GetAuxiliaryOperations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryServiceClient) PerformAuxiliaryOperation(ctx context.Context, in *PerformAuxiliaryOperationRequest, opts ...grpc.CallOption) (*PerformAuxiliaryOperationResponse, error) {
	out := new(PerformAuxiliaryOperationResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.ptz.TelemetryService/PerformAuxiliaryOperation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TelemetryService service

type TelemetryServiceServer interface {
	AcquireSessionId(context.Context, *AcquireSessionRequest) (*AcquireSessionResponse, error)
	KeepAlive(context.Context, *SessionRequest) (*KeepAliveResponse, error)
	// TODO: rename methods and structs
	ReleaseSessionId(context.Context, *SessionRequest) (*empty.Empty, error)
	IsSessionAvailable(context.Context, *IsSessionAvailableRequest) (*IsSessionAvailableResponse, error)
	Move(context.Context, *MoveRequest) (*empty.Empty, error)
	Zoom(context.Context, *CommonRequest) (*empty.Empty, error)
	Focus(context.Context, *CommonRequest) (*empty.Empty, error)
	FocusAuto(context.Context, *SessionID) (*empty.Empty, error)
	Iris(context.Context, *CommonRequest) (*empty.Empty, error)
	IrisAuto(context.Context, *SessionID) (*empty.Empty, error)
	AbsoluteMove(context.Context, *AbsoluteMoveRequest) (*empty.Empty, error)
	AbsoluteMoveNormalized(context.Context, *AbsoluteMoveNormalizedRequest) (*empty.Empty, error)
	GetPositionInformation(context.Context, *GetPositionInformationRequest) (*GetPositionInformationResponse, error)
	GetPositionInformationNormalized(context.Context, *GetPositionInformationRequest) (*GetPositionInformationNormalizedResponse, error)
	SetPreset(context.Context, *SetPresetRequest) (*empty.Empty, error)
	ConfigurePreset(context.Context, *ConfigurePresetRequest) (*empty.Empty, error)
	GoPreset(context.Context, *GoPresetRequest) (*empty.Empty, error)
	RemovePreset(context.Context, *RemovePresetRequest) (*empty.Empty, error)
	PointMove(context.Context, *PointMoveRequest) (*empty.Empty, error)
	AreaZoom(context.Context, *AreaZoomRequest) (*empty.Empty, error)
	GetPresetsInfo(context.Context, *GetPresetsInfoRequest) (*PresetCollectionResponse, error)
	GetAuxiliaryOperations(context.Context, *GetAuxiliaryOperationsRequest) (*GetAuxiliaryOperationsResponse, error)
	PerformAuxiliaryOperation(context.Context, *PerformAuxiliaryOperationRequest) (*PerformAuxiliaryOperationResponse, error)
}

func RegisterTelemetryServiceServer(s *grpc.Server, srv TelemetryServiceServer) {
	s.RegisterService(&_TelemetryService_serviceDesc, srv)
}

func _TelemetryService_AcquireSessionId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).AcquireSessionId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/AcquireSessionId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).AcquireSessionId(ctx, req.(*AcquireSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).KeepAlive(ctx, req.(*SessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_ReleaseSessionId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).ReleaseSessionId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/ReleaseSessionId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).ReleaseSessionId(ctx, req.(*SessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_IsSessionAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsSessionAvailableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).IsSessionAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/IsSessionAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).IsSessionAvailable(ctx, req.(*IsSessionAvailableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_Zoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).Zoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/Zoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).Zoom(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_Focus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).Focus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/Focus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).Focus(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_FocusAuto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).FocusAuto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/FocusAuto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).FocusAuto(ctx, req.(*SessionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_Iris_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).Iris(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/Iris",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).Iris(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_IrisAuto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).IrisAuto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/IrisAuto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).IrisAuto(ctx, req.(*SessionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_AbsoluteMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbsoluteMoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).AbsoluteMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/AbsoluteMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).AbsoluteMove(ctx, req.(*AbsoluteMoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_AbsoluteMoveNormalized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbsoluteMoveNormalizedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).AbsoluteMoveNormalized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/AbsoluteMoveNormalized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).AbsoluteMoveNormalized(ctx, req.(*AbsoluteMoveNormalizedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_GetPositionInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPositionInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).GetPositionInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/GetPositionInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).GetPositionInformation(ctx, req.(*GetPositionInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_GetPositionInformationNormalized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPositionInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).GetPositionInformationNormalized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/GetPositionInformationNormalized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).GetPositionInformationNormalized(ctx, req.(*GetPositionInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_SetPreset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPresetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).SetPreset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/SetPreset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).SetPreset(ctx, req.(*SetPresetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_ConfigurePreset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigurePresetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).ConfigurePreset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/ConfigurePreset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).ConfigurePreset(ctx, req.(*ConfigurePresetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_GoPreset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoPresetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).GoPreset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/GoPreset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).GoPreset(ctx, req.(*GoPresetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_RemovePreset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePresetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).RemovePreset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/RemovePreset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).RemovePreset(ctx, req.(*RemovePresetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_PointMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PointMoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).PointMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/PointMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).PointMove(ctx, req.(*PointMoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_AreaZoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaZoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).AreaZoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/AreaZoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).AreaZoom(ctx, req.(*AreaZoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_GetPresetsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPresetsInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).GetPresetsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/GetPresetsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).GetPresetsInfo(ctx, req.(*GetPresetsInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_GetAuxiliaryOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuxiliaryOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).GetAuxiliaryOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/GetAuxiliaryOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).GetAuxiliaryOperations(ctx, req.(*GetAuxiliaryOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryService_PerformAuxiliaryOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformAuxiliaryOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryServiceServer).PerformAuxiliaryOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.ptz.TelemetryService/PerformAuxiliaryOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryServiceServer).PerformAuxiliaryOperation(ctx, req.(*PerformAuxiliaryOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TelemetryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.ptz.TelemetryService",
	HandlerType: (*TelemetryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcquireSessionId",
			Handler:    _TelemetryService_AcquireSessionId_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _TelemetryService_KeepAlive_Handler,
		},
		{
			MethodName: "ReleaseSessionId",
			Handler:    _TelemetryService_ReleaseSessionId_Handler,
		},
		{
			MethodName: "IsSessionAvailable",
			Handler:    _TelemetryService_IsSessionAvailable_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _TelemetryService_Move_Handler,
		},
		{
			MethodName: "Zoom",
			Handler:    _TelemetryService_Zoom_Handler,
		},
		{
			MethodName: "Focus",
			Handler:    _TelemetryService_Focus_Handler,
		},
		{
			MethodName: "FocusAuto",
			Handler:    _TelemetryService_FocusAuto_Handler,
		},
		{
			MethodName: "Iris",
			Handler:    _TelemetryService_Iris_Handler,
		},
		{
			MethodName: "IrisAuto",
			Handler:    _TelemetryService_IrisAuto_Handler,
		},
		{
			MethodName: "AbsoluteMove",
			Handler:    _TelemetryService_AbsoluteMove_Handler,
		},
		{
			MethodName: "AbsoluteMoveNormalized",
			Handler:    _TelemetryService_AbsoluteMoveNormalized_Handler,
		},
		{
			MethodName: "GetPositionInformation",
			Handler:    _TelemetryService_GetPositionInformation_Handler,
		},
		{
			MethodName: "GetPositionInformationNormalized",
			Handler:    _TelemetryService_GetPositionInformationNormalized_Handler,
		},
		{
			MethodName: "SetPreset",
			Handler:    _TelemetryService_SetPreset_Handler,
		},
		{
			MethodName: "ConfigurePreset",
			Handler:    _TelemetryService_ConfigurePreset_Handler,
		},
		{
			MethodName: "GoPreset",
			Handler:    _TelemetryService_GoPreset_Handler,
		},
		{
			MethodName: "RemovePreset",
			Handler:    _TelemetryService_RemovePreset_Handler,
		},
		{
			MethodName: "PointMove",
			Handler:    _TelemetryService_PointMove_Handler,
		},
		{
			MethodName: "AreaZoom",
			Handler:    _TelemetryService_AreaZoom_Handler,
		},
		{
			MethodName: "GetPresetsInfo",
			Handler:    _TelemetryService_GetPresetsInfo_Handler,
		},
		{
			MethodName: "GetAuxiliaryOperations",
			Handler:    _TelemetryService_GetAuxiliaryOperations_Handler,
		},
		{
			MethodName: "PerformAuxiliaryOperation",
			Handler:    _TelemetryService_PerformAuxiliaryOperation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/ptz/Telemetry.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/ptz/Telemetry.proto", fileDescriptor_Telemetry_192ed945dbff1567)
}

var fileDescriptor_Telemetry_192ed945dbff1567 = []byte{
	// 1460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x4f, 0x73, 0x13, 0xc7,
	0x12, 0x7f, 0x63, 0x5b, 0x7e, 0x52, 0xcb, 0x60, 0x31, 0x3c, 0xf4, 0x84, 0xc0, 0x7e, 0xf2, 0x52,
	0x0f, 0x54, 0x81, 0x92, 0x28, 0xf9, 0x46, 0x55, 0x00, 0x61, 0x1c, 0xc7, 0x95, 0x18, 0x5c, 0x63,
	0xa8, 0x14, 0x5c, 0x94, 0x91, 0xd4, 0x76, 0x36, 0xac, 0x76, 0x96, 0x9d, 0x95, 0x0a, 0x9c, 0x1b,
	0x95, 0xa4, 0x8a, 0x53, 0x2e, 0xc9, 0x29, 0x5f, 0x20, 0xf7, 0x1c, 0x92, 0x43, 0x3e, 0x5c, 0x6a,
	0x67, 0x67, 0xd7, 0xfa, 0x33, 0x2b, 0xcb, 0x58, 0xe1, 0xb6, 0xd3, 0xd3, 0xd3, 0xff, 0xa7, 0xfb,
	0x37, 0x0b, 0x15, 0xfe, 0xe6, 0x8d, 0x70, 0xa5, 0x38, 0x0c, 0xea, 0x6d, 0xa7, 0xee, 0x05, 0xc7,
	0xf5, 0x67, 0xe8, 0x60, 0x0f, 0x03, 0xff, 0x6d, 0xcd, 0xf3, 0x45, 0x20, 0x68, 0x21, 0xe1, 0xa8,
	0xb5, 0x9d, 0x9a, 0x17, 0x1c, 0x97, 0xaf, 0x1f, 0x09, 0x71, 0xe4, 0x60, 0x9d, 0x7b, 0x76, 0x9d,
	0xbb, 0xae, 0x08, 0x78, 0x60, 0x0b, 0x57, 0x46, 0xfc, 0xe5, 0x6b, 0x7a, 0x57, 0xad, 0xda, 0xfd,
	0xc3, 0x3a, 0xf6, 0xbc, 0x40, 0x0b, 0x2b, 0xdf, 0x4c, 0x57, 0xf7, 0x39, 0x3a, 0x1e, 0xfa, 0x9a,
	0xef, 0xd6, 0x28, 0x9f, 0x6f, 0xf7, 0xec, 0xc0, 0x1e, 0x60, 0x7d, 0x3f, 0xfe, 0xd2, 0xda, 0xac,
	0x3f, 0x08, 0xe4, 0xf7, 0xc4, 0x00, 0x19, 0xbe, 0xee, 0xa3, 0x0c, 0xe8, 0x06, 0xac, 0xf0, 0x4e,
	0x07, 0xa5, 0x6c, 0x79, 0xc2, 0x76, 0x83, 0x12, 0xa9, 0x90, 0x6a, 0x8e, 0xe5, 0x23, 0xda, 0x7e,
	0x48, 0xa2, 0x6b, 0x00, 0x12, 0xa5, 0xb4, 0x85, 0xdb, 0xb2, 0xbb, 0xa5, 0x85, 0x0a, 0xa9, 0x66,
	0x58, 0x4e, 0x53, 0x76, 0xbb, 0xb4, 0x01, 0x4b, 0x3d, 0xd1, 0xc5, 0xd2, 0x62, 0x85, 0x54, 0xf3,
	0x8d, 0xf5, 0xda, 0xb8, 0xfb, 0xb5, 0x2d, 0xee, 0xf1, 0xb6, 0xed, 0xd8, 0x81, 0x8d, 0x92, 0x29,
	0x5e, 0xfa, 0x5f, 0xf8, 0xf7, 0x80, 0x3b, 0x2d, 0x8f, 0xbb, 0xa5, 0xa5, 0x0a, 0xa9, 0x12, 0xb6,
	0x3c, 0xe0, 0xce, 0x3e, 0x77, 0xe9, 0x55, 0xc8, 0x86, 0x1b, 0x81, 0xed, 0x04, 0xa5, 0x8c, 0xda,
	0x09, 0x19, 0x9f, 0xd9, 0x4e, 0x60, 0x31, 0x28, 0x3e, 0x97, 0xe8, 0x1f, 0x68, 0xc5, 0xee, 0xa1,
	0xf0, 0x7b, 0x2a, 0x90, 0xf4, 0x1a, 0xe4, 0xfa, 0x12, 0xfd, 0x96, 0xcb, 0x7b, 0xa8, 0x1d, 0xc8,
	0x86, 0x84, 0x27, 0xbc, 0x87, 0xe1, 0xe6, 0x37, 0x42, 0x06, 0xd1, 0xe6, 0x42, 0xb4, 0x19, 0x12,
	0xc2, 0x4d, 0xeb, 0x2b, 0xb8, 0xd2, 0xec, 0xbc, 0xee, 0xdb, 0x3e, 0x6a, 0xb1, 0x67, 0x08, 0xcb,
	0x54, 0xc1, 0x7f, 0x2e, 0x40, 0x71, 0x5c, 0xb2, 0xf4, 0x84, 0x2b, 0x71, 0x2c, 0x9c, 0x64, 0x3c,
	0x9c, 0xcf, 0xe0, 0x92, 0x72, 0x26, 0xe1, 0x71, 0x0f, 0x85, 0x12, 0x9f, 0x6f, 0x54, 0x27, 0x63,
	0x6b, 0x8e, 0x08, 0x5b, 0xed, 0x8f, 0xd2, 0x29, 0x03, 0x40, 0xdf, 0x17, 0x7e, 0xab, 0x13, 0xa7,
	0xea, 0x62, 0x63, 0x73, 0x52, 0x9c, 0xd9, 0xe4, 0xda, 0xf6, 0x76, 0x78, 0x76, 0x4b, 0x74, 0x91,
	0xe5, 0x30, 0xfe, 0xb4, 0x9e, 0x03, 0x9c, 0x6c, 0xd0, 0x15, 0xc8, 0x3e, 0x11, 0x81, 0x5a, 0x17,
	0xfe, 0x45, 0x8b, 0x40, 0xb5, 0x90, 0xe7, 0x2e, 0x1f, 0x70, 0xdb, 0xe1, 0x6d, 0x07, 0x0b, 0x84,
	0x16, 0x60, 0x65, 0x07, 0x5d, 0xf4, 0xb9, 0x13, 0x71, 0x2e, 0xd0, 0x55, 0xc8, 0xef, 0xfb, 0x28,
	0x51, 0x1f, 0x5d, 0xb4, 0x18, 0x5c, 0x3c, 0x7b, 0x32, 0xa6, 0xd7, 0xa8, 0x75, 0x1b, 0x2e, 0x7d,
	0x81, 0xe8, 0x35, 0x1d, 0x3b, 0xac, 0x7c, 0x9d, 0x88, 0x22, 0x2c, 0xfb, 0x28, 0xfb, 0x4e, 0x24,
	0x30, 0xcb, 0xf4, 0xca, 0xba, 0x0f, 0x57, 0x77, 0xa5, 0x36, 0xa1, 0x19, 0xdb, 0x3e, 0xbb, 0x2d,
	0xd6, 0x2f, 0x04, 0xca, 0x26, 0x01, 0x5a, 0xed, 0x06, 0xac, 0xd8, 0xb2, 0x95, 0x04, 0x45, 0x2b,
	0xcf, 0xdb, 0x32, 0x61, 0xfd, 0x67, 0x6a, 0xc0, 0xfa, 0x95, 0xc0, 0x85, 0x2d, 0xd1, 0xeb, 0xcd,
	0x31, 0xb0, 0x1f, 0x74, 0xf9, 0xff, 0x03, 0x99, 0x01, 0x77, 0xfa, 0xa8, 0xaf, 0x7e, 0xb4, 0xb0,
	0xf6, 0x20, 0x17, 0x1b, 0xfb, 0x78, 0x0e, 0x19, 0xff, 0x1a, 0x0a, 0xcd, 0xb6, 0x14, 0x4e, 0x3f,
	0xc0, 0x7d, 0x21, 0x6d, 0xd5, 0x27, 0x0a, 0xb0, 0x18, 0x76, 0x9c, 0xe8, 0xca, 0x85, 0x9f, 0x94,
	0xc2, 0x92, 0x6a, 0x35, 0xd1, 0x71, 0xf5, 0x1d, 0xd2, 0x8e, 0x85, 0xe8, 0x29, 0x97, 0x32, 0x4c,
	0x7d, 0x87, 0xb4, 0x1e, 0x97, 0xaf, 0x94, 0xc5, 0x19, 0xa6, 0xbe, 0xad, 0x6f, 0xa1, 0x3c, 0xae,
	0xe1, 0x49, 0x18, 0x7c, 0xc7, 0x3e, 0xc6, 0xee, 0xb0, 0x2e, 0x32, 0xa9, 0x8b, 0x18, 0x74, 0x91,
	0x29, 0xba, 0x7e, 0x23, 0x70, 0x39, 0x56, 0x36, 0xdf, 0xee, 0xfd, 0x14, 0x2e, 0x71, 0x2d, 0xb8,
	0xe5, 0x69, 0x37, 0x74, 0x36, 0x2d, 0x43, 0x7f, 0x18, 0x73, 0x98, 0x15, 0xf8, 0x18, 0xc5, 0xfa,
	0x8b, 0xc0, 0xda, 0xb0, 0xa9, 0x27, 0x31, 0x99, 0x9f, 0xd1, 0x2f, 0xd2, 0x8d, 0xbe, 0x73, 0xba,
	0xd1, 0x43, 0x16, 0x4d, 0x9a, 0xff, 0x08, 0xd6, 0x76, 0x30, 0x88, 0x97, 0xc3, 0xf7, 0x69, 0xf6,
	0x06, 0xf0, 0x1a, 0xd6, 0xd3, 0x64, 0xe8, 0x1e, 0x60, 0x8c, 0x3a, 0x39, 0x47, 0xd4, 0x7f, 0x20,
	0x50, 0x35, 0xeb, 0x1c, 0x8e, 0xbf, 0xd6, 0xfe, 0x22, 0x5d, 0xfb, 0x79, 0xc3, 0xf7, 0x23, 0x81,
	0xc2, 0x01, 0x06, 0x51, 0x47, 0x9f, 0x5f, 0xc2, 0xcb, 0x90, 0x1d, 0xc9, 0x73, 0x86, 0x25, 0xeb,
	0xb0, 0x9d, 0x38, 0xbc, 0x8d, 0x8e, 0xba, 0x30, 0x39, 0x16, 0x2d, 0xac, 0xf7, 0x04, 0x0a, 0x4a,
	0xf4, 0x7c, 0xaf, 0xcb, 0x26, 0x64, 0xa2, 0xa3, 0x51, 0xb5, 0xad, 0x8d, 0x85, 0x2b, 0x46, 0x5b,
	0x35, 0x25, 0x8c, 0x45, 0xbc, 0xd6, 0xcf, 0x04, 0x56, 0x9b, 0x3e, 0xf2, 0x97, 0x42, 0xf4, 0xe6,
	0x67, 0xca, 0x03, 0xc8, 0xf9, 0xd8, 0x09, 0xb8, 0x7b, 0xe4, 0xc4, 0xfd, 0x77, 0x23, 0xcd, 0x1c,
	0x16, 0x33, 0xb2, 0x93, 0x33, 0xd6, 0x7d, 0x80, 0x28, 0x4f, 0x0a, 0x21, 0x24, 0x61, 0x24, 0x43,
	0x61, 0x1c, 0x09, 0xfc, 0xc2, 0x68, 0xe0, 0xad, 0x17, 0x50, 0x8a, 0xce, 0x6f, 0x09, 0xc7, 0xc1,
	0xce, 0x48, 0x81, 0x7f, 0x0a, 0x79, 0x4f, 0xed, 0x45, 0xb3, 0x8b, 0x54, 0x16, 0xab, 0xf9, 0xc6,
	0xf5, 0xc9, 0xe2, 0x3a, 0x31, 0x80, 0x81, 0x97, 0x7c, 0x5b, 0xbf, 0x13, 0x58, 0x8e, 0xb6, 0x52,
	0xec, 0xba, 0x09, 0xab, 0x92, 0x0f, 0xb0, 0xdb, 0x12, 0x6e, 0xab, 0x8b, 0x03, 0xbb, 0x13, 0x41,
	0xb0, 0x2c, 0xbb, 0xa0, 0xc8, 0x4f, 0xdd, 0xc7, 0x8a, 0xa8, 0xc2, 0x9c, 0x94, 0x3a, 0x8f, 0x8b,
	0x27, 0x9f, 0xd4, 0x2d, 0x77, 0xe9, 0x0d, 0xb8, 0x90, 0xb0, 0xa8, 0x06, 0x1d, 0x35, 0xde, 0xe4,
	0x5c, 0x08, 0x3e, 0x47, 0x98, 0x54, 0xc7, 0xce, 0x8c, 0x32, 0x85, 0xa9, 0xb5, 0xee, 0xc1, 0x95,
	0x9d, 0xb8, 0xf6, 0xa5, 0xf2, 0x69, 0xf6, 0x9e, 0xf1, 0x9e, 0x40, 0x71, 0x4b, 0xb8, 0x87, 0xf6,
	0x51, 0xdf, 0xc7, 0x33, 0x5f, 0x9f, 0x29, 0x69, 0xa2, 0x77, 0x61, 0x39, 0x8a, 0xac, 0x2e, 0x92,
	0x52, 0x5a, 0x16, 0x98, 0xe6, 0x0b, 0x9b, 0xc9, 0xea, 0x8e, 0xf8, 0xc8, 0x77, 0x58, 0x7a, 0x88,
	0xdd, 0x18, 0x12, 0xa8, 0x85, 0x25, 0xe1, 0x32, 0xc3, 0x9e, 0x18, 0xe0, 0x47, 0x34, 0x45, 0x0f,
	0x80, 0x66, 0xff, 0x8d, 0xed, 0xd8, 0xdc, 0x7f, 0xfb, 0xd4, 0x43, 0x3f, 0x7a, 0xae, 0x9d, 0x21,
	0x99, 0x0f, 0xd5, 0x00, 0x30, 0xca, 0xd0, 0xf7, 0x63, 0x1d, 0x40, 0x24, 0x54, 0x75, 0x3d, 0x72,
	0x6c, 0x88, 0x62, 0xbd, 0x23, 0x50, 0xd9, 0x47, 0x3f, 0xec, 0xe2, 0x93, 0x62, 0xe6, 0x17, 0x88,
	0xeb, 0x90, 0x4b, 0x94, 0xaa, 0x48, 0xe4, 0xd8, 0x09, 0xc1, 0xba, 0x01, 0x1b, 0x53, 0x6c, 0x88,
	0x3c, 0x69, 0xbc, 0x2b, 0x40, 0x21, 0x79, 0x93, 0x1e, 0xa0, 0xaf, 0xae, 0x1d, 0x42, 0x61, 0xf4,
	0x29, 0xb1, 0xdb, 0xa5, 0xb7, 0x4e, 0x7f, 0x6e, 0x28, 0xb7, 0xca, 0xd5, 0x59, 0xdf, 0x25, 0x94,
	0x41, 0x2e, 0x81, 0xf5, 0xb4, 0x32, 0x79, 0x6c, 0x4c, 0xf0, 0x8d, 0x49, 0x8e, 0xc9, 0x57, 0xc1,
	0x97, 0x50, 0x60, 0xe8, 0x20, 0x97, 0x43, 0xa6, 0x9f, 0x2e, 0xba, 0x58, 0x8b, 0x5e, 0xf1, 0xb5,
	0xf8, 0x15, 0x5f, 0xdb, 0x0e, 0x5f, 0xf1, 0x54, 0x00, 0x9d, 0x7c, 0x0a, 0xd0, 0xdb, 0x93, 0xf2,
	0x52, 0x5f, 0x1c, 0xe5, 0x3b, 0xb3, 0x31, 0x27, 0x8d, 0x77, 0x29, 0x9c, 0x78, 0x74, 0x6d, 0xf2,
	0xd4, 0xd0, 0x24, 0x4c, 0xb5, 0xf7, 0x01, 0x2c, 0x85, 0xad, 0x8c, 0xfe, 0xcf, 0x80, 0xe4, 0x87,
	0x9f, 0x0e, 0xa9, 0x02, 0x1e, 0x42, 0xe6, 0x33, 0xd1, 0xe9, 0xcb, 0xf3, 0x48, 0xc8, 0x29, 0x09,
	0xcd, 0x7e, 0x20, 0xe8, 0xb5, 0xd4, 0xc8, 0xef, 0x3e, 0x9e, 0xe6, 0xc4, 0xae, 0x6f, 0x9f, 0xc3,
	0x84, 0x07, 0x90, 0x0d, 0x05, 0x7c, 0xb8, 0x05, 0x7b, 0xb0, 0x32, 0x8c, 0x81, 0xe9, 0xff, 0xd3,
	0x61, 0xd5, 0x2c, 0x59, 0xe1, 0x50, 0x34, 0x43, 0x6a, 0x5a, 0x9f, 0x2e, 0x78, 0x02, 0x7c, 0xa7,
	0xaa, 0xf8, 0x0e, 0x8a, 0x66, 0xfc, 0x68, 0x52, 0x31, 0x15, 0x21, 0x97, 0xef, 0xce, 0x7e, 0x40,
	0x17, 0xed, 0x4f, 0x04, 0x2a, 0xa7, 0xa1, 0xd7, 0xb3, 0xdb, 0x71, 0x6f, 0xd6, 0x03, 0x06, 0x88,
	0xbc, 0x13, 0xbe, 0x46, 0xf5, 0x28, 0xa7, 0x96, 0xa9, 0x04, 0x46, 0x31, 0x6e, 0x6a, 0x5c, 0x0f,
	0x60, 0x75, 0x6c, 0xac, 0xd3, 0xaa, 0xa9, 0x2c, 0x4d, 0x93, 0x3f, 0x55, 0xe8, 0x36, 0x64, 0xe3,
	0xf9, 0x4c, 0x37, 0x0c, 0x5e, 0x8a, 0xd9, 0xc4, 0xec, 0xc1, 0xca, 0xf0, 0x7c, 0x35, 0x55, 0xa9,
	0x61, 0xfe, 0xa6, 0x8a, 0xdb, 0x81, 0x5c, 0x82, 0xb8, 0x4d, 0x31, 0x1b, 0x87, 0xe3, 0xd3, 0xdc,
	0x8b, 0xe1, 0xb2, 0xc9, 0xbd, 0x31, 0x28, 0x9d, 0x2a, 0x06, 0xe1, 0xe2, 0x28, 0x1c, 0x33, 0x8d,
	0x20, 0x23, 0x60, 0x2b, 0x7f, 0x92, 0x86, 0x91, 0x0c, 0x50, 0x37, 0xba, 0x39, 0x86, 0x61, 0x9f,
	0x52, 0xb1, 0xe9, 0xd0, 0x22, 0xe5, 0xe6, 0x4c, 0xc3, 0x11, 0xdf, 0x13, 0xb8, 0x9a, 0x3a, 0xa3,
	0x69, 0xc3, 0xe0, 0xc6, 0x29, 0xa0, 0xa2, 0xbc, 0x79, 0xa6, 0x33, 0x91, 0x19, 0x8f, 0x2a, 0x2f,
	0xd7, 0xdb, 0x76, 0xd0, 0xee, 0x77, 0x5e, 0x61, 0x50, 0x13, 0xfe, 0x51, 0xbd, 0x39, 0xf6, 0xdb,
	0xba, 0xbd, 0xac, 0x92, 0xb3, 0xf9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xab, 0xd7, 0x8c,
	0x40, 0x17, 0x00, 0x00,
}
