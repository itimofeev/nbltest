// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/logic/LogicService.proto

package logic // import "bitbucket.org/Axxonsoft/bl/logic"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import config "bitbucket.org/Axxonsoft/bl/config"
import events "bitbucket.org/Axxonsoft/bl/events"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TimeZoneMacroCondition_ETimezonesBoundary int32

const (
	TimeZoneMacroCondition_TB_BEGINING TimeZoneMacroCondition_ETimezonesBoundary = 0
	TimeZoneMacroCondition_TB_ENDING   TimeZoneMacroCondition_ETimezonesBoundary = 1
)

var TimeZoneMacroCondition_ETimezonesBoundary_name = map[int32]string{
	0: "TB_BEGINING",
	1: "TB_ENDING",
}
var TimeZoneMacroCondition_ETimezonesBoundary_value = map[string]int32{
	"TB_BEGINING": 0,
	"TB_ENDING":   1,
}

func (x TimeZoneMacroCondition_ETimezonesBoundary) String() string {
	return proto.EnumName(TimeZoneMacroCondition_ETimezonesBoundary_name, int32(x))
}
func (TimeZoneMacroCondition_ETimezonesBoundary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{7, 0}
}

type AlertMacroCondition_EAlertCase int32

const (
	AlertMacroCondition_AC_ALERT_UNKNOWN    AlertMacroCondition_EAlertCase = 0
	AlertMacroCondition_AC_ALERT_RAISED     AlertMacroCondition_EAlertCase = 1
	AlertMacroCondition_AC_ALERT_TAKEN      AlertMacroCondition_EAlertCase = 2
	AlertMacroCondition_AC_ALERT_CLOSED     AlertMacroCondition_EAlertCase = 4
	AlertMacroCondition_AC_ALERT_MISSED     AlertMacroCondition_EAlertCase = 8
	AlertMacroCondition_AC_ALERT_HARMLESS   AlertMacroCondition_EAlertCase = 16
	AlertMacroCondition_AC_ALERT_SUSPICIOUS AlertMacroCondition_EAlertCase = 32
	AlertMacroCondition_AC_ALERT_DANGEROUS  AlertMacroCondition_EAlertCase = 64
)

var AlertMacroCondition_EAlertCase_name = map[int32]string{
	0:  "AC_ALERT_UNKNOWN",
	1:  "AC_ALERT_RAISED",
	2:  "AC_ALERT_TAKEN",
	4:  "AC_ALERT_CLOSED",
	8:  "AC_ALERT_MISSED",
	16: "AC_ALERT_HARMLESS",
	32: "AC_ALERT_SUSPICIOUS",
	64: "AC_ALERT_DANGEROUS",
}
var AlertMacroCondition_EAlertCase_value = map[string]int32{
	"AC_ALERT_UNKNOWN":    0,
	"AC_ALERT_RAISED":     1,
	"AC_ALERT_TAKEN":      2,
	"AC_ALERT_CLOSED":     4,
	"AC_ALERT_MISSED":     8,
	"AC_ALERT_HARMLESS":   16,
	"AC_ALERT_SUSPICIOUS": 32,
	"AC_ALERT_DANGEROUS":  64,
}

func (x AlertMacroCondition_EAlertCase) String() string {
	return proto.EnumName(AlertMacroCondition_EAlertCase_name, int32(x))
}
func (AlertMacroCondition_EAlertCase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{8, 0}
}

type ServerStateMacroCondition_ServerState int32

const (
	ServerStateMacroCondition_SS_OFFLINE ServerStateMacroCondition_ServerState = 0
	ServerStateMacroCondition_SS_ONLINE  ServerStateMacroCondition_ServerState = 1
)

var ServerStateMacroCondition_ServerState_name = map[int32]string{
	0: "SS_OFFLINE",
	1: "SS_ONLINE",
}
var ServerStateMacroCondition_ServerState_value = map[string]int32{
	"SS_OFFLINE": 0,
	"SS_ONLINE":  1,
}

func (x ServerStateMacroCondition_ServerState) String() string {
	return proto.EnumName(ServerStateMacroCondition_ServerState_name, int32(x))
}
func (ServerStateMacroCondition_ServerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{16, 0}
}

type RecognitionMacroCondition_DetectionType int32

const (
	RecognitionMacroCondition_DT_Face  RecognitionMacroCondition_DetectionType = 0
	RecognitionMacroCondition_DT_Plate RecognitionMacroCondition_DetectionType = 1
)

var RecognitionMacroCondition_DetectionType_name = map[int32]string{
	0: "DT_Face",
	1: "DT_Plate",
}
var RecognitionMacroCondition_DetectionType_value = map[string]int32{
	"DT_Face":  0,
	"DT_Plate": 1,
}

func (x RecognitionMacroCondition_DetectionType) String() string {
	return proto.EnumName(RecognitionMacroCondition_DetectionType_name, int32(x))
}
func (RecognitionMacroCondition_DetectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{18, 0}
}

type StatisticsCondition_Trend int32

const (
	StatisticsCondition_ET_NONE    StatisticsCondition_Trend = 0
	StatisticsCondition_ET_RISING  StatisticsCondition_Trend = 1
	StatisticsCondition_ET_FALLING StatisticsCondition_Trend = 2
	StatisticsCondition_ET_LEAVING StatisticsCondition_Trend = 3
)

var StatisticsCondition_Trend_name = map[int32]string{
	0: "ET_NONE",
	1: "ET_RISING",
	2: "ET_FALLING",
	3: "ET_LEAVING",
}
var StatisticsCondition_Trend_value = map[string]int32{
	"ET_NONE":    0,
	"ET_RISING":  1,
	"ET_FALLING": 2,
	"ET_LEAVING": 3,
}

func (x StatisticsCondition_Trend) String() string {
	return proto.EnumName(StatisticsCondition_Trend_name, int32(x))
}
func (StatisticsCondition_Trend) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{19, 0}
}

type RaiseAlertAction_RaiseAlertMode int32

const (
	RaiseAlertAction_RAM_Always                  RaiseAlertAction_RaiseAlertMode = 0
	RaiseAlertAction_RAM_AlwaysIfArmed           RaiseAlertAction_RaiseAlertMode = 1
	RaiseAlertAction_RAM_AlwaysIfNoActiveAlert   RaiseAlertAction_RaiseAlertMode = 2
	RaiseAlertAction_RAM_IfArmedAndNoActiveAlert RaiseAlertAction_RaiseAlertMode = 3
)

var RaiseAlertAction_RaiseAlertMode_name = map[int32]string{
	0: "RAM_Always",
	1: "RAM_AlwaysIfArmed",
	2: "RAM_AlwaysIfNoActiveAlert",
	3: "RAM_IfArmedAndNoActiveAlert",
}
var RaiseAlertAction_RaiseAlertMode_value = map[string]int32{
	"RAM_Always":                  0,
	"RAM_AlwaysIfArmed":           1,
	"RAM_AlwaysIfNoActiveAlert":   2,
	"RAM_IfArmedAndNoActiveAlert": 3,
}

func (x RaiseAlertAction_RaiseAlertMode) String() string {
	return proto.EnumName(RaiseAlertAction_RaiseAlertMode_name, int32(x))
}
func (RaiseAlertAction_RaiseAlertMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{22, 0}
}

type CloseAlertAction_Resolution int32

const (
	// numbers should be map to ORM::AlertSeverity
	CloseAlertAction_AR_None    CloseAlertAction_Resolution = 0
	CloseAlertAction_AR_False   CloseAlertAction_Resolution = 1
	CloseAlertAction_AR_Warning CloseAlertAction_Resolution = 3
	CloseAlertAction_AR_Alarm   CloseAlertAction_Resolution = 4
)

var CloseAlertAction_Resolution_name = map[int32]string{
	0: "AR_None",
	1: "AR_False",
	3: "AR_Warning",
	4: "AR_Alarm",
}
var CloseAlertAction_Resolution_value = map[string]int32{
	"AR_None":    0,
	"AR_False":   1,
	"AR_Warning": 3,
	"AR_Alarm":   4,
}

func (x CloseAlertAction_Resolution) String() string {
	return proto.EnumName(CloseAlertAction_Resolution_name, int32(x))
}
func (CloseAlertAction_Resolution) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{23, 0}
}

type SwitchRelayAction_SwitchDirective int32

const (
	SwitchRelayAction_SD_NEUTRAL SwitchRelayAction_SwitchDirective = 0
	SwitchRelayAction_SD_OFF     SwitchRelayAction_SwitchDirective = 1
	SwitchRelayAction_SD_ON      SwitchRelayAction_SwitchDirective = 2
)

var SwitchRelayAction_SwitchDirective_name = map[int32]string{
	0: "SD_NEUTRAL",
	1: "SD_OFF",
	2: "SD_ON",
}
var SwitchRelayAction_SwitchDirective_value = map[string]int32{
	"SD_NEUTRAL": 0,
	"SD_OFF":     1,
	"SD_ON":      2,
}

func (x SwitchRelayAction_SwitchDirective) String() string {
	return proto.EnumName(SwitchRelayAction_SwitchDirective_name, int32(x))
}
func (SwitchRelayAction_SwitchDirective) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{24, 0}
}

type WebQueryAction_EQueryMethod int32

const (
	WebQueryAction_QM_POST   WebQueryAction_EQueryMethod = 0
	WebQueryAction_QM_GET    WebQueryAction_EQueryMethod = 1
	WebQueryAction_QM_PUT    WebQueryAction_EQueryMethod = 2
	WebQueryAction_QM_DELETE WebQueryAction_EQueryMethod = 3
)

var WebQueryAction_EQueryMethod_name = map[int32]string{
	0: "QM_POST",
	1: "QM_GET",
	2: "QM_PUT",
	3: "QM_DELETE",
}
var WebQueryAction_EQueryMethod_value = map[string]int32{
	"QM_POST":   0,
	"QM_GET":    1,
	"QM_PUT":    2,
	"QM_DELETE": 3,
}

func (x WebQueryAction_EQueryMethod) String() string {
	return proto.EnumName(WebQueryAction_EQueryMethod_name, int32(x))
}
func (WebQueryAction_EQueryMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{31, 0}
}

type WebQueryAction_EQueryProto int32

const (
	WebQueryAction_QP_HTTP  WebQueryAction_EQueryProto = 0
	WebQueryAction_QP_HTTPS WebQueryAction_EQueryProto = 1
)

var WebQueryAction_EQueryProto_name = map[int32]string{
	0: "QP_HTTP",
	1: "QP_HTTPS",
}
var WebQueryAction_EQueryProto_value = map[string]int32{
	"QP_HTTP":  0,
	"QP_HTTPS": 1,
}

func (x WebQueryAction_EQueryProto) String() string {
	return proto.EnumName(WebQueryAction_EQueryProto_name, int32(x))
}
func (WebQueryAction_EQueryProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{31, 1}
}

type WebQueryAction_EAuthMethod int32

const (
	WebQueryAction_AM_BASIC  WebQueryAction_EAuthMethod = 0
	WebQueryAction_AM_DIGEST WebQueryAction_EAuthMethod = 1
)

var WebQueryAction_EAuthMethod_name = map[int32]string{
	0: "AM_BASIC",
	1: "AM_DIGEST",
}
var WebQueryAction_EAuthMethod_value = map[string]int32{
	"AM_BASIC":  0,
	"AM_DIGEST": 1,
}

func (x WebQueryAction_EAuthMethod) String() string {
	return proto.EnumName(WebQueryAction_EAuthMethod_name, int32(x))
}
func (WebQueryAction_EAuthMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{31, 2}
}

type MMExportAction_ExportMode int32

const (
	MMExportAction_EM_NONE               MMExportAction_ExportMode = 0
	MMExportAction_EM_TIMEZONE_FRAGMENT  MMExportAction_ExportMode = 1
	MMExportAction_EM_SPECIFIED_FRAGMENT MMExportAction_ExportMode = 2
	MMExportAction_EM_SNAPSHOT           MMExportAction_ExportMode = 3
	MMExportAction_EM_RUNTIME_FRAGMENT   MMExportAction_ExportMode = 4
)

var MMExportAction_ExportMode_name = map[int32]string{
	0: "EM_NONE",
	1: "EM_TIMEZONE_FRAGMENT",
	2: "EM_SPECIFIED_FRAGMENT",
	3: "EM_SNAPSHOT",
	4: "EM_RUNTIME_FRAGMENT",
}
var MMExportAction_ExportMode_value = map[string]int32{
	"EM_NONE":               0,
	"EM_TIMEZONE_FRAGMENT":  1,
	"EM_SPECIFIED_FRAGMENT": 2,
	"EM_SNAPSHOT":           3,
	"EM_RUNTIME_FRAGMENT":   4,
}

func (x MMExportAction_ExportMode) String() string {
	return proto.EnumName(MMExportAction_ExportMode_name, int32(x))
}
func (MMExportAction_ExportMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{33, 0}
}

type ReplicationAction_EMode int32

const (
	ReplicationAction_RM_TIMEZONE_FRAGMENT  ReplicationAction_EMode = 0
	ReplicationAction_RM_SPECIFIED_FRAGMENT ReplicationAction_EMode = 1
	ReplicationAction_RM_RUNTIME_FRAGMENT   ReplicationAction_EMode = 2
	ReplicationAction_RM_BLIND_REPLICATION  ReplicationAction_EMode = 3
	ReplicationAction_RM_VALUED_FRAGMENT    ReplicationAction_EMode = 4
)

var ReplicationAction_EMode_name = map[int32]string{
	0: "RM_TIMEZONE_FRAGMENT",
	1: "RM_SPECIFIED_FRAGMENT",
	2: "RM_RUNTIME_FRAGMENT",
	3: "RM_BLIND_REPLICATION",
	4: "RM_VALUED_FRAGMENT",
}
var ReplicationAction_EMode_value = map[string]int32{
	"RM_TIMEZONE_FRAGMENT":  0,
	"RM_SPECIFIED_FRAGMENT": 1,
	"RM_RUNTIME_FRAGMENT":   2,
	"RM_BLIND_REPLICATION":  3,
	"RM_VALUED_FRAGMENT":    4,
}

func (x ReplicationAction_EMode) String() string {
	return proto.EnumName(ReplicationAction_EMode_name, int32(x))
}
func (ReplicationAction_EMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{35, 0}
}

type RecordCheck_CheckType int32

const (
	RecordCheck_CT_CHECK_RECORD        RecordCheck_CheckType = 0
	RecordCheck_CT_CHECK_RECORD_SAFETY RecordCheck_CheckType = 1
)

var RecordCheck_CheckType_name = map[int32]string{
	0: "CT_CHECK_RECORD",
	1: "CT_CHECK_RECORD_SAFETY",
}
var RecordCheck_CheckType_value = map[string]int32{
	"CT_CHECK_RECORD":        0,
	"CT_CHECK_RECORD_SAFETY": 1,
}

func (x RecordCheck_CheckType) String() string {
	return proto.EnumName(RecordCheck_CheckType_name, int32(x))
}
func (RecordCheck_CheckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{41, 0}
}

type ListMacrosRequest_EViewMode int32

const (
	// Server response includes only basic Macros info,
	// with no conditions and rules.
	ListMacrosRequest_VIEW_MODE_STRIPPED ListMacrosRequest_EViewMode = 0
	// Full representation
	ListMacrosRequest_VIEW_MODE_FULL ListMacrosRequest_EViewMode = 1
)

var ListMacrosRequest_EViewMode_name = map[int32]string{
	0: "VIEW_MODE_STRIPPED",
	1: "VIEW_MODE_FULL",
}
var ListMacrosRequest_EViewMode_value = map[string]int32{
	"VIEW_MODE_STRIPPED": 0,
	"VIEW_MODE_FULL":     1,
}

func (x ListMacrosRequest_EViewMode) String() string {
	return proto.EnumName(ListMacrosRequest_EViewMode_name, int32(x))
}
func (ListMacrosRequest_EViewMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{49, 0}
}

type MacroModeCommon struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacroModeCommon) Reset()         { *m = MacroModeCommon{} }
func (m *MacroModeCommon) String() string { return proto.CompactTextString(m) }
func (*MacroModeCommon) ProtoMessage()    {}
func (*MacroModeCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{0}
}
func (m *MacroModeCommon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroModeCommon.Unmarshal(m, b)
}
func (m *MacroModeCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroModeCommon.Marshal(b, m, deterministic)
}
func (dst *MacroModeCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroModeCommon.Merge(dst, src)
}
func (m *MacroModeCommon) XXX_Size() int {
	return xxx_messageInfo_MacroModeCommon.Size(m)
}
func (m *MacroModeCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroModeCommon.DiscardUnknown(m)
}

var xxx_messageInfo_MacroModeCommon proto.InternalMessageInfo

type MacroModeTimeZone struct {
	// guid of timezone
	TimezoneId           string   `protobuf:"bytes,1,opt,name=timezone_id,json=timezoneId" json:"timezone_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacroModeTimeZone) Reset()         { *m = MacroModeTimeZone{} }
func (m *MacroModeTimeZone) String() string { return proto.CompactTextString(m) }
func (*MacroModeTimeZone) ProtoMessage()    {}
func (*MacroModeTimeZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{1}
}
func (m *MacroModeTimeZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroModeTimeZone.Unmarshal(m, b)
}
func (m *MacroModeTimeZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroModeTimeZone.Marshal(b, m, deterministic)
}
func (dst *MacroModeTimeZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroModeTimeZone.Merge(dst, src)
}
func (m *MacroModeTimeZone) XXX_Size() int {
	return xxx_messageInfo_MacroModeTimeZone.Size(m)
}
func (m *MacroModeTimeZone) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroModeTimeZone.DiscardUnknown(m)
}

var xxx_messageInfo_MacroModeTimeZone proto.InternalMessageInfo

func (m *MacroModeTimeZone) GetTimezoneId() string {
	if m != nil {
		return m.TimezoneId
	}
	return ""
}

type MacroModeAutorule struct {
	// guid of timezone
	ZoneAp               string   `protobuf:"bytes,1,opt,name=zone_ap,json=zoneAp" json:"zone_ap,omitempty"`
	OnlyIfArmed          bool     `protobuf:"varint,2,opt,name=only_if_armed,json=onlyIfArmed" json:"only_if_armed,omitempty"`
	TimezoneId           string   `protobuf:"bytes,3,opt,name=timezone_id,json=timezoneId" json:"timezone_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacroModeAutorule) Reset()         { *m = MacroModeAutorule{} }
func (m *MacroModeAutorule) String() string { return proto.CompactTextString(m) }
func (*MacroModeAutorule) ProtoMessage()    {}
func (*MacroModeAutorule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{2}
}
func (m *MacroModeAutorule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroModeAutorule.Unmarshal(m, b)
}
func (m *MacroModeAutorule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroModeAutorule.Marshal(b, m, deterministic)
}
func (dst *MacroModeAutorule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroModeAutorule.Merge(dst, src)
}
func (m *MacroModeAutorule) XXX_Size() int {
	return xxx_messageInfo_MacroModeAutorule.Size(m)
}
func (m *MacroModeAutorule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroModeAutorule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroModeAutorule proto.InternalMessageInfo

func (m *MacroModeAutorule) GetZoneAp() string {
	if m != nil {
		return m.ZoneAp
	}
	return ""
}

func (m *MacroModeAutorule) GetOnlyIfArmed() bool {
	if m != nil {
		return m.OnlyIfArmed
	}
	return false
}

func (m *MacroModeAutorule) GetTimezoneId() string {
	if m != nil {
		return m.TimezoneId
	}
	return ""
}

type MacroModeContinuous struct {
	// TODO: ????
	Server string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// guid of timezone
	TimezoneId string `protobuf:"bytes,2,opt,name=timezone_id,json=timezoneId" json:"timezone_id,omitempty"`
	// milliseconds
	HeartbeatMs int32 `protobuf:"varint,3,opt,name=heartbeat_ms,json=heartbeatMs" json:"heartbeat_ms,omitempty"`
	// randomized
	Random               bool     `protobuf:"varint,4,opt,name=random" json:"random,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacroModeContinuous) Reset()         { *m = MacroModeContinuous{} }
func (m *MacroModeContinuous) String() string { return proto.CompactTextString(m) }
func (*MacroModeContinuous) ProtoMessage()    {}
func (*MacroModeContinuous) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{3}
}
func (m *MacroModeContinuous) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroModeContinuous.Unmarshal(m, b)
}
func (m *MacroModeContinuous) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroModeContinuous.Marshal(b, m, deterministic)
}
func (dst *MacroModeContinuous) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroModeContinuous.Merge(dst, src)
}
func (m *MacroModeContinuous) XXX_Size() int {
	return xxx_messageInfo_MacroModeContinuous.Size(m)
}
func (m *MacroModeContinuous) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroModeContinuous.DiscardUnknown(m)
}

var xxx_messageInfo_MacroModeContinuous proto.InternalMessageInfo

func (m *MacroModeContinuous) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *MacroModeContinuous) GetTimezoneId() string {
	if m != nil {
		return m.TimezoneId
	}
	return ""
}

func (m *MacroModeContinuous) GetHeartbeatMs() int32 {
	if m != nil {
		return m.HeartbeatMs
	}
	return 0
}

func (m *MacroModeContinuous) GetRandom() bool {
	if m != nil {
		return m.Random
	}
	return false
}

type MacroMode struct {
	Enabled     bool   `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	UserRole    string `protobuf:"bytes,2,opt,name=user_role,json=userRole" json:"user_role,omitempty"`
	IsAddToMenu bool   `protobuf:"varint,3,opt,name=is_add_to_menu,json=isAddToMenu" json:"is_add_to_menu,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*MacroMode_Common
	//	*MacroMode_TimeZone
	//	*MacroMode_Autorule
	//	*MacroMode_Continuous
	Type                 isMacroMode_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MacroMode) Reset()         { *m = MacroMode{} }
func (m *MacroMode) String() string { return proto.CompactTextString(m) }
func (*MacroMode) ProtoMessage()    {}
func (*MacroMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{4}
}
func (m *MacroMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroMode.Unmarshal(m, b)
}
func (m *MacroMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroMode.Marshal(b, m, deterministic)
}
func (dst *MacroMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroMode.Merge(dst, src)
}
func (m *MacroMode) XXX_Size() int {
	return xxx_messageInfo_MacroMode.Size(m)
}
func (m *MacroMode) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroMode.DiscardUnknown(m)
}

var xxx_messageInfo_MacroMode proto.InternalMessageInfo

type isMacroMode_Type interface {
	isMacroMode_Type()
}

type MacroMode_Common struct {
	Common *MacroModeCommon `protobuf:"bytes,4,opt,name=common,oneof"`
}
type MacroMode_TimeZone struct {
	TimeZone *MacroModeTimeZone `protobuf:"bytes,5,opt,name=time_zone,json=timeZone,oneof"`
}
type MacroMode_Autorule struct {
	Autorule *MacroModeAutorule `protobuf:"bytes,6,opt,name=autorule,oneof"`
}
type MacroMode_Continuous struct {
	Continuous *MacroModeContinuous `protobuf:"bytes,7,opt,name=continuous,oneof"`
}

func (*MacroMode_Common) isMacroMode_Type()     {}
func (*MacroMode_TimeZone) isMacroMode_Type()   {}
func (*MacroMode_Autorule) isMacroMode_Type()   {}
func (*MacroMode_Continuous) isMacroMode_Type() {}

func (m *MacroMode) GetType() isMacroMode_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MacroMode) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *MacroMode) GetUserRole() string {
	if m != nil {
		return m.UserRole
	}
	return ""
}

func (m *MacroMode) GetIsAddToMenu() bool {
	if m != nil {
		return m.IsAddToMenu
	}
	return false
}

func (m *MacroMode) GetCommon() *MacroModeCommon {
	if x, ok := m.GetType().(*MacroMode_Common); ok {
		return x.Common
	}
	return nil
}

func (m *MacroMode) GetTimeZone() *MacroModeTimeZone {
	if x, ok := m.GetType().(*MacroMode_TimeZone); ok {
		return x.TimeZone
	}
	return nil
}

func (m *MacroMode) GetAutorule() *MacroModeAutorule {
	if x, ok := m.GetType().(*MacroMode_Autorule); ok {
		return x.Autorule
	}
	return nil
}

func (m *MacroMode) GetContinuous() *MacroModeContinuous {
	if x, ok := m.GetType().(*MacroMode_Continuous); ok {
		return x.Continuous
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MacroMode) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MacroMode_OneofMarshaler, _MacroMode_OneofUnmarshaler, _MacroMode_OneofSizer, []interface{}{
		(*MacroMode_Common)(nil),
		(*MacroMode_TimeZone)(nil),
		(*MacroMode_Autorule)(nil),
		(*MacroMode_Continuous)(nil),
	}
}

func _MacroMode_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MacroMode)
	// type
	switch x := m.Type.(type) {
	case *MacroMode_Common:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Common); err != nil {
			return err
		}
	case *MacroMode_TimeZone:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimeZone); err != nil {
			return err
		}
	case *MacroMode_Autorule:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Autorule); err != nil {
			return err
		}
	case *MacroMode_Continuous:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Continuous); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MacroMode.Type has unexpected type %T", x)
	}
	return nil
}

func _MacroMode_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MacroMode)
	switch tag {
	case 4: // type.common
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroModeCommon)
		err := b.DecodeMessage(msg)
		m.Type = &MacroMode_Common{msg}
		return true, err
	case 5: // type.time_zone
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroModeTimeZone)
		err := b.DecodeMessage(msg)
		m.Type = &MacroMode_TimeZone{msg}
		return true, err
	case 6: // type.autorule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroModeAutorule)
		err := b.DecodeMessage(msg)
		m.Type = &MacroMode_Autorule{msg}
		return true, err
	case 7: // type.continuous
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroModeContinuous)
		err := b.DecodeMessage(msg)
		m.Type = &MacroMode_Continuous{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MacroMode_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MacroMode)
	// type
	switch x := m.Type.(type) {
	case *MacroMode_Common:
		s := proto.Size(x.Common)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroMode_TimeZone:
		s := proto.Size(x.TimeZone)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroMode_Autorule:
		s := proto.Size(x.Autorule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroMode_Continuous:
		s := proto.Size(x.Continuous)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SpecialFilter struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Types that are valid to be assigned to LowerBound:
	//	*SpecialFilter_LowerGender
	//	*SpecialFilter_LowerAge
	LowerBound isSpecialFilter_LowerBound `protobuf_oneof:"lower_bound"`
	// Types that are valid to be assigned to UpperBound:
	//	*SpecialFilter_UpperGender
	//	*SpecialFilter_UpperAge
	UpperBound           isSpecialFilter_UpperBound `protobuf_oneof:"upper_bound"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SpecialFilter) Reset()         { *m = SpecialFilter{} }
func (m *SpecialFilter) String() string { return proto.CompactTextString(m) }
func (*SpecialFilter) ProtoMessage()    {}
func (*SpecialFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{5}
}
func (m *SpecialFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialFilter.Unmarshal(m, b)
}
func (m *SpecialFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialFilter.Marshal(b, m, deterministic)
}
func (dst *SpecialFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialFilter.Merge(dst, src)
}
func (m *SpecialFilter) XXX_Size() int {
	return xxx_messageInfo_SpecialFilter.Size(m)
}
func (m *SpecialFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialFilter.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialFilter proto.InternalMessageInfo

type isSpecialFilter_LowerBound interface {
	isSpecialFilter_LowerBound()
}
type isSpecialFilter_UpperBound interface {
	isSpecialFilter_UpperBound()
}

type SpecialFilter_LowerGender struct {
	LowerGender events.DetectorEvent_FaceRecognitionResult_EGender `protobuf:"varint,4,opt,name=lower_gender,json=lowerGender,enum=axxonsoft.bl.events.DetectorEvent_FaceRecognitionResult_EGender,oneof"`
}
type SpecialFilter_LowerAge struct {
	LowerAge int32 `protobuf:"varint,5,opt,name=lower_age,json=lowerAge,oneof"`
}
type SpecialFilter_UpperGender struct {
	UpperGender events.DetectorEvent_FaceRecognitionResult_EGender `protobuf:"varint,8,opt,name=upper_gender,json=upperGender,enum=axxonsoft.bl.events.DetectorEvent_FaceRecognitionResult_EGender,oneof"`
}
type SpecialFilter_UpperAge struct {
	UpperAge int32 `protobuf:"varint,9,opt,name=upper_age,json=upperAge,oneof"`
}

func (*SpecialFilter_LowerGender) isSpecialFilter_LowerBound() {}
func (*SpecialFilter_LowerAge) isSpecialFilter_LowerBound()    {}
func (*SpecialFilter_UpperGender) isSpecialFilter_UpperBound() {}
func (*SpecialFilter_UpperAge) isSpecialFilter_UpperBound()    {}

func (m *SpecialFilter) GetLowerBound() isSpecialFilter_LowerBound {
	if m != nil {
		return m.LowerBound
	}
	return nil
}
func (m *SpecialFilter) GetUpperBound() isSpecialFilter_UpperBound {
	if m != nil {
		return m.UpperBound
	}
	return nil
}

func (m *SpecialFilter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SpecialFilter) GetLowerGender() events.DetectorEvent_FaceRecognitionResult_EGender {
	if x, ok := m.GetLowerBound().(*SpecialFilter_LowerGender); ok {
		return x.LowerGender
	}
	return events.DetectorEvent_FaceRecognitionResult_UNKNOWN
}

func (m *SpecialFilter) GetLowerAge() int32 {
	if x, ok := m.GetLowerBound().(*SpecialFilter_LowerAge); ok {
		return x.LowerAge
	}
	return 0
}

func (m *SpecialFilter) GetUpperGender() events.DetectorEvent_FaceRecognitionResult_EGender {
	if x, ok := m.GetUpperBound().(*SpecialFilter_UpperGender); ok {
		return x.UpperGender
	}
	return events.DetectorEvent_FaceRecognitionResult_UNKNOWN
}

func (m *SpecialFilter) GetUpperAge() int32 {
	if x, ok := m.GetUpperBound().(*SpecialFilter_UpperAge); ok {
		return x.UpperAge
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SpecialFilter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SpecialFilter_OneofMarshaler, _SpecialFilter_OneofUnmarshaler, _SpecialFilter_OneofSizer, []interface{}{
		(*SpecialFilter_LowerGender)(nil),
		(*SpecialFilter_LowerAge)(nil),
		(*SpecialFilter_UpperGender)(nil),
		(*SpecialFilter_UpperAge)(nil),
	}
}

func _SpecialFilter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SpecialFilter)
	// lower_bound
	switch x := m.LowerBound.(type) {
	case *SpecialFilter_LowerGender:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.LowerGender))
	case *SpecialFilter_LowerAge:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.LowerAge))
	case nil:
	default:
		return fmt.Errorf("SpecialFilter.LowerBound has unexpected type %T", x)
	}
	// upper_bound
	switch x := m.UpperBound.(type) {
	case *SpecialFilter_UpperGender:
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.UpperGender))
	case *SpecialFilter_UpperAge:
		b.EncodeVarint(9<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.UpperAge))
	case nil:
	default:
		return fmt.Errorf("SpecialFilter.UpperBound has unexpected type %T", x)
	}
	return nil
}

func _SpecialFilter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SpecialFilter)
	switch tag {
	case 4: // lower_bound.lower_gender
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.LowerBound = &SpecialFilter_LowerGender{events.DetectorEvent_FaceRecognitionResult_EGender(x)}
		return true, err
	case 5: // lower_bound.lower_age
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.LowerBound = &SpecialFilter_LowerAge{int32(x)}
		return true, err
	case 8: // upper_bound.upper_gender
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UpperBound = &SpecialFilter_UpperGender{events.DetectorEvent_FaceRecognitionResult_EGender(x)}
		return true, err
	case 9: // upper_bound.upper_age
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UpperBound = &SpecialFilter_UpperAge{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _SpecialFilter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SpecialFilter)
	// lower_bound
	switch x := m.LowerBound.(type) {
	case *SpecialFilter_LowerGender:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.LowerGender))
	case *SpecialFilter_LowerAge:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.LowerAge))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// upper_bound
	switch x := m.UpperBound.(type) {
	case *SpecialFilter_UpperGender:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.UpperGender))
	case *SpecialFilter_UpperAge:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.UpperAge))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DetectorMacroCondition struct {
	EventType            string                          `protobuf:"bytes,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	SourceAp             string                          `protobuf:"bytes,2,opt,name=source_ap,json=sourceAp" json:"source_ap,omitempty"`
	State                events.DetectorEvent_AlertState `protobuf:"varint,3,opt,name=state,enum=axxonsoft.bl.events.DetectorEvent_AlertState" json:"state,omitempty"`
	Details              []*SpecialFilter                `protobuf:"bytes,4,rep,name=details" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DetectorMacroCondition) Reset()         { *m = DetectorMacroCondition{} }
func (m *DetectorMacroCondition) String() string { return proto.CompactTextString(m) }
func (*DetectorMacroCondition) ProtoMessage()    {}
func (*DetectorMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{6}
}
func (m *DetectorMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorMacroCondition.Unmarshal(m, b)
}
func (m *DetectorMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorMacroCondition.Marshal(b, m, deterministic)
}
func (dst *DetectorMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorMacroCondition.Merge(dst, src)
}
func (m *DetectorMacroCondition) XXX_Size() int {
	return xxx_messageInfo_DetectorMacroCondition.Size(m)
}
func (m *DetectorMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorMacroCondition proto.InternalMessageInfo

func (m *DetectorMacroCondition) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *DetectorMacroCondition) GetSourceAp() string {
	if m != nil {
		return m.SourceAp
	}
	return ""
}

func (m *DetectorMacroCondition) GetState() events.DetectorEvent_AlertState {
	if m != nil {
		return m.State
	}
	return events.DetectorEvent_HAPPENED
}

func (m *DetectorMacroCondition) GetDetails() []*SpecialFilter {
	if m != nil {
		return m.Details
	}
	return nil
}

type TimeZoneMacroCondition struct {
	TimezoneId           string                                    `protobuf:"bytes,1,opt,name=timezone_id,json=timezoneId" json:"timezone_id,omitempty"`
	BoundaryCase         TimeZoneMacroCondition_ETimezonesBoundary `protobuf:"varint,2,opt,name=boundary_case,json=boundaryCase,enum=axxonsoft.bl.logic.TimeZoneMacroCondition_ETimezonesBoundary" json:"boundary_case,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *TimeZoneMacroCondition) Reset()         { *m = TimeZoneMacroCondition{} }
func (m *TimeZoneMacroCondition) String() string { return proto.CompactTextString(m) }
func (*TimeZoneMacroCondition) ProtoMessage()    {}
func (*TimeZoneMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{7}
}
func (m *TimeZoneMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeZoneMacroCondition.Unmarshal(m, b)
}
func (m *TimeZoneMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeZoneMacroCondition.Marshal(b, m, deterministic)
}
func (dst *TimeZoneMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeZoneMacroCondition.Merge(dst, src)
}
func (m *TimeZoneMacroCondition) XXX_Size() int {
	return xxx_messageInfo_TimeZoneMacroCondition.Size(m)
}
func (m *TimeZoneMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeZoneMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_TimeZoneMacroCondition proto.InternalMessageInfo

func (m *TimeZoneMacroCondition) GetTimezoneId() string {
	if m != nil {
		return m.TimezoneId
	}
	return ""
}

func (m *TimeZoneMacroCondition) GetBoundaryCase() TimeZoneMacroCondition_ETimezonesBoundary {
	if m != nil {
		return m.BoundaryCase
	}
	return TimeZoneMacroCondition_TB_BEGINING
}

type AlertMacroCondition struct {
	ZoneAp               string                         `protobuf:"bytes,1,opt,name=zone_ap,json=zoneAp" json:"zone_ap,omitempty"`
	AlertCase            AlertMacroCondition_EAlertCase `protobuf:"varint,2,opt,name=alert_case,json=alertCase,enum=axxonsoft.bl.logic.AlertMacroCondition_EAlertCase" json:"alert_case,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AlertMacroCondition) Reset()         { *m = AlertMacroCondition{} }
func (m *AlertMacroCondition) String() string { return proto.CompactTextString(m) }
func (*AlertMacroCondition) ProtoMessage()    {}
func (*AlertMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{8}
}
func (m *AlertMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertMacroCondition.Unmarshal(m, b)
}
func (m *AlertMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertMacroCondition.Marshal(b, m, deterministic)
}
func (dst *AlertMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertMacroCondition.Merge(dst, src)
}
func (m *AlertMacroCondition) XXX_Size() int {
	return xxx_messageInfo_AlertMacroCondition.Size(m)
}
func (m *AlertMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_AlertMacroCondition proto.InternalMessageInfo

func (m *AlertMacroCondition) GetZoneAp() string {
	if m != nil {
		return m.ZoneAp
	}
	return ""
}

func (m *AlertMacroCondition) GetAlertCase() AlertMacroCondition_EAlertCase {
	if m != nil {
		return m.AlertCase
	}
	return AlertMacroCondition_AC_ALERT_UNKNOWN
}

type DeviceStateMacroCondition struct {
	Device               string                                 `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	State                events.IpDeviceStateChangedEvent_State `protobuf:"varint,2,opt,name=state,enum=axxonsoft.bl.events.IpDeviceStateChangedEvent_State" json:"state,omitempty"`
	Threshold            int32                                  `protobuf:"varint,3,opt,name=threshold" json:"threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *DeviceStateMacroCondition) Reset()         { *m = DeviceStateMacroCondition{} }
func (m *DeviceStateMacroCondition) String() string { return proto.CompactTextString(m) }
func (*DeviceStateMacroCondition) ProtoMessage()    {}
func (*DeviceStateMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{9}
}
func (m *DeviceStateMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceStateMacroCondition.Unmarshal(m, b)
}
func (m *DeviceStateMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceStateMacroCondition.Marshal(b, m, deterministic)
}
func (dst *DeviceStateMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceStateMacroCondition.Merge(dst, src)
}
func (m *DeviceStateMacroCondition) XXX_Size() int {
	return xxx_messageInfo_DeviceStateMacroCondition.Size(m)
}
func (m *DeviceStateMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceStateMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceStateMacroCondition proto.InternalMessageInfo

func (m *DeviceStateMacroCondition) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *DeviceStateMacroCondition) GetState() events.IpDeviceStateChangedEvent_State {
	if m != nil {
		return m.State
	}
	return events.IpDeviceStateChangedEvent_IPDS_CONNECTED
}

func (m *DeviceStateMacroCondition) GetThreshold() int32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

type WriteArchiveMacroCondition struct {
	Camera               string                                       `protobuf:"bytes,1,opt,name=camera" json:"camera,omitempty"`
	State                events.StateControlStateChangeEvent_SCSwitch `protobuf:"varint,2,opt,name=state,enum=axxonsoft.bl.events.StateControlStateChangeEvent_SCSwitch" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *WriteArchiveMacroCondition) Reset()         { *m = WriteArchiveMacroCondition{} }
func (m *WriteArchiveMacroCondition) String() string { return proto.CompactTextString(m) }
func (*WriteArchiveMacroCondition) ProtoMessage()    {}
func (*WriteArchiveMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{10}
}
func (m *WriteArchiveMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteArchiveMacroCondition.Unmarshal(m, b)
}
func (m *WriteArchiveMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteArchiveMacroCondition.Marshal(b, m, deterministic)
}
func (dst *WriteArchiveMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteArchiveMacroCondition.Merge(dst, src)
}
func (m *WriteArchiveMacroCondition) XXX_Size() int {
	return xxx_messageInfo_WriteArchiveMacroCondition.Size(m)
}
func (m *WriteArchiveMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteArchiveMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_WriteArchiveMacroCondition proto.InternalMessageInfo

func (m *WriteArchiveMacroCondition) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *WriteArchiveMacroCondition) GetState() events.StateControlStateChangeEvent_SCSwitch {
	if m != nil {
		return m.State
	}
	return events.StateControlStateChangeEvent_ON
}

type PtzMacroCondition struct {
	Camera               string                 `protobuf:"bytes,1,opt,name=camera" json:"camera,omitempty"`
	Reason               events.PTZEvent_Reason `protobuf:"varint,2,opt,name=reason,enum=axxonsoft.bl.events.PTZEvent_Reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PtzMacroCondition) Reset()         { *m = PtzMacroCondition{} }
func (m *PtzMacroCondition) String() string { return proto.CompactTextString(m) }
func (*PtzMacroCondition) ProtoMessage()    {}
func (*PtzMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{11}
}
func (m *PtzMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtzMacroCondition.Unmarshal(m, b)
}
func (m *PtzMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtzMacroCondition.Marshal(b, m, deterministic)
}
func (dst *PtzMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtzMacroCondition.Merge(dst, src)
}
func (m *PtzMacroCondition) XXX_Size() int {
	return xxx_messageInfo_PtzMacroCondition.Size(m)
}
func (m *PtzMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_PtzMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_PtzMacroCondition proto.InternalMessageInfo

func (m *PtzMacroCondition) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *PtzMacroCondition) GetReason() events.PTZEvent_Reason {
	if m != nil {
		return m.Reason
	}
	return events.PTZEvent_PER_ENTERED_PRESET
}

type RelayMacroCondition struct {
	Relay                string                                       `protobuf:"bytes,1,opt,name=relay" json:"relay,omitempty"`
	State                events.StateControlStateChangeEvent_SCSwitch `protobuf:"varint,2,opt,name=state,enum=axxonsoft.bl.events.StateControlStateChangeEvent_SCSwitch" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *RelayMacroCondition) Reset()         { *m = RelayMacroCondition{} }
func (m *RelayMacroCondition) String() string { return proto.CompactTextString(m) }
func (*RelayMacroCondition) ProtoMessage()    {}
func (*RelayMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{12}
}
func (m *RelayMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayMacroCondition.Unmarshal(m, b)
}
func (m *RelayMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayMacroCondition.Marshal(b, m, deterministic)
}
func (dst *RelayMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayMacroCondition.Merge(dst, src)
}
func (m *RelayMacroCondition) XXX_Size() int {
	return xxx_messageInfo_RelayMacroCondition.Size(m)
}
func (m *RelayMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_RelayMacroCondition proto.InternalMessageInfo

func (m *RelayMacroCondition) GetRelay() string {
	if m != nil {
		return m.Relay
	}
	return ""
}

func (m *RelayMacroCondition) GetState() events.StateControlStateChangeEvent_SCSwitch {
	if m != nil {
		return m.State
	}
	return events.StateControlStateChangeEvent_ON
}

type AuditMacroCondition struct {
	Event                events.EAuditEventType `protobuf:"varint,1,opt,name=event,enum=axxonsoft.bl.events.EAuditEventType" json:"event,omitempty"`
	Data                 map[string]string      `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AuditMacroCondition) Reset()         { *m = AuditMacroCondition{} }
func (m *AuditMacroCondition) String() string { return proto.CompactTextString(m) }
func (*AuditMacroCondition) ProtoMessage()    {}
func (*AuditMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{13}
}
func (m *AuditMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditMacroCondition.Unmarshal(m, b)
}
func (m *AuditMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditMacroCondition.Marshal(b, m, deterministic)
}
func (dst *AuditMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditMacroCondition.Merge(dst, src)
}
func (m *AuditMacroCondition) XXX_Size() int {
	return xxx_messageInfo_AuditMacroCondition.Size(m)
}
func (m *AuditMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_AuditMacroCondition proto.InternalMessageInfo

func (m *AuditMacroCondition) GetEvent() events.EAuditEventType {
	if m != nil {
		return m.Event
	}
	return events.EAuditEventType_SE_SYSTEM_TIMESTAMP
}

func (m *AuditMacroCondition) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type VolumeHealthMacroCondition struct {
	Storage              string                         `protobuf:"bytes,1,opt,name=storage" json:"storage,omitempty"`
	Volume               string                         `protobuf:"bytes,2,opt,name=volume" json:"volume,omitempty"`
	Health               events.VolumeHealthEvent_State `protobuf:"varint,3,opt,name=health,enum=axxonsoft.bl.events.VolumeHealthEvent_State" json:"health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *VolumeHealthMacroCondition) Reset()         { *m = VolumeHealthMacroCondition{} }
func (m *VolumeHealthMacroCondition) String() string { return proto.CompactTextString(m) }
func (*VolumeHealthMacroCondition) ProtoMessage()    {}
func (*VolumeHealthMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{14}
}
func (m *VolumeHealthMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeHealthMacroCondition.Unmarshal(m, b)
}
func (m *VolumeHealthMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeHealthMacroCondition.Marshal(b, m, deterministic)
}
func (dst *VolumeHealthMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeHealthMacroCondition.Merge(dst, src)
}
func (m *VolumeHealthMacroCondition) XXX_Size() int {
	return xxx_messageInfo_VolumeHealthMacroCondition.Size(m)
}
func (m *VolumeHealthMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeHealthMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeHealthMacroCondition proto.InternalMessageInfo

func (m *VolumeHealthMacroCondition) GetStorage() string {
	if m != nil {
		return m.Storage
	}
	return ""
}

func (m *VolumeHealthMacroCondition) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *VolumeHealthMacroCondition) GetHealth() events.VolumeHealthEvent_State {
	if m != nil {
		return m.Health
	}
	return events.VolumeHealthEvent_VH_CORRUPTED
}

type TextEventCondition struct {
	Source               string   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextEventCondition) Reset()         { *m = TextEventCondition{} }
func (m *TextEventCondition) String() string { return proto.CompactTextString(m) }
func (*TextEventCondition) ProtoMessage()    {}
func (*TextEventCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{15}
}
func (m *TextEventCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextEventCondition.Unmarshal(m, b)
}
func (m *TextEventCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextEventCondition.Marshal(b, m, deterministic)
}
func (dst *TextEventCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextEventCondition.Merge(dst, src)
}
func (m *TextEventCondition) XXX_Size() int {
	return xxx_messageInfo_TextEventCondition.Size(m)
}
func (m *TextEventCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_TextEventCondition.DiscardUnknown(m)
}

var xxx_messageInfo_TextEventCondition proto.InternalMessageInfo

func (m *TextEventCondition) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TextEventCondition) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type ServerStateMacroCondition struct {
	Observer             string                                `protobuf:"bytes,1,opt,name=observer" json:"observer,omitempty"`
	Subject              string                                `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	State                ServerStateMacroCondition_ServerState `protobuf:"varint,3,opt,name=state,enum=axxonsoft.bl.logic.ServerStateMacroCondition_ServerState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ServerStateMacroCondition) Reset()         { *m = ServerStateMacroCondition{} }
func (m *ServerStateMacroCondition) String() string { return proto.CompactTextString(m) }
func (*ServerStateMacroCondition) ProtoMessage()    {}
func (*ServerStateMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{16}
}
func (m *ServerStateMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStateMacroCondition.Unmarshal(m, b)
}
func (m *ServerStateMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStateMacroCondition.Marshal(b, m, deterministic)
}
func (dst *ServerStateMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStateMacroCondition.Merge(dst, src)
}
func (m *ServerStateMacroCondition) XXX_Size() int {
	return xxx_messageInfo_ServerStateMacroCondition.Size(m)
}
func (m *ServerStateMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStateMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStateMacroCondition proto.InternalMessageInfo

func (m *ServerStateMacroCondition) GetObserver() string {
	if m != nil {
		return m.Observer
	}
	return ""
}

func (m *ServerStateMacroCondition) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *ServerStateMacroCondition) GetState() ServerStateMacroCondition_ServerState {
	if m != nil {
		return m.State
	}
	return ServerStateMacroCondition_SS_OFFLINE
}

type ArmStateCondition struct {
	Zone                 string                                     `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	State                events.CameraArmStateEvent_ECameraArmState `protobuf:"varint,2,opt,name=state,enum=axxonsoft.bl.events.CameraArmStateEvent_ECameraArmState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *ArmStateCondition) Reset()         { *m = ArmStateCondition{} }
func (m *ArmStateCondition) String() string { return proto.CompactTextString(m) }
func (*ArmStateCondition) ProtoMessage()    {}
func (*ArmStateCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{17}
}
func (m *ArmStateCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArmStateCondition.Unmarshal(m, b)
}
func (m *ArmStateCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArmStateCondition.Marshal(b, m, deterministic)
}
func (dst *ArmStateCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArmStateCondition.Merge(dst, src)
}
func (m *ArmStateCondition) XXX_Size() int {
	return xxx_messageInfo_ArmStateCondition.Size(m)
}
func (m *ArmStateCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ArmStateCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ArmStateCondition proto.InternalMessageInfo

func (m *ArmStateCondition) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ArmStateCondition) GetState() events.CameraArmStateEvent_ECameraArmState {
	if m != nil {
		return m.State
	}
	return events.CameraArmStateEvent_CS_Disarm
}

type RecognitionMacroCondition struct {
	Camera               string                                  `protobuf:"bytes,1,opt,name=camera" json:"camera,omitempty"`
	List                 string                                  `protobuf:"bytes,2,opt,name=list" json:"list,omitempty"`
	Type                 RecognitionMacroCondition_DetectionType `protobuf:"varint,3,opt,name=type,enum=axxonsoft.bl.logic.RecognitionMacroCondition_DetectionType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *RecognitionMacroCondition) Reset()         { *m = RecognitionMacroCondition{} }
func (m *RecognitionMacroCondition) String() string { return proto.CompactTextString(m) }
func (*RecognitionMacroCondition) ProtoMessage()    {}
func (*RecognitionMacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{18}
}
func (m *RecognitionMacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionMacroCondition.Unmarshal(m, b)
}
func (m *RecognitionMacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionMacroCondition.Marshal(b, m, deterministic)
}
func (dst *RecognitionMacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionMacroCondition.Merge(dst, src)
}
func (m *RecognitionMacroCondition) XXX_Size() int {
	return xxx_messageInfo_RecognitionMacroCondition.Size(m)
}
func (m *RecognitionMacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionMacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionMacroCondition proto.InternalMessageInfo

func (m *RecognitionMacroCondition) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *RecognitionMacroCondition) GetList() string {
	if m != nil {
		return m.List
	}
	return ""
}

func (m *RecognitionMacroCondition) GetType() RecognitionMacroCondition_DetectionType {
	if m != nil {
		return m.Type
	}
	return RecognitionMacroCondition_DT_Face
}

type StatisticsCondition struct {
	Point                string                    `protobuf:"bytes,1,opt,name=point" json:"point,omitempty"`
	Item                 string                    `protobuf:"bytes,2,opt,name=item" json:"item,omitempty"`
	Value                float64                   `protobuf:"fixed64,3,opt,name=value" json:"value,omitempty"`
	Delta                float64                   `protobuf:"fixed64,4,opt,name=delta" json:"delta,omitempty"`
	Trend                StatisticsCondition_Trend `protobuf:"varint,5,opt,name=trend,enum=axxonsoft.bl.logic.StatisticsCondition_Trend" json:"trend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StatisticsCondition) Reset()         { *m = StatisticsCondition{} }
func (m *StatisticsCondition) String() string { return proto.CompactTextString(m) }
func (*StatisticsCondition) ProtoMessage()    {}
func (*StatisticsCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{19}
}
func (m *StatisticsCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsCondition.Unmarshal(m, b)
}
func (m *StatisticsCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsCondition.Marshal(b, m, deterministic)
}
func (dst *StatisticsCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsCondition.Merge(dst, src)
}
func (m *StatisticsCondition) XXX_Size() int {
	return xxx_messageInfo_StatisticsCondition.Size(m)
}
func (m *StatisticsCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsCondition.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsCondition proto.InternalMessageInfo

func (m *StatisticsCondition) GetPoint() string {
	if m != nil {
		return m.Point
	}
	return ""
}

func (m *StatisticsCondition) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

func (m *StatisticsCondition) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *StatisticsCondition) GetDelta() float64 {
	if m != nil {
		return m.Delta
	}
	return 0
}

func (m *StatisticsCondition) GetTrend() StatisticsCondition_Trend {
	if m != nil {
		return m.Trend
	}
	return StatisticsCondition_ET_NONE
}

type MacroCondition struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// Types that are valid to be assigned to Condition:
	//	*MacroCondition_Detector
	//	*MacroCondition_Timezone
	//	*MacroCondition_Alert
	//	*MacroCondition_Device
	//	*MacroCondition_ArchiveWrite
	//	*MacroCondition_Ptz
	//	*MacroCondition_Relay
	//	*MacroCondition_VolumeHealth
	//	*MacroCondition_ServerState
	//	*MacroCondition_Text
	//	*MacroCondition_Arm
	//	*MacroCondition_Recognition
	//	*MacroCondition_Statistics
	//	*MacroCondition_Audit
	Condition            isMacroCondition_Condition `protobuf_oneof:"condition"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MacroCondition) Reset()         { *m = MacroCondition{} }
func (m *MacroCondition) String() string { return proto.CompactTextString(m) }
func (*MacroCondition) ProtoMessage()    {}
func (*MacroCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{20}
}
func (m *MacroCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroCondition.Unmarshal(m, b)
}
func (m *MacroCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroCondition.Marshal(b, m, deterministic)
}
func (dst *MacroCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroCondition.Merge(dst, src)
}
func (m *MacroCondition) XXX_Size() int {
	return xxx_messageInfo_MacroCondition.Size(m)
}
func (m *MacroCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroCondition.DiscardUnknown(m)
}

var xxx_messageInfo_MacroCondition proto.InternalMessageInfo

type isMacroCondition_Condition interface {
	isMacroCondition_Condition()
}

type MacroCondition_Detector struct {
	Detector *DetectorMacroCondition `protobuf:"bytes,4,opt,name=detector,oneof"`
}
type MacroCondition_Timezone struct {
	Timezone *TimeZoneMacroCondition `protobuf:"bytes,5,opt,name=timezone,oneof"`
}
type MacroCondition_Alert struct {
	Alert *AlertMacroCondition `protobuf:"bytes,6,opt,name=alert,oneof"`
}
type MacroCondition_Device struct {
	Device *DeviceStateMacroCondition `protobuf:"bytes,7,opt,name=device,oneof"`
}
type MacroCondition_ArchiveWrite struct {
	ArchiveWrite *WriteArchiveMacroCondition `protobuf:"bytes,8,opt,name=archive_write,json=archiveWrite,oneof"`
}
type MacroCondition_Ptz struct {
	Ptz *PtzMacroCondition `protobuf:"bytes,9,opt,name=ptz,oneof"`
}
type MacroCondition_Relay struct {
	Relay *RelayMacroCondition `protobuf:"bytes,10,opt,name=relay,oneof"`
}
type MacroCondition_VolumeHealth struct {
	VolumeHealth *VolumeHealthMacroCondition `protobuf:"bytes,11,opt,name=volume_health,json=volumeHealth,oneof"`
}
type MacroCondition_ServerState struct {
	ServerState *ServerStateMacroCondition `protobuf:"bytes,12,opt,name=server_state,json=serverState,oneof"`
}
type MacroCondition_Text struct {
	Text *TextEventCondition `protobuf:"bytes,13,opt,name=text,oneof"`
}
type MacroCondition_Arm struct {
	Arm *ArmStateCondition `protobuf:"bytes,14,opt,name=arm,oneof"`
}
type MacroCondition_Recognition struct {
	Recognition *RecognitionMacroCondition `protobuf:"bytes,15,opt,name=recognition,oneof"`
}
type MacroCondition_Statistics struct {
	Statistics *StatisticsCondition `protobuf:"bytes,16,opt,name=statistics,oneof"`
}
type MacroCondition_Audit struct {
	Audit *AuditMacroCondition `protobuf:"bytes,17,opt,name=audit,oneof"`
}

func (*MacroCondition_Detector) isMacroCondition_Condition()     {}
func (*MacroCondition_Timezone) isMacroCondition_Condition()     {}
func (*MacroCondition_Alert) isMacroCondition_Condition()        {}
func (*MacroCondition_Device) isMacroCondition_Condition()       {}
func (*MacroCondition_ArchiveWrite) isMacroCondition_Condition() {}
func (*MacroCondition_Ptz) isMacroCondition_Condition()          {}
func (*MacroCondition_Relay) isMacroCondition_Condition()        {}
func (*MacroCondition_VolumeHealth) isMacroCondition_Condition() {}
func (*MacroCondition_ServerState) isMacroCondition_Condition()  {}
func (*MacroCondition_Text) isMacroCondition_Condition()         {}
func (*MacroCondition_Arm) isMacroCondition_Condition()          {}
func (*MacroCondition_Recognition) isMacroCondition_Condition()  {}
func (*MacroCondition_Statistics) isMacroCondition_Condition()   {}
func (*MacroCondition_Audit) isMacroCondition_Condition()        {}

func (m *MacroCondition) GetCondition() isMacroCondition_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *MacroCondition) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MacroCondition) GetDetector() *DetectorMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Detector); ok {
		return x.Detector
	}
	return nil
}

func (m *MacroCondition) GetTimezone() *TimeZoneMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Timezone); ok {
		return x.Timezone
	}
	return nil
}

func (m *MacroCondition) GetAlert() *AlertMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Alert); ok {
		return x.Alert
	}
	return nil
}

func (m *MacroCondition) GetDevice() *DeviceStateMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Device); ok {
		return x.Device
	}
	return nil
}

func (m *MacroCondition) GetArchiveWrite() *WriteArchiveMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_ArchiveWrite); ok {
		return x.ArchiveWrite
	}
	return nil
}

func (m *MacroCondition) GetPtz() *PtzMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Ptz); ok {
		return x.Ptz
	}
	return nil
}

func (m *MacroCondition) GetRelay() *RelayMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Relay); ok {
		return x.Relay
	}
	return nil
}

func (m *MacroCondition) GetVolumeHealth() *VolumeHealthMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_VolumeHealth); ok {
		return x.VolumeHealth
	}
	return nil
}

func (m *MacroCondition) GetServerState() *ServerStateMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_ServerState); ok {
		return x.ServerState
	}
	return nil
}

func (m *MacroCondition) GetText() *TextEventCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Text); ok {
		return x.Text
	}
	return nil
}

func (m *MacroCondition) GetArm() *ArmStateCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Arm); ok {
		return x.Arm
	}
	return nil
}

func (m *MacroCondition) GetRecognition() *RecognitionMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Recognition); ok {
		return x.Recognition
	}
	return nil
}

func (m *MacroCondition) GetStatistics() *StatisticsCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Statistics); ok {
		return x.Statistics
	}
	return nil
}

func (m *MacroCondition) GetAudit() *AuditMacroCondition {
	if x, ok := m.GetCondition().(*MacroCondition_Audit); ok {
		return x.Audit
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MacroCondition) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MacroCondition_OneofMarshaler, _MacroCondition_OneofUnmarshaler, _MacroCondition_OneofSizer, []interface{}{
		(*MacroCondition_Detector)(nil),
		(*MacroCondition_Timezone)(nil),
		(*MacroCondition_Alert)(nil),
		(*MacroCondition_Device)(nil),
		(*MacroCondition_ArchiveWrite)(nil),
		(*MacroCondition_Ptz)(nil),
		(*MacroCondition_Relay)(nil),
		(*MacroCondition_VolumeHealth)(nil),
		(*MacroCondition_ServerState)(nil),
		(*MacroCondition_Text)(nil),
		(*MacroCondition_Arm)(nil),
		(*MacroCondition_Recognition)(nil),
		(*MacroCondition_Statistics)(nil),
		(*MacroCondition_Audit)(nil),
	}
}

func _MacroCondition_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MacroCondition)
	// condition
	switch x := m.Condition.(type) {
	case *MacroCondition_Detector:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Detector); err != nil {
			return err
		}
	case *MacroCondition_Timezone:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timezone); err != nil {
			return err
		}
	case *MacroCondition_Alert:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Alert); err != nil {
			return err
		}
	case *MacroCondition_Device:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Device); err != nil {
			return err
		}
	case *MacroCondition_ArchiveWrite:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ArchiveWrite); err != nil {
			return err
		}
	case *MacroCondition_Ptz:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ptz); err != nil {
			return err
		}
	case *MacroCondition_Relay:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Relay); err != nil {
			return err
		}
	case *MacroCondition_VolumeHealth:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VolumeHealth); err != nil {
			return err
		}
	case *MacroCondition_ServerState:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServerState); err != nil {
			return err
		}
	case *MacroCondition_Text:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Text); err != nil {
			return err
		}
	case *MacroCondition_Arm:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Arm); err != nil {
			return err
		}
	case *MacroCondition_Recognition:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Recognition); err != nil {
			return err
		}
	case *MacroCondition_Statistics:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Statistics); err != nil {
			return err
		}
	case *MacroCondition_Audit:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Audit); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MacroCondition.Condition has unexpected type %T", x)
	}
	return nil
}

func _MacroCondition_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MacroCondition)
	switch tag {
	case 4: // condition.detector
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DetectorMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Detector{msg}
		return true, err
	case 5: // condition.timezone
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TimeZoneMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Timezone{msg}
		return true, err
	case 6: // condition.alert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AlertMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Alert{msg}
		return true, err
	case 7: // condition.device
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceStateMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Device{msg}
		return true, err
	case 8: // condition.archive_write
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WriteArchiveMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_ArchiveWrite{msg}
		return true, err
	case 9: // condition.ptz
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PtzMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Ptz{msg}
		return true, err
	case 10: // condition.relay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelayMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Relay{msg}
		return true, err
	case 11: // condition.volume_health
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VolumeHealthMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_VolumeHealth{msg}
		return true, err
	case 12: // condition.server_state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServerStateMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_ServerState{msg}
		return true, err
	case 13: // condition.text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TextEventCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Text{msg}
		return true, err
	case 14: // condition.arm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArmStateCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Arm{msg}
		return true, err
	case 15: // condition.recognition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RecognitionMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Recognition{msg}
		return true, err
	case 16: // condition.statistics
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StatisticsCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Statistics{msg}
		return true, err
	case 17: // condition.audit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuditMacroCondition)
		err := b.DecodeMessage(msg)
		m.Condition = &MacroCondition_Audit{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MacroCondition_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MacroCondition)
	// condition
	switch x := m.Condition.(type) {
	case *MacroCondition_Detector:
		s := proto.Size(x.Detector)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Timezone:
		s := proto.Size(x.Timezone)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Alert:
		s := proto.Size(x.Alert)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Device:
		s := proto.Size(x.Device)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_ArchiveWrite:
		s := proto.Size(x.ArchiveWrite)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Ptz:
		s := proto.Size(x.Ptz)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Relay:
		s := proto.Size(x.Relay)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_VolumeHealth:
		s := proto.Size(x.VolumeHealth)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_ServerState:
		s := proto.Size(x.ServerState)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Text:
		s := proto.Size(x.Text)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Arm:
		s := proto.Size(x.Arm)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Recognition:
		s := proto.Size(x.Recognition)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Statistics:
		s := proto.Size(x.Statistics)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroCondition_Audit:
		s := proto.Size(x.Audit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type WriteArchiveAction struct {
	Camera               string   `protobuf:"bytes,1,opt,name=camera" json:"camera,omitempty"`
	Archive              string   `protobuf:"bytes,2,opt,name=archive" json:"archive,omitempty"`
	MinPrerecordMs       int32    `protobuf:"varint,3,opt,name=min_prerecord_ms,json=minPrerecordMs" json:"min_prerecord_ms,omitempty"`
	PostEventTimeoutMs   int32    `protobuf:"varint,4,opt,name=post_event_timeout_ms,json=postEventTimeoutMs" json:"post_event_timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteArchiveAction) Reset()         { *m = WriteArchiveAction{} }
func (m *WriteArchiveAction) String() string { return proto.CompactTextString(m) }
func (*WriteArchiveAction) ProtoMessage()    {}
func (*WriteArchiveAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{21}
}
func (m *WriteArchiveAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteArchiveAction.Unmarshal(m, b)
}
func (m *WriteArchiveAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteArchiveAction.Marshal(b, m, deterministic)
}
func (dst *WriteArchiveAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteArchiveAction.Merge(dst, src)
}
func (m *WriteArchiveAction) XXX_Size() int {
	return xxx_messageInfo_WriteArchiveAction.Size(m)
}
func (m *WriteArchiveAction) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteArchiveAction.DiscardUnknown(m)
}

var xxx_messageInfo_WriteArchiveAction proto.InternalMessageInfo

func (m *WriteArchiveAction) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *WriteArchiveAction) GetArchive() string {
	if m != nil {
		return m.Archive
	}
	return ""
}

func (m *WriteArchiveAction) GetMinPrerecordMs() int32 {
	if m != nil {
		return m.MinPrerecordMs
	}
	return 0
}

func (m *WriteArchiveAction) GetPostEventTimeoutMs() int32 {
	if m != nil {
		return m.PostEventTimeoutMs
	}
	return 0
}

type RaiseAlertAction struct {
	Zone                 string                          `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	Archive              string                          `protobuf:"bytes,2,opt,name=archive" json:"archive,omitempty"`
	OffsetMs             int32                           `protobuf:"varint,3,opt,name=offset_ms,json=offsetMs" json:"offset_ms,omitempty"`
	Mode                 RaiseAlertAction_RaiseAlertMode `protobuf:"varint,4,opt,name=mode,enum=axxonsoft.bl.logic.RaiseAlertAction_RaiseAlertMode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RaiseAlertAction) Reset()         { *m = RaiseAlertAction{} }
func (m *RaiseAlertAction) String() string { return proto.CompactTextString(m) }
func (*RaiseAlertAction) ProtoMessage()    {}
func (*RaiseAlertAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{22}
}
func (m *RaiseAlertAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaiseAlertAction.Unmarshal(m, b)
}
func (m *RaiseAlertAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaiseAlertAction.Marshal(b, m, deterministic)
}
func (dst *RaiseAlertAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaiseAlertAction.Merge(dst, src)
}
func (m *RaiseAlertAction) XXX_Size() int {
	return xxx_messageInfo_RaiseAlertAction.Size(m)
}
func (m *RaiseAlertAction) XXX_DiscardUnknown() {
	xxx_messageInfo_RaiseAlertAction.DiscardUnknown(m)
}

var xxx_messageInfo_RaiseAlertAction proto.InternalMessageInfo

func (m *RaiseAlertAction) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *RaiseAlertAction) GetArchive() string {
	if m != nil {
		return m.Archive
	}
	return ""
}

func (m *RaiseAlertAction) GetOffsetMs() int32 {
	if m != nil {
		return m.OffsetMs
	}
	return 0
}

func (m *RaiseAlertAction) GetMode() RaiseAlertAction_RaiseAlertMode {
	if m != nil {
		return m.Mode
	}
	return RaiseAlertAction_RAM_Always
}

type CloseAlertAction struct {
	Zone                 string                      `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	Resolution           CloseAlertAction_Resolution `protobuf:"varint,2,opt,name=resolution,enum=axxonsoft.bl.logic.CloseAlertAction_Resolution" json:"resolution,omitempty"`
	CloseLocked          bool                        `protobuf:"varint,3,opt,name=close_locked,json=closeLocked" json:"close_locked,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CloseAlertAction) Reset()         { *m = CloseAlertAction{} }
func (m *CloseAlertAction) String() string { return proto.CompactTextString(m) }
func (*CloseAlertAction) ProtoMessage()    {}
func (*CloseAlertAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{23}
}
func (m *CloseAlertAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseAlertAction.Unmarshal(m, b)
}
func (m *CloseAlertAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseAlertAction.Marshal(b, m, deterministic)
}
func (dst *CloseAlertAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseAlertAction.Merge(dst, src)
}
func (m *CloseAlertAction) XXX_Size() int {
	return xxx_messageInfo_CloseAlertAction.Size(m)
}
func (m *CloseAlertAction) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseAlertAction.DiscardUnknown(m)
}

var xxx_messageInfo_CloseAlertAction proto.InternalMessageInfo

func (m *CloseAlertAction) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *CloseAlertAction) GetResolution() CloseAlertAction_Resolution {
	if m != nil {
		return m.Resolution
	}
	return CloseAlertAction_AR_None
}

func (m *CloseAlertAction) GetCloseLocked() bool {
	if m != nil {
		return m.CloseLocked
	}
	return false
}

type SwitchRelayAction struct {
	Relay                string                            `protobuf:"bytes,1,opt,name=relay" json:"relay,omitempty"`
	Effect               SwitchRelayAction_SwitchDirective `protobuf:"varint,2,opt,name=effect,enum=axxonsoft.bl.logic.SwitchRelayAction_SwitchDirective" json:"effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SwitchRelayAction) Reset()         { *m = SwitchRelayAction{} }
func (m *SwitchRelayAction) String() string { return proto.CompactTextString(m) }
func (*SwitchRelayAction) ProtoMessage()    {}
func (*SwitchRelayAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{24}
}
func (m *SwitchRelayAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchRelayAction.Unmarshal(m, b)
}
func (m *SwitchRelayAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchRelayAction.Marshal(b, m, deterministic)
}
func (dst *SwitchRelayAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchRelayAction.Merge(dst, src)
}
func (m *SwitchRelayAction) XXX_Size() int {
	return xxx_messageInfo_SwitchRelayAction.Size(m)
}
func (m *SwitchRelayAction) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchRelayAction.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchRelayAction proto.InternalMessageInfo

func (m *SwitchRelayAction) GetRelay() string {
	if m != nil {
		return m.Relay
	}
	return ""
}

func (m *SwitchRelayAction) GetEffect() SwitchRelayAction_SwitchDirective {
	if m != nil {
		return m.Effect
	}
	return SwitchRelayAction_SD_NEUTRAL
}

type GotoPTZPresetAction struct {
	Telemetry            string   `protobuf:"bytes,1,opt,name=telemetry" json:"telemetry,omitempty"`
	PresetNumber         int32    `protobuf:"varint,2,opt,name=preset_number,json=presetNumber" json:"preset_number,omitempty"`
	Speed                int32    `protobuf:"varint,3,opt,name=speed" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GotoPTZPresetAction) Reset()         { *m = GotoPTZPresetAction{} }
func (m *GotoPTZPresetAction) String() string { return proto.CompactTextString(m) }
func (*GotoPTZPresetAction) ProtoMessage()    {}
func (*GotoPTZPresetAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{25}
}
func (m *GotoPTZPresetAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GotoPTZPresetAction.Unmarshal(m, b)
}
func (m *GotoPTZPresetAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GotoPTZPresetAction.Marshal(b, m, deterministic)
}
func (dst *GotoPTZPresetAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GotoPTZPresetAction.Merge(dst, src)
}
func (m *GotoPTZPresetAction) XXX_Size() int {
	return xxx_messageInfo_GotoPTZPresetAction.Size(m)
}
func (m *GotoPTZPresetAction) XXX_DiscardUnknown() {
	xxx_messageInfo_GotoPTZPresetAction.DiscardUnknown(m)
}

var xxx_messageInfo_GotoPTZPresetAction proto.InternalMessageInfo

func (m *GotoPTZPresetAction) GetTelemetry() string {
	if m != nil {
		return m.Telemetry
	}
	return ""
}

func (m *GotoPTZPresetAction) GetPresetNumber() int32 {
	if m != nil {
		return m.PresetNumber
	}
	return 0
}

func (m *GotoPTZPresetAction) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type VoiceNotificationAction struct {
	Notifier             string   `protobuf:"bytes,1,opt,name=notifier" json:"notifier,omitempty"`
	TimeoutMs            int32    `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoiceNotificationAction) Reset()         { *m = VoiceNotificationAction{} }
func (m *VoiceNotificationAction) String() string { return proto.CompactTextString(m) }
func (*VoiceNotificationAction) ProtoMessage()    {}
func (*VoiceNotificationAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{26}
}
func (m *VoiceNotificationAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoiceNotificationAction.Unmarshal(m, b)
}
func (m *VoiceNotificationAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoiceNotificationAction.Marshal(b, m, deterministic)
}
func (dst *VoiceNotificationAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoiceNotificationAction.Merge(dst, src)
}
func (m *VoiceNotificationAction) XXX_Size() int {
	return xxx_messageInfo_VoiceNotificationAction.Size(m)
}
func (m *VoiceNotificationAction) XXX_DiscardUnknown() {
	xxx_messageInfo_VoiceNotificationAction.DiscardUnknown(m)
}

var xxx_messageInfo_VoiceNotificationAction proto.InternalMessageInfo

func (m *VoiceNotificationAction) GetNotifier() string {
	if m != nil {
		return m.Notifier
	}
	return ""
}

func (m *VoiceNotificationAction) GetTimeoutMs() int32 {
	if m != nil {
		return m.TimeoutMs
	}
	return 0
}

type SinkAudioNotificationAction struct {
	StateControl         string   `protobuf:"bytes,1,opt,name=state_control,json=stateControl" json:"state_control,omitempty"`
	SourceEndpoint       string   `protobuf:"bytes,2,opt,name=source_endpoint,json=sourceEndpoint" json:"source_endpoint,omitempty"`
	SinkEndpoint         string   `protobuf:"bytes,3,opt,name=sink_endpoint,json=sinkEndpoint" json:"sink_endpoint,omitempty"`
	TimeoutMs            int32    `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SinkAudioNotificationAction) Reset()         { *m = SinkAudioNotificationAction{} }
func (m *SinkAudioNotificationAction) String() string { return proto.CompactTextString(m) }
func (*SinkAudioNotificationAction) ProtoMessage()    {}
func (*SinkAudioNotificationAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{27}
}
func (m *SinkAudioNotificationAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinkAudioNotificationAction.Unmarshal(m, b)
}
func (m *SinkAudioNotificationAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinkAudioNotificationAction.Marshal(b, m, deterministic)
}
func (dst *SinkAudioNotificationAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinkAudioNotificationAction.Merge(dst, src)
}
func (m *SinkAudioNotificationAction) XXX_Size() int {
	return xxx_messageInfo_SinkAudioNotificationAction.Size(m)
}
func (m *SinkAudioNotificationAction) XXX_DiscardUnknown() {
	xxx_messageInfo_SinkAudioNotificationAction.DiscardUnknown(m)
}

var xxx_messageInfo_SinkAudioNotificationAction proto.InternalMessageInfo

func (m *SinkAudioNotificationAction) GetStateControl() string {
	if m != nil {
		return m.StateControl
	}
	return ""
}

func (m *SinkAudioNotificationAction) GetSourceEndpoint() string {
	if m != nil {
		return m.SourceEndpoint
	}
	return ""
}

func (m *SinkAudioNotificationAction) GetSinkEndpoint() string {
	if m != nil {
		return m.SinkEndpoint
	}
	return ""
}

func (m *SinkAudioNotificationAction) GetTimeoutMs() int32 {
	if m != nil {
		return m.TimeoutMs
	}
	return 0
}

type EmainNotificationAction struct {
	Notifier             string   `protobuf:"bytes,1,opt,name=notifier" json:"notifier,omitempty"`
	Recipients           []string `protobuf:"bytes,2,rep,name=recipients" json:"recipients,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject" json:"subject,omitempty"`
	MsgText              string   `protobuf:"bytes,4,opt,name=msg_text,json=msgText" json:"msg_text,omitempty"`
	AtachVideo           bool     `protobuf:"varint,5,opt,name=atach_video,json=atachVideo" json:"atach_video,omitempty"`
	ExportAgent          string   `protobuf:"bytes,6,opt,name=export_agent,json=exportAgent" json:"export_agent,omitempty"`
	SpanMs               int32    `protobuf:"varint,7,opt,name=span_ms,json=spanMs" json:"span_ms,omitempty"`
	Camera               string   `protobuf:"bytes,8,opt,name=camera" json:"camera,omitempty"`
	Archive              string   `protobuf:"bytes,9,opt,name=archive" json:"archive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmainNotificationAction) Reset()         { *m = EmainNotificationAction{} }
func (m *EmainNotificationAction) String() string { return proto.CompactTextString(m) }
func (*EmainNotificationAction) ProtoMessage()    {}
func (*EmainNotificationAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{28}
}
func (m *EmainNotificationAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmainNotificationAction.Unmarshal(m, b)
}
func (m *EmainNotificationAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmainNotificationAction.Marshal(b, m, deterministic)
}
func (dst *EmainNotificationAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmainNotificationAction.Merge(dst, src)
}
func (m *EmainNotificationAction) XXX_Size() int {
	return xxx_messageInfo_EmainNotificationAction.Size(m)
}
func (m *EmainNotificationAction) XXX_DiscardUnknown() {
	xxx_messageInfo_EmainNotificationAction.DiscardUnknown(m)
}

var xxx_messageInfo_EmainNotificationAction proto.InternalMessageInfo

func (m *EmainNotificationAction) GetNotifier() string {
	if m != nil {
		return m.Notifier
	}
	return ""
}

func (m *EmainNotificationAction) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *EmainNotificationAction) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmainNotificationAction) GetMsgText() string {
	if m != nil {
		return m.MsgText
	}
	return ""
}

func (m *EmainNotificationAction) GetAtachVideo() bool {
	if m != nil {
		return m.AtachVideo
	}
	return false
}

func (m *EmainNotificationAction) GetExportAgent() string {
	if m != nil {
		return m.ExportAgent
	}
	return ""
}

func (m *EmainNotificationAction) GetSpanMs() int32 {
	if m != nil {
		return m.SpanMs
	}
	return 0
}

func (m *EmainNotificationAction) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *EmainNotificationAction) GetArchive() string {
	if m != nil {
		return m.Archive
	}
	return ""
}

type SendSMSAction struct {
	Notifier             string   `protobuf:"bytes,1,opt,name=notifier" json:"notifier,omitempty"`
	Recipient            string   `protobuf:"bytes,2,opt,name=recipient" json:"recipient,omitempty"`
	MsgText              string   `protobuf:"bytes,4,opt,name=msg_text,json=msgText" json:"msg_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSMSAction) Reset()         { *m = SendSMSAction{} }
func (m *SendSMSAction) String() string { return proto.CompactTextString(m) }
func (*SendSMSAction) ProtoMessage()    {}
func (*SendSMSAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{29}
}
func (m *SendSMSAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendSMSAction.Unmarshal(m, b)
}
func (m *SendSMSAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendSMSAction.Marshal(b, m, deterministic)
}
func (dst *SendSMSAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSMSAction.Merge(dst, src)
}
func (m *SendSMSAction) XXX_Size() int {
	return xxx_messageInfo_SendSMSAction.Size(m)
}
func (m *SendSMSAction) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSMSAction.DiscardUnknown(m)
}

var xxx_messageInfo_SendSMSAction proto.InternalMessageInfo

func (m *SendSMSAction) GetNotifier() string {
	if m != nil {
		return m.Notifier
	}
	return ""
}

func (m *SendSMSAction) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *SendSMSAction) GetMsgText() string {
	if m != nil {
		return m.MsgText
	}
	return ""
}

type GuiAction struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	CancelData           string   `protobuf:"bytes,3,opt,name=cancel_data,json=cancelData" json:"cancel_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuiAction) Reset()         { *m = GuiAction{} }
func (m *GuiAction) String() string { return proto.CompactTextString(m) }
func (*GuiAction) ProtoMessage()    {}
func (*GuiAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{30}
}
func (m *GuiAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuiAction.Unmarshal(m, b)
}
func (m *GuiAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuiAction.Marshal(b, m, deterministic)
}
func (dst *GuiAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuiAction.Merge(dst, src)
}
func (m *GuiAction) XXX_Size() int {
	return xxx_messageInfo_GuiAction.Size(m)
}
func (m *GuiAction) XXX_DiscardUnknown() {
	xxx_messageInfo_GuiAction.DiscardUnknown(m)
}

var xxx_messageInfo_GuiAction proto.InternalMessageInfo

func (m *GuiAction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GuiAction) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *GuiAction) GetCancelData() string {
	if m != nil {
		return m.CancelData
	}
	return ""
}

type WebQueryAction struct {
	Method               WebQueryAction_EQueryMethod `protobuf:"varint,1,opt,name=method,enum=axxonsoft.bl.logic.WebQueryAction_EQueryMethod" json:"method,omitempty"`
	Proto                WebQueryAction_EQueryProto  `protobuf:"varint,2,opt,name=proto,enum=axxonsoft.bl.logic.WebQueryAction_EQueryProto" json:"proto,omitempty"`
	Host                 string                      `protobuf:"bytes,3,opt,name=Host" json:"Host,omitempty"`
	Port                 uint32                      `protobuf:"varint,4,opt,name=Port" json:"Port,omitempty"`
	Path                 string                      `protobuf:"bytes,5,opt,name=Path" json:"Path,omitempty"`
	Body                 string                      `protobuf:"bytes,6,opt,name=Body" json:"Body,omitempty"`
	Login                string                      `protobuf:"bytes,7,opt,name=Login" json:"Login,omitempty"`
	Password             string                      `protobuf:"bytes,8,opt,name=Password" json:"Password,omitempty"`
	Auth                 WebQueryAction_EAuthMethod  `protobuf:"varint,9,opt,name=Auth,enum=axxonsoft.bl.logic.WebQueryAction_EAuthMethod" json:"Auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WebQueryAction) Reset()         { *m = WebQueryAction{} }
func (m *WebQueryAction) String() string { return proto.CompactTextString(m) }
func (*WebQueryAction) ProtoMessage()    {}
func (*WebQueryAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{31}
}
func (m *WebQueryAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebQueryAction.Unmarshal(m, b)
}
func (m *WebQueryAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebQueryAction.Marshal(b, m, deterministic)
}
func (dst *WebQueryAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebQueryAction.Merge(dst, src)
}
func (m *WebQueryAction) XXX_Size() int {
	return xxx_messageInfo_WebQueryAction.Size(m)
}
func (m *WebQueryAction) XXX_DiscardUnknown() {
	xxx_messageInfo_WebQueryAction.DiscardUnknown(m)
}

var xxx_messageInfo_WebQueryAction proto.InternalMessageInfo

func (m *WebQueryAction) GetMethod() WebQueryAction_EQueryMethod {
	if m != nil {
		return m.Method
	}
	return WebQueryAction_QM_POST
}

func (m *WebQueryAction) GetProto() WebQueryAction_EQueryProto {
	if m != nil {
		return m.Proto
	}
	return WebQueryAction_QP_HTTP
}

func (m *WebQueryAction) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *WebQueryAction) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *WebQueryAction) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *WebQueryAction) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *WebQueryAction) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *WebQueryAction) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *WebQueryAction) GetAuth() WebQueryAction_EAuthMethod {
	if m != nil {
		return m.Auth
	}
	return WebQueryAction_AM_BASIC
}

type ArmStateAction struct {
	Zone                 string   `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	NewState             bool     `protobuf:"varint,2,opt,name=new_state,json=newState" json:"new_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArmStateAction) Reset()         { *m = ArmStateAction{} }
func (m *ArmStateAction) String() string { return proto.CompactTextString(m) }
func (*ArmStateAction) ProtoMessage()    {}
func (*ArmStateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{32}
}
func (m *ArmStateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArmStateAction.Unmarshal(m, b)
}
func (m *ArmStateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArmStateAction.Marshal(b, m, deterministic)
}
func (dst *ArmStateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArmStateAction.Merge(dst, src)
}
func (m *ArmStateAction) XXX_Size() int {
	return xxx_messageInfo_ArmStateAction.Size(m)
}
func (m *ArmStateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ArmStateAction.DiscardUnknown(m)
}

var xxx_messageInfo_ArmStateAction proto.InternalMessageInfo

func (m *ArmStateAction) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ArmStateAction) GetNewState() bool {
	if m != nil {
		return m.NewState
	}
	return false
}

type MMExportAction struct {
	ExportAgent          string                    `protobuf:"bytes,1,opt,name=export_agent,json=exportAgent" json:"export_agent,omitempty"`
	Mode                 MMExportAction_ExportMode `protobuf:"varint,2,opt,name=mode,enum=axxonsoft.bl.logic.MMExportAction_ExportMode" json:"mode,omitempty"`
	Timezone             string                    `protobuf:"bytes,3,opt,name=timezone" json:"timezone,omitempty"`
	SpanMs               int32                     `protobuf:"varint,4,opt,name=span_ms,json=spanMs" json:"span_ms,omitempty"`
	OffsetMs             int32                     `protobuf:"varint,5,opt,name=offset_ms,json=offsetMs" json:"offset_ms,omitempty"`
	Camera               string                    `protobuf:"bytes,6,opt,name=camera" json:"camera,omitempty"`
	Archive              string                    `protobuf:"bytes,7,opt,name=archive" json:"archive,omitempty"`
	FilenameFormat       string                    `protobuf:"bytes,8,opt,name=filename_format,json=filenameFormat" json:"filename_format,omitempty"`
	CommentFormat        string                    `protobuf:"bytes,9,opt,name=comment_format,json=commentFormat" json:"comment_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MMExportAction) Reset()         { *m = MMExportAction{} }
func (m *MMExportAction) String() string { return proto.CompactTextString(m) }
func (*MMExportAction) ProtoMessage()    {}
func (*MMExportAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{33}
}
func (m *MMExportAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MMExportAction.Unmarshal(m, b)
}
func (m *MMExportAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MMExportAction.Marshal(b, m, deterministic)
}
func (dst *MMExportAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MMExportAction.Merge(dst, src)
}
func (m *MMExportAction) XXX_Size() int {
	return xxx_messageInfo_MMExportAction.Size(m)
}
func (m *MMExportAction) XXX_DiscardUnknown() {
	xxx_messageInfo_MMExportAction.DiscardUnknown(m)
}

var xxx_messageInfo_MMExportAction proto.InternalMessageInfo

func (m *MMExportAction) GetExportAgent() string {
	if m != nil {
		return m.ExportAgent
	}
	return ""
}

func (m *MMExportAction) GetMode() MMExportAction_ExportMode {
	if m != nil {
		return m.Mode
	}
	return MMExportAction_EM_NONE
}

func (m *MMExportAction) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *MMExportAction) GetSpanMs() int32 {
	if m != nil {
		return m.SpanMs
	}
	return 0
}

func (m *MMExportAction) GetOffsetMs() int32 {
	if m != nil {
		return m.OffsetMs
	}
	return 0
}

func (m *MMExportAction) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *MMExportAction) GetArchive() string {
	if m != nil {
		return m.Archive
	}
	return ""
}

func (m *MMExportAction) GetFilenameFormat() string {
	if m != nil {
		return m.FilenameFormat
	}
	return ""
}

func (m *MMExportAction) GetCommentFormat() string {
	if m != nil {
		return m.CommentFormat
	}
	return ""
}

type SpecialAction struct {
	Script               string   `protobuf:"bytes,1,opt,name=script" json:"script,omitempty"`
	Server               string   `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	Arguments            string   `protobuf:"bytes,3,opt,name=arguments" json:"arguments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecialAction) Reset()         { *m = SpecialAction{} }
func (m *SpecialAction) String() string { return proto.CompactTextString(m) }
func (*SpecialAction) ProtoMessage()    {}
func (*SpecialAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{34}
}
func (m *SpecialAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialAction.Unmarshal(m, b)
}
func (m *SpecialAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialAction.Marshal(b, m, deterministic)
}
func (dst *SpecialAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialAction.Merge(dst, src)
}
func (m *SpecialAction) XXX_Size() int {
	return xxx_messageInfo_SpecialAction.Size(m)
}
func (m *SpecialAction) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialAction.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialAction proto.InternalMessageInfo

func (m *SpecialAction) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *SpecialAction) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *SpecialAction) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

type ReplicationAction struct {
	Mode                 ReplicationAction_EMode `protobuf:"varint,1,opt,name=mode,enum=axxonsoft.bl.logic.ReplicationAction_EMode" json:"mode,omitempty"`
	TimezoneId           string                  `protobuf:"bytes,2,opt,name=timezone_id,json=timezoneId" json:"timezone_id,omitempty"`
	SpanMs               int32                   `protobuf:"varint,3,opt,name=span_ms,json=spanMs" json:"span_ms,omitempty"`
	OffsetMs             int32                   `protobuf:"varint,4,opt,name=offset_ms,json=offsetMs" json:"offset_ms,omitempty"`
	Camera               string                  `protobuf:"bytes,5,opt,name=camera" json:"camera,omitempty"`
	Archive              string                  `protobuf:"bytes,6,opt,name=archive" json:"archive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ReplicationAction) Reset()         { *m = ReplicationAction{} }
func (m *ReplicationAction) String() string { return proto.CompactTextString(m) }
func (*ReplicationAction) ProtoMessage()    {}
func (*ReplicationAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{35}
}
func (m *ReplicationAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationAction.Unmarshal(m, b)
}
func (m *ReplicationAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationAction.Marshal(b, m, deterministic)
}
func (dst *ReplicationAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationAction.Merge(dst, src)
}
func (m *ReplicationAction) XXX_Size() int {
	return xxx_messageInfo_ReplicationAction.Size(m)
}
func (m *ReplicationAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationAction.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationAction proto.InternalMessageInfo

func (m *ReplicationAction) GetMode() ReplicationAction_EMode {
	if m != nil {
		return m.Mode
	}
	return ReplicationAction_RM_TIMEZONE_FRAGMENT
}

func (m *ReplicationAction) GetTimezoneId() string {
	if m != nil {
		return m.TimezoneId
	}
	return ""
}

func (m *ReplicationAction) GetSpanMs() int32 {
	if m != nil {
		return m.SpanMs
	}
	return 0
}

func (m *ReplicationAction) GetOffsetMs() int32 {
	if m != nil {
		return m.OffsetMs
	}
	return 0
}

func (m *ReplicationAction) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *ReplicationAction) GetArchive() string {
	if m != nil {
		return m.Archive
	}
	return ""
}

type ServiceStateAction struct {
	Service              string   `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Enable               bool     `protobuf:"varint,2,opt,name=enable" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceStateAction) Reset()         { *m = ServiceStateAction{} }
func (m *ServiceStateAction) String() string { return proto.CompactTextString(m) }
func (*ServiceStateAction) ProtoMessage()    {}
func (*ServiceStateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{36}
}
func (m *ServiceStateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStateAction.Unmarshal(m, b)
}
func (m *ServiceStateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStateAction.Marshal(b, m, deterministic)
}
func (dst *ServiceStateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStateAction.Merge(dst, src)
}
func (m *ServiceStateAction) XXX_Size() int {
	return xxx_messageInfo_ServiceStateAction.Size(m)
}
func (m *ServiceStateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStateAction.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStateAction proto.InternalMessageInfo

func (m *ServiceStateAction) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ServiceStateAction) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type ConfigureAction struct {
	Configurable         string             `protobuf:"bytes,1,opt,name=configurable" json:"configurable,omitempty"`
	Properties           []*config.Property `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ConfigureAction) Reset()         { *m = ConfigureAction{} }
func (m *ConfigureAction) String() string { return proto.CompactTextString(m) }
func (*ConfigureAction) ProtoMessage()    {}
func (*ConfigureAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{37}
}
func (m *ConfigureAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigureAction.Unmarshal(m, b)
}
func (m *ConfigureAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigureAction.Marshal(b, m, deterministic)
}
func (dst *ConfigureAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureAction.Merge(dst, src)
}
func (m *ConfigureAction) XXX_Size() int {
	return xxx_messageInfo_ConfigureAction.Size(m)
}
func (m *ConfigureAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureAction.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureAction proto.InternalMessageInfo

func (m *ConfigureAction) GetConfigurable() string {
	if m != nil {
		return m.Configurable
	}
	return ""
}

func (m *ConfigureAction) GetProperties() []*config.Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

type InvokeMacroAction struct {
	Macro                string   `protobuf:"bytes,1,opt,name=macro" json:"macro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeMacroAction) Reset()         { *m = InvokeMacroAction{} }
func (m *InvokeMacroAction) String() string { return proto.CompactTextString(m) }
func (*InvokeMacroAction) ProtoMessage()    {}
func (*InvokeMacroAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{38}
}
func (m *InvokeMacroAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeMacroAction.Unmarshal(m, b)
}
func (m *InvokeMacroAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeMacroAction.Marshal(b, m, deterministic)
}
func (dst *InvokeMacroAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeMacroAction.Merge(dst, src)
}
func (m *InvokeMacroAction) XXX_Size() int {
	return xxx_messageInfo_InvokeMacroAction.Size(m)
}
func (m *InvokeMacroAction) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeMacroAction.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeMacroAction proto.InternalMessageInfo

func (m *InvokeMacroAction) GetMacro() string {
	if m != nil {
		return m.Macro
	}
	return ""
}

type GroupAction struct {
	Group  string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Random bool   `protobuf:"varint,2,opt,name=random" json:"random,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*GroupAction_WriteArchive
	//	*GroupAction_RaiseAlert
	//	*GroupAction_EmailNotification
	//	*GroupAction_ArmState
	//	*GroupAction_Export
	//	*GroupAction_Replication
	//	*GroupAction_CloseAlert
	Action               isGroupAction_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GroupAction) Reset()         { *m = GroupAction{} }
func (m *GroupAction) String() string { return proto.CompactTextString(m) }
func (*GroupAction) ProtoMessage()    {}
func (*GroupAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{39}
}
func (m *GroupAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupAction.Unmarshal(m, b)
}
func (m *GroupAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupAction.Marshal(b, m, deterministic)
}
func (dst *GroupAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupAction.Merge(dst, src)
}
func (m *GroupAction) XXX_Size() int {
	return xxx_messageInfo_GroupAction.Size(m)
}
func (m *GroupAction) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupAction.DiscardUnknown(m)
}

var xxx_messageInfo_GroupAction proto.InternalMessageInfo

type isGroupAction_Action interface {
	isGroupAction_Action()
}

type GroupAction_WriteArchive struct {
	WriteArchive *WriteArchiveAction `protobuf:"bytes,4,opt,name=write_archive,json=writeArchive,oneof"`
}
type GroupAction_RaiseAlert struct {
	RaiseAlert *RaiseAlertAction `protobuf:"bytes,5,opt,name=raise_alert,json=raiseAlert,oneof"`
}
type GroupAction_EmailNotification struct {
	EmailNotification *EmainNotificationAction `protobuf:"bytes,6,opt,name=email_notification,json=emailNotification,oneof"`
}
type GroupAction_ArmState struct {
	ArmState *ArmStateAction `protobuf:"bytes,7,opt,name=arm_state,json=armState,oneof"`
}
type GroupAction_Export struct {
	Export *MMExportAction `protobuf:"bytes,8,opt,name=export,oneof"`
}
type GroupAction_Replication struct {
	Replication *ReplicationAction `protobuf:"bytes,9,opt,name=replication,oneof"`
}
type GroupAction_CloseAlert struct {
	CloseAlert *CloseAlertAction `protobuf:"bytes,10,opt,name=close_alert,json=closeAlert,oneof"`
}

func (*GroupAction_WriteArchive) isGroupAction_Action()      {}
func (*GroupAction_RaiseAlert) isGroupAction_Action()        {}
func (*GroupAction_EmailNotification) isGroupAction_Action() {}
func (*GroupAction_ArmState) isGroupAction_Action()          {}
func (*GroupAction_Export) isGroupAction_Action()            {}
func (*GroupAction_Replication) isGroupAction_Action()       {}
func (*GroupAction_CloseAlert) isGroupAction_Action()        {}

func (m *GroupAction) GetAction() isGroupAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *GroupAction) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *GroupAction) GetRandom() bool {
	if m != nil {
		return m.Random
	}
	return false
}

func (m *GroupAction) GetWriteArchive() *WriteArchiveAction {
	if x, ok := m.GetAction().(*GroupAction_WriteArchive); ok {
		return x.WriteArchive
	}
	return nil
}

func (m *GroupAction) GetRaiseAlert() *RaiseAlertAction {
	if x, ok := m.GetAction().(*GroupAction_RaiseAlert); ok {
		return x.RaiseAlert
	}
	return nil
}

func (m *GroupAction) GetEmailNotification() *EmainNotificationAction {
	if x, ok := m.GetAction().(*GroupAction_EmailNotification); ok {
		return x.EmailNotification
	}
	return nil
}

func (m *GroupAction) GetArmState() *ArmStateAction {
	if x, ok := m.GetAction().(*GroupAction_ArmState); ok {
		return x.ArmState
	}
	return nil
}

func (m *GroupAction) GetExport() *MMExportAction {
	if x, ok := m.GetAction().(*GroupAction_Export); ok {
		return x.Export
	}
	return nil
}

func (m *GroupAction) GetReplication() *ReplicationAction {
	if x, ok := m.GetAction().(*GroupAction_Replication); ok {
		return x.Replication
	}
	return nil
}

func (m *GroupAction) GetCloseAlert() *CloseAlertAction {
	if x, ok := m.GetAction().(*GroupAction_CloseAlert); ok {
		return x.CloseAlert
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GroupAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GroupAction_OneofMarshaler, _GroupAction_OneofUnmarshaler, _GroupAction_OneofSizer, []interface{}{
		(*GroupAction_WriteArchive)(nil),
		(*GroupAction_RaiseAlert)(nil),
		(*GroupAction_EmailNotification)(nil),
		(*GroupAction_ArmState)(nil),
		(*GroupAction_Export)(nil),
		(*GroupAction_Replication)(nil),
		(*GroupAction_CloseAlert)(nil),
	}
}

func _GroupAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GroupAction)
	// action
	switch x := m.Action.(type) {
	case *GroupAction_WriteArchive:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WriteArchive); err != nil {
			return err
		}
	case *GroupAction_RaiseAlert:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RaiseAlert); err != nil {
			return err
		}
	case *GroupAction_EmailNotification:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmailNotification); err != nil {
			return err
		}
	case *GroupAction_ArmState:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ArmState); err != nil {
			return err
		}
	case *GroupAction_Export:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Export); err != nil {
			return err
		}
	case *GroupAction_Replication:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Replication); err != nil {
			return err
		}
	case *GroupAction_CloseAlert:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseAlert); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GroupAction.Action has unexpected type %T", x)
	}
	return nil
}

func _GroupAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GroupAction)
	switch tag {
	case 4: // action.write_archive
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WriteArchiveAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_WriteArchive{msg}
		return true, err
	case 5: // action.raise_alert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RaiseAlertAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_RaiseAlert{msg}
		return true, err
	case 6: // action.email_notification
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EmainNotificationAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_EmailNotification{msg}
		return true, err
	case 7: // action.arm_state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArmStateAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_ArmState{msg}
		return true, err
	case 8: // action.export
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MMExportAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_Export{msg}
		return true, err
	case 9: // action.replication
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplicationAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_Replication{msg}
		return true, err
	case 10: // action.close_alert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseAlertAction)
		err := b.DecodeMessage(msg)
		m.Action = &GroupAction_CloseAlert{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GroupAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GroupAction)
	// action
	switch x := m.Action.(type) {
	case *GroupAction_WriteArchive:
		s := proto.Size(x.WriteArchive)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GroupAction_RaiseAlert:
		s := proto.Size(x.RaiseAlert)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GroupAction_EmailNotification:
		s := proto.Size(x.EmailNotification)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GroupAction_ArmState:
		s := proto.Size(x.ArmState)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GroupAction_Export:
		s := proto.Size(x.Export)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GroupAction_Replication:
		s := proto.Size(x.Replication)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GroupAction_CloseAlert:
		s := proto.Size(x.CloseAlert)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Action struct {
	// Types that are valid to be assigned to Type:
	//	*Action_WriteArchive
	//	*Action_SwitchRelay
	//	*Action_GotoPtz
	//	*Action_VoiceNotification
	//	*Action_AudioNotification
	//	*Action_EmailNotification
	//	*Action_SendSms
	//	*Action_Gui
	//	*Action_Export
	//	*Action_Special
	//	*Action_Replication
	//	*Action_ServiceState
	//	*Action_WebQuery
	//	*Action_RaiseAlert
	//	*Action_ArmState
	//	*Action_Configure
	//	*Action_Macro
	//	*Action_Group
	//	*Action_CloseAlert
	Type                 isAction_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{40}
}
func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (dst *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(dst, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

type isAction_Type interface {
	isAction_Type()
}

type Action_WriteArchive struct {
	WriteArchive *WriteArchiveAction `protobuf:"bytes,4,opt,name=write_archive,json=writeArchive,oneof"`
}
type Action_SwitchRelay struct {
	SwitchRelay *SwitchRelayAction `protobuf:"bytes,5,opt,name=switch_relay,json=switchRelay,oneof"`
}
type Action_GotoPtz struct {
	GotoPtz *GotoPTZPresetAction `protobuf:"bytes,6,opt,name=goto_ptz,json=gotoPtz,oneof"`
}
type Action_VoiceNotification struct {
	VoiceNotification *VoiceNotificationAction `protobuf:"bytes,7,opt,name=voice_notification,json=voiceNotification,oneof"`
}
type Action_AudioNotification struct {
	AudioNotification *SinkAudioNotificationAction `protobuf:"bytes,8,opt,name=audio_notification,json=audioNotification,oneof"`
}
type Action_EmailNotification struct {
	EmailNotification *EmainNotificationAction `protobuf:"bytes,9,opt,name=email_notification,json=emailNotification,oneof"`
}
type Action_SendSms struct {
	SendSms *SendSMSAction `protobuf:"bytes,10,opt,name=send_sms,json=sendSms,oneof"`
}
type Action_Gui struct {
	Gui *GuiAction `protobuf:"bytes,11,opt,name=gui,oneof"`
}
type Action_Export struct {
	Export *MMExportAction `protobuf:"bytes,12,opt,name=export,oneof"`
}
type Action_Special struct {
	Special *SpecialAction `protobuf:"bytes,13,opt,name=special,oneof"`
}
type Action_Replication struct {
	Replication *ReplicationAction `protobuf:"bytes,14,opt,name=replication,oneof"`
}
type Action_ServiceState struct {
	ServiceState *ServiceStateAction `protobuf:"bytes,15,opt,name=service_state,json=serviceState,oneof"`
}
type Action_WebQuery struct {
	WebQuery *WebQueryAction `protobuf:"bytes,16,opt,name=web_query,json=webQuery,oneof"`
}
type Action_RaiseAlert struct {
	RaiseAlert *RaiseAlertAction `protobuf:"bytes,17,opt,name=raise_alert,json=raiseAlert,oneof"`
}
type Action_ArmState struct {
	ArmState *ArmStateAction `protobuf:"bytes,18,opt,name=arm_state,json=armState,oneof"`
}
type Action_Configure struct {
	Configure *ConfigureAction `protobuf:"bytes,19,opt,name=configure,oneof"`
}
type Action_Macro struct {
	Macro *InvokeMacroAction `protobuf:"bytes,20,opt,name=macro,oneof"`
}
type Action_Group struct {
	Group *GroupAction `protobuf:"bytes,21,opt,name=group,oneof"`
}
type Action_CloseAlert struct {
	CloseAlert *CloseAlertAction `protobuf:"bytes,22,opt,name=close_alert,json=closeAlert,oneof"`
}

func (*Action_WriteArchive) isAction_Type()      {}
func (*Action_SwitchRelay) isAction_Type()       {}
func (*Action_GotoPtz) isAction_Type()           {}
func (*Action_VoiceNotification) isAction_Type() {}
func (*Action_AudioNotification) isAction_Type() {}
func (*Action_EmailNotification) isAction_Type() {}
func (*Action_SendSms) isAction_Type()           {}
func (*Action_Gui) isAction_Type()               {}
func (*Action_Export) isAction_Type()            {}
func (*Action_Special) isAction_Type()           {}
func (*Action_Replication) isAction_Type()       {}
func (*Action_ServiceState) isAction_Type()      {}
func (*Action_WebQuery) isAction_Type()          {}
func (*Action_RaiseAlert) isAction_Type()        {}
func (*Action_ArmState) isAction_Type()          {}
func (*Action_Configure) isAction_Type()         {}
func (*Action_Macro) isAction_Type()             {}
func (*Action_Group) isAction_Type()             {}
func (*Action_CloseAlert) isAction_Type()        {}

func (m *Action) GetType() isAction_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Action) GetWriteArchive() *WriteArchiveAction {
	if x, ok := m.GetType().(*Action_WriteArchive); ok {
		return x.WriteArchive
	}
	return nil
}

func (m *Action) GetSwitchRelay() *SwitchRelayAction {
	if x, ok := m.GetType().(*Action_SwitchRelay); ok {
		return x.SwitchRelay
	}
	return nil
}

func (m *Action) GetGotoPtz() *GotoPTZPresetAction {
	if x, ok := m.GetType().(*Action_GotoPtz); ok {
		return x.GotoPtz
	}
	return nil
}

func (m *Action) GetVoiceNotification() *VoiceNotificationAction {
	if x, ok := m.GetType().(*Action_VoiceNotification); ok {
		return x.VoiceNotification
	}
	return nil
}

func (m *Action) GetAudioNotification() *SinkAudioNotificationAction {
	if x, ok := m.GetType().(*Action_AudioNotification); ok {
		return x.AudioNotification
	}
	return nil
}

func (m *Action) GetEmailNotification() *EmainNotificationAction {
	if x, ok := m.GetType().(*Action_EmailNotification); ok {
		return x.EmailNotification
	}
	return nil
}

func (m *Action) GetSendSms() *SendSMSAction {
	if x, ok := m.GetType().(*Action_SendSms); ok {
		return x.SendSms
	}
	return nil
}

func (m *Action) GetGui() *GuiAction {
	if x, ok := m.GetType().(*Action_Gui); ok {
		return x.Gui
	}
	return nil
}

func (m *Action) GetExport() *MMExportAction {
	if x, ok := m.GetType().(*Action_Export); ok {
		return x.Export
	}
	return nil
}

func (m *Action) GetSpecial() *SpecialAction {
	if x, ok := m.GetType().(*Action_Special); ok {
		return x.Special
	}
	return nil
}

func (m *Action) GetReplication() *ReplicationAction {
	if x, ok := m.GetType().(*Action_Replication); ok {
		return x.Replication
	}
	return nil
}

func (m *Action) GetServiceState() *ServiceStateAction {
	if x, ok := m.GetType().(*Action_ServiceState); ok {
		return x.ServiceState
	}
	return nil
}

func (m *Action) GetWebQuery() *WebQueryAction {
	if x, ok := m.GetType().(*Action_WebQuery); ok {
		return x.WebQuery
	}
	return nil
}

func (m *Action) GetRaiseAlert() *RaiseAlertAction {
	if x, ok := m.GetType().(*Action_RaiseAlert); ok {
		return x.RaiseAlert
	}
	return nil
}

func (m *Action) GetArmState() *ArmStateAction {
	if x, ok := m.GetType().(*Action_ArmState); ok {
		return x.ArmState
	}
	return nil
}

func (m *Action) GetConfigure() *ConfigureAction {
	if x, ok := m.GetType().(*Action_Configure); ok {
		return x.Configure
	}
	return nil
}

func (m *Action) GetMacro() *InvokeMacroAction {
	if x, ok := m.GetType().(*Action_Macro); ok {
		return x.Macro
	}
	return nil
}

func (m *Action) GetGroup() *GroupAction {
	if x, ok := m.GetType().(*Action_Group); ok {
		return x.Group
	}
	return nil
}

func (m *Action) GetCloseAlert() *CloseAlertAction {
	if x, ok := m.GetType().(*Action_CloseAlert); ok {
		return x.CloseAlert
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Action) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Action_OneofMarshaler, _Action_OneofUnmarshaler, _Action_OneofSizer, []interface{}{
		(*Action_WriteArchive)(nil),
		(*Action_SwitchRelay)(nil),
		(*Action_GotoPtz)(nil),
		(*Action_VoiceNotification)(nil),
		(*Action_AudioNotification)(nil),
		(*Action_EmailNotification)(nil),
		(*Action_SendSms)(nil),
		(*Action_Gui)(nil),
		(*Action_Export)(nil),
		(*Action_Special)(nil),
		(*Action_Replication)(nil),
		(*Action_ServiceState)(nil),
		(*Action_WebQuery)(nil),
		(*Action_RaiseAlert)(nil),
		(*Action_ArmState)(nil),
		(*Action_Configure)(nil),
		(*Action_Macro)(nil),
		(*Action_Group)(nil),
		(*Action_CloseAlert)(nil),
	}
}

func _Action_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Action)
	// type
	switch x := m.Type.(type) {
	case *Action_WriteArchive:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WriteArchive); err != nil {
			return err
		}
	case *Action_SwitchRelay:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SwitchRelay); err != nil {
			return err
		}
	case *Action_GotoPtz:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GotoPtz); err != nil {
			return err
		}
	case *Action_VoiceNotification:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoiceNotification); err != nil {
			return err
		}
	case *Action_AudioNotification:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AudioNotification); err != nil {
			return err
		}
	case *Action_EmailNotification:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmailNotification); err != nil {
			return err
		}
	case *Action_SendSms:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SendSms); err != nil {
			return err
		}
	case *Action_Gui:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gui); err != nil {
			return err
		}
	case *Action_Export:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Export); err != nil {
			return err
		}
	case *Action_Special:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Special); err != nil {
			return err
		}
	case *Action_Replication:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Replication); err != nil {
			return err
		}
	case *Action_ServiceState:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServiceState); err != nil {
			return err
		}
	case *Action_WebQuery:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WebQuery); err != nil {
			return err
		}
	case *Action_RaiseAlert:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RaiseAlert); err != nil {
			return err
		}
	case *Action_ArmState:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ArmState); err != nil {
			return err
		}
	case *Action_Configure:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Configure); err != nil {
			return err
		}
	case *Action_Macro:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Macro); err != nil {
			return err
		}
	case *Action_Group:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Group); err != nil {
			return err
		}
	case *Action_CloseAlert:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseAlert); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Action.Type has unexpected type %T", x)
	}
	return nil
}

func _Action_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Action)
	switch tag {
	case 4: // type.write_archive
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WriteArchiveAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_WriteArchive{msg}
		return true, err
	case 5: // type.switch_relay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SwitchRelayAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_SwitchRelay{msg}
		return true, err
	case 6: // type.goto_ptz
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GotoPTZPresetAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_GotoPtz{msg}
		return true, err
	case 7: // type.voice_notification
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VoiceNotificationAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_VoiceNotification{msg}
		return true, err
	case 8: // type.audio_notification
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SinkAudioNotificationAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_AudioNotification{msg}
		return true, err
	case 9: // type.email_notification
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EmainNotificationAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_EmailNotification{msg}
		return true, err
	case 10: // type.send_sms
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SendSMSAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_SendSms{msg}
		return true, err
	case 11: // type.gui
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GuiAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Gui{msg}
		return true, err
	case 12: // type.export
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MMExportAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Export{msg}
		return true, err
	case 13: // type.special
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SpecialAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Special{msg}
		return true, err
	case 14: // type.replication
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplicationAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Replication{msg}
		return true, err
	case 15: // type.service_state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceStateAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_ServiceState{msg}
		return true, err
	case 16: // type.web_query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WebQueryAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_WebQuery{msg}
		return true, err
	case 17: // type.raise_alert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RaiseAlertAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_RaiseAlert{msg}
		return true, err
	case 18: // type.arm_state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArmStateAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_ArmState{msg}
		return true, err
	case 19: // type.configure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigureAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Configure{msg}
		return true, err
	case 20: // type.macro
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InvokeMacroAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Macro{msg}
		return true, err
	case 21: // type.group
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GroupAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_Group{msg}
		return true, err
	case 22: // type.close_alert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseAlertAction)
		err := b.DecodeMessage(msg)
		m.Type = &Action_CloseAlert{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Action_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Action)
	// type
	switch x := m.Type.(type) {
	case *Action_WriteArchive:
		s := proto.Size(x.WriteArchive)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_SwitchRelay:
		s := proto.Size(x.SwitchRelay)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_GotoPtz:
		s := proto.Size(x.GotoPtz)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_VoiceNotification:
		s := proto.Size(x.VoiceNotification)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_AudioNotification:
		s := proto.Size(x.AudioNotification)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_EmailNotification:
		s := proto.Size(x.EmailNotification)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_SendSms:
		s := proto.Size(x.SendSms)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Gui:
		s := proto.Size(x.Gui)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Export:
		s := proto.Size(x.Export)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Special:
		s := proto.Size(x.Special)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Replication:
		s := proto.Size(x.Replication)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_ServiceState:
		s := proto.Size(x.ServiceState)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_WebQuery:
		s := proto.Size(x.WebQuery)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_RaiseAlert:
		s := proto.Size(x.RaiseAlert)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_ArmState:
		s := proto.Size(x.ArmState)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Configure:
		s := proto.Size(x.Configure)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Macro:
		s := proto.Size(x.Macro)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Group:
		s := proto.Size(x.Group)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_CloseAlert:
		s := proto.Size(x.CloseAlert)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RecordCheck struct {
	Camera               string                `protobuf:"bytes,1,opt,name=camera" json:"camera,omitempty"`
	Archive              string                `protobuf:"bytes,2,opt,name=archive" json:"archive,omitempty"`
	DepthMs              int32                 `protobuf:"varint,3,opt,name=depth_ms,json=depthMs" json:"depth_ms,omitempty"`
	Type                 RecordCheck_CheckType `protobuf:"varint,4,opt,name=type,enum=axxonsoft.bl.logic.RecordCheck_CheckType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RecordCheck) Reset()         { *m = RecordCheck{} }
func (m *RecordCheck) String() string { return proto.CompactTextString(m) }
func (*RecordCheck) ProtoMessage()    {}
func (*RecordCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{41}
}
func (m *RecordCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordCheck.Unmarshal(m, b)
}
func (m *RecordCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordCheck.Marshal(b, m, deterministic)
}
func (dst *RecordCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordCheck.Merge(dst, src)
}
func (m *RecordCheck) XXX_Size() int {
	return xxx_messageInfo_RecordCheck.Size(m)
}
func (m *RecordCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordCheck.DiscardUnknown(m)
}

var xxx_messageInfo_RecordCheck proto.InternalMessageInfo

func (m *RecordCheck) GetCamera() string {
	if m != nil {
		return m.Camera
	}
	return ""
}

func (m *RecordCheck) GetArchive() string {
	if m != nil {
		return m.Archive
	}
	return ""
}

func (m *RecordCheck) GetDepthMs() int32 {
	if m != nil {
		return m.DepthMs
	}
	return 0
}

func (m *RecordCheck) GetType() RecordCheck_CheckType {
	if m != nil {
		return m.Type
	}
	return RecordCheck_CT_CHECK_RECORD
}

type MacroCheckRule struct {
	Check                *RecordCheck         `protobuf:"bytes,1,opt,name=check" json:"check,omitempty"`
	SuccessRules         map[int32]*MacroRule `protobuf:"bytes,2,rep,name=success_rules,json=successRules" json:"success_rules,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FailureRules         map[int32]*MacroRule `protobuf:"bytes,3,rep,name=failure_rules,json=failureRules" json:"failure_rules,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MacroCheckRule) Reset()         { *m = MacroCheckRule{} }
func (m *MacroCheckRule) String() string { return proto.CompactTextString(m) }
func (*MacroCheckRule) ProtoMessage()    {}
func (*MacroCheckRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{42}
}
func (m *MacroCheckRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroCheckRule.Unmarshal(m, b)
}
func (m *MacroCheckRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroCheckRule.Marshal(b, m, deterministic)
}
func (dst *MacroCheckRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroCheckRule.Merge(dst, src)
}
func (m *MacroCheckRule) XXX_Size() int {
	return xxx_messageInfo_MacroCheckRule.Size(m)
}
func (m *MacroCheckRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroCheckRule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroCheckRule proto.InternalMessageInfo

func (m *MacroCheckRule) GetCheck() *RecordCheck {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *MacroCheckRule) GetSuccessRules() map[int32]*MacroRule {
	if m != nil {
		return m.SuccessRules
	}
	return nil
}

func (m *MacroCheckRule) GetFailureRules() map[int32]*MacroRule {
	if m != nil {
		return m.FailureRules
	}
	return nil
}

type MacroActionRule struct {
	TimeoutMs            int32                     `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	CancelConditions     map[int32]*MacroCondition `protobuf:"bytes,2,rep,name=cancel_conditions,json=cancelConditions" json:"cancel_conditions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Action               *Action                   `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MacroActionRule) Reset()         { *m = MacroActionRule{} }
func (m *MacroActionRule) String() string { return proto.CompactTextString(m) }
func (*MacroActionRule) ProtoMessage()    {}
func (*MacroActionRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{43}
}
func (m *MacroActionRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroActionRule.Unmarshal(m, b)
}
func (m *MacroActionRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroActionRule.Marshal(b, m, deterministic)
}
func (dst *MacroActionRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroActionRule.Merge(dst, src)
}
func (m *MacroActionRule) XXX_Size() int {
	return xxx_messageInfo_MacroActionRule.Size(m)
}
func (m *MacroActionRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroActionRule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroActionRule proto.InternalMessageInfo

func (m *MacroActionRule) GetTimeoutMs() int32 {
	if m != nil {
		return m.TimeoutMs
	}
	return 0
}

func (m *MacroActionRule) GetCancelConditions() map[int32]*MacroCondition {
	if m != nil {
		return m.CancelConditions
	}
	return nil
}

func (m *MacroActionRule) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type MacroWaitRule struct {
	TimeoutMs            int32                     `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	CancelConditions     map[int32]*MacroCondition `protobuf:"bytes,2,rep,name=cancel_conditions,json=cancelConditions" json:"cancel_conditions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EventRules           map[int32]*MacroRule      `protobuf:"bytes,3,rep,name=event_rules,json=eventRules" json:"event_rules,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TimeoutRules         map[int32]*MacroRule      `protobuf:"bytes,4,rep,name=timeout_rules,json=timeoutRules" json:"timeout_rules,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MacroWaitRule) Reset()         { *m = MacroWaitRule{} }
func (m *MacroWaitRule) String() string { return proto.CompactTextString(m) }
func (*MacroWaitRule) ProtoMessage()    {}
func (*MacroWaitRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{44}
}
func (m *MacroWaitRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroWaitRule.Unmarshal(m, b)
}
func (m *MacroWaitRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroWaitRule.Marshal(b, m, deterministic)
}
func (dst *MacroWaitRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroWaitRule.Merge(dst, src)
}
func (m *MacroWaitRule) XXX_Size() int {
	return xxx_messageInfo_MacroWaitRule.Size(m)
}
func (m *MacroWaitRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroWaitRule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroWaitRule proto.InternalMessageInfo

func (m *MacroWaitRule) GetTimeoutMs() int32 {
	if m != nil {
		return m.TimeoutMs
	}
	return 0
}

func (m *MacroWaitRule) GetCancelConditions() map[int32]*MacroCondition {
	if m != nil {
		return m.CancelConditions
	}
	return nil
}

func (m *MacroWaitRule) GetEventRules() map[int32]*MacroRule {
	if m != nil {
		return m.EventRules
	}
	return nil
}

func (m *MacroWaitRule) GetTimeoutRules() map[int32]*MacroRule {
	if m != nil {
		return m.TimeoutRules
	}
	return nil
}

type MacroAfterRule struct {
	Rules                map[int32]*MacroRule `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MacroAfterRule) Reset()         { *m = MacroAfterRule{} }
func (m *MacroAfterRule) String() string { return proto.CompactTextString(m) }
func (*MacroAfterRule) ProtoMessage()    {}
func (*MacroAfterRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{45}
}
func (m *MacroAfterRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroAfterRule.Unmarshal(m, b)
}
func (m *MacroAfterRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroAfterRule.Marshal(b, m, deterministic)
}
func (dst *MacroAfterRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroAfterRule.Merge(dst, src)
}
func (m *MacroAfterRule) XXX_Size() int {
	return xxx_messageInfo_MacroAfterRule.Size(m)
}
func (m *MacroAfterRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroAfterRule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroAfterRule proto.InternalMessageInfo

func (m *MacroAfterRule) GetRules() map[int32]*MacroRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type MacroTimeoutRule struct {
	TimeoutMs            int32    `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacroTimeoutRule) Reset()         { *m = MacroTimeoutRule{} }
func (m *MacroTimeoutRule) String() string { return proto.CompactTextString(m) }
func (*MacroTimeoutRule) ProtoMessage()    {}
func (*MacroTimeoutRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{46}
}
func (m *MacroTimeoutRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroTimeoutRule.Unmarshal(m, b)
}
func (m *MacroTimeoutRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroTimeoutRule.Marshal(b, m, deterministic)
}
func (dst *MacroTimeoutRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroTimeoutRule.Merge(dst, src)
}
func (m *MacroTimeoutRule) XXX_Size() int {
	return xxx_messageInfo_MacroTimeoutRule.Size(m)
}
func (m *MacroTimeoutRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroTimeoutRule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroTimeoutRule proto.InternalMessageInfo

func (m *MacroTimeoutRule) GetTimeoutMs() int32 {
	if m != nil {
		return m.TimeoutMs
	}
	return 0
}

type MacroRule struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*MacroRule_Action
	//	*MacroRule_Wait
	//	*MacroRule_After
	//	*MacroRule_Timeout
	//	*MacroRule_Check
	Type                 isMacroRule_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MacroRule) Reset()         { *m = MacroRule{} }
func (m *MacroRule) String() string { return proto.CompactTextString(m) }
func (*MacroRule) ProtoMessage()    {}
func (*MacroRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{47}
}
func (m *MacroRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroRule.Unmarshal(m, b)
}
func (m *MacroRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroRule.Marshal(b, m, deterministic)
}
func (dst *MacroRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroRule.Merge(dst, src)
}
func (m *MacroRule) XXX_Size() int {
	return xxx_messageInfo_MacroRule.Size(m)
}
func (m *MacroRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroRule.DiscardUnknown(m)
}

var xxx_messageInfo_MacroRule proto.InternalMessageInfo

type isMacroRule_Type interface {
	isMacroRule_Type()
}

type MacroRule_Action struct {
	Action *MacroActionRule `protobuf:"bytes,4,opt,name=action,oneof"`
}
type MacroRule_Wait struct {
	Wait *MacroWaitRule `protobuf:"bytes,5,opt,name=wait,oneof"`
}
type MacroRule_After struct {
	After *MacroAfterRule `protobuf:"bytes,6,opt,name=after,oneof"`
}
type MacroRule_Timeout struct {
	Timeout *MacroTimeoutRule `protobuf:"bytes,7,opt,name=timeout,oneof"`
}
type MacroRule_Check struct {
	Check *MacroCheckRule `protobuf:"bytes,8,opt,name=check,oneof"`
}

func (*MacroRule_Action) isMacroRule_Type()  {}
func (*MacroRule_Wait) isMacroRule_Type()    {}
func (*MacroRule_After) isMacroRule_Type()   {}
func (*MacroRule_Timeout) isMacroRule_Type() {}
func (*MacroRule_Check) isMacroRule_Type()   {}

func (m *MacroRule) GetType() isMacroRule_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MacroRule) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MacroRule) GetAction() *MacroActionRule {
	if x, ok := m.GetType().(*MacroRule_Action); ok {
		return x.Action
	}
	return nil
}

func (m *MacroRule) GetWait() *MacroWaitRule {
	if x, ok := m.GetType().(*MacroRule_Wait); ok {
		return x.Wait
	}
	return nil
}

func (m *MacroRule) GetAfter() *MacroAfterRule {
	if x, ok := m.GetType().(*MacroRule_After); ok {
		return x.After
	}
	return nil
}

func (m *MacroRule) GetTimeout() *MacroTimeoutRule {
	if x, ok := m.GetType().(*MacroRule_Timeout); ok {
		return x.Timeout
	}
	return nil
}

func (m *MacroRule) GetCheck() *MacroCheckRule {
	if x, ok := m.GetType().(*MacroRule_Check); ok {
		return x.Check
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MacroRule) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MacroRule_OneofMarshaler, _MacroRule_OneofUnmarshaler, _MacroRule_OneofSizer, []interface{}{
		(*MacroRule_Action)(nil),
		(*MacroRule_Wait)(nil),
		(*MacroRule_After)(nil),
		(*MacroRule_Timeout)(nil),
		(*MacroRule_Check)(nil),
	}
}

func _MacroRule_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MacroRule)
	// type
	switch x := m.Type.(type) {
	case *MacroRule_Action:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Action); err != nil {
			return err
		}
	case *MacroRule_Wait:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Wait); err != nil {
			return err
		}
	case *MacroRule_After:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.After); err != nil {
			return err
		}
	case *MacroRule_Timeout:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timeout); err != nil {
			return err
		}
	case *MacroRule_Check:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Check); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MacroRule.Type has unexpected type %T", x)
	}
	return nil
}

func _MacroRule_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MacroRule)
	switch tag {
	case 4: // type.action
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroActionRule)
		err := b.DecodeMessage(msg)
		m.Type = &MacroRule_Action{msg}
		return true, err
	case 5: // type.wait
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroWaitRule)
		err := b.DecodeMessage(msg)
		m.Type = &MacroRule_Wait{msg}
		return true, err
	case 6: // type.after
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroAfterRule)
		err := b.DecodeMessage(msg)
		m.Type = &MacroRule_After{msg}
		return true, err
	case 7: // type.timeout
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroTimeoutRule)
		err := b.DecodeMessage(msg)
		m.Type = &MacroRule_Timeout{msg}
		return true, err
	case 8: // type.check
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacroCheckRule)
		err := b.DecodeMessage(msg)
		m.Type = &MacroRule_Check{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MacroRule_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MacroRule)
	// type
	switch x := m.Type.(type) {
	case *MacroRule_Action:
		s := proto.Size(x.Action)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroRule_Wait:
		s := proto.Size(x.Wait)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroRule_After:
		s := proto.Size(x.After)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroRule_Timeout:
		s := proto.Size(x.Timeout)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MacroRule_Check:
		s := proto.Size(x.Check)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MacroConfig struct {
	// GUID in format 3303abb2-181e-4e83-8987-8a06c309a741
	Guid                 string                    `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	Name                 string                    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Mode                 *MacroMode                `protobuf:"bytes,3,opt,name=mode" json:"mode,omitempty"`
	Conditions           map[int32]*MacroCondition `protobuf:"bytes,4,rep,name=conditions" json:"conditions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Rules                map[int32]*MacroRule      `protobuf:"bytes,5,rep,name=rules" json:"rules,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MacroConfig) Reset()         { *m = MacroConfig{} }
func (m *MacroConfig) String() string { return proto.CompactTextString(m) }
func (*MacroConfig) ProtoMessage()    {}
func (*MacroConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{48}
}
func (m *MacroConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacroConfig.Unmarshal(m, b)
}
func (m *MacroConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacroConfig.Marshal(b, m, deterministic)
}
func (dst *MacroConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacroConfig.Merge(dst, src)
}
func (m *MacroConfig) XXX_Size() int {
	return xxx_messageInfo_MacroConfig.Size(m)
}
func (m *MacroConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MacroConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MacroConfig proto.InternalMessageInfo

func (m *MacroConfig) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *MacroConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MacroConfig) GetMode() *MacroMode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *MacroConfig) GetConditions() map[int32]*MacroCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *MacroConfig) GetRules() map[int32]*MacroRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type ListMacrosRequest struct {
	View                 ListMacrosRequest_EViewMode `protobuf:"varint,1,opt,name=view,enum=axxonsoft.bl.logic.ListMacrosRequest_EViewMode" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListMacrosRequest) Reset()         { *m = ListMacrosRequest{} }
func (m *ListMacrosRequest) String() string { return proto.CompactTextString(m) }
func (*ListMacrosRequest) ProtoMessage()    {}
func (*ListMacrosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{49}
}
func (m *ListMacrosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMacrosRequest.Unmarshal(m, b)
}
func (m *ListMacrosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMacrosRequest.Marshal(b, m, deterministic)
}
func (dst *ListMacrosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMacrosRequest.Merge(dst, src)
}
func (m *ListMacrosRequest) XXX_Size() int {
	return xxx_messageInfo_ListMacrosRequest.Size(m)
}
func (m *ListMacrosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMacrosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMacrosRequest proto.InternalMessageInfo

func (m *ListMacrosRequest) GetView() ListMacrosRequest_EViewMode {
	if m != nil {
		return m.View
	}
	return ListMacrosRequest_VIEW_MODE_STRIPPED
}

type ListMacrosResponse struct {
	Items                []*MacroConfig `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListMacrosResponse) Reset()         { *m = ListMacrosResponse{} }
func (m *ListMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*ListMacrosResponse) ProtoMessage()    {}
func (*ListMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{50}
}
func (m *ListMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMacrosResponse.Unmarshal(m, b)
}
func (m *ListMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMacrosResponse.Marshal(b, m, deterministic)
}
func (dst *ListMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMacrosResponse.Merge(dst, src)
}
func (m *ListMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_ListMacrosResponse.Size(m)
}
func (m *ListMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMacrosResponse proto.InternalMessageInfo

func (m *ListMacrosResponse) GetItems() []*MacroConfig {
	if m != nil {
		return m.Items
	}
	return nil
}

type BatchGetMacrosRequest struct {
	MacrosIds            []string `protobuf:"bytes,1,rep,name=macros_ids,json=macrosIds" json:"macros_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetMacrosRequest) Reset()         { *m = BatchGetMacrosRequest{} }
func (m *BatchGetMacrosRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetMacrosRequest) ProtoMessage()    {}
func (*BatchGetMacrosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{51}
}
func (m *BatchGetMacrosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetMacrosRequest.Unmarshal(m, b)
}
func (m *BatchGetMacrosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetMacrosRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetMacrosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetMacrosRequest.Merge(dst, src)
}
func (m *BatchGetMacrosRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetMacrosRequest.Size(m)
}
func (m *BatchGetMacrosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetMacrosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetMacrosRequest proto.InternalMessageInfo

func (m *BatchGetMacrosRequest) GetMacrosIds() []string {
	if m != nil {
		return m.MacrosIds
	}
	return nil
}

type BatchGetMacrosResponse struct {
	Items                []*MacroConfig `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	NotFoundMacros       []string       `protobuf:"bytes,2,rep,name=not_found_macros,json=notFoundMacros" json:"not_found_macros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BatchGetMacrosResponse) Reset()         { *m = BatchGetMacrosResponse{} }
func (m *BatchGetMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetMacrosResponse) ProtoMessage()    {}
func (*BatchGetMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{52}
}
func (m *BatchGetMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetMacrosResponse.Unmarshal(m, b)
}
func (m *BatchGetMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetMacrosResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetMacrosResponse.Merge(dst, src)
}
func (m *BatchGetMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetMacrosResponse.Size(m)
}
func (m *BatchGetMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetMacrosResponse proto.InternalMessageInfo

func (m *BatchGetMacrosResponse) GetItems() []*MacroConfig {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BatchGetMacrosResponse) GetNotFoundMacros() []string {
	if m != nil {
		return m.NotFoundMacros
	}
	return nil
}

type ChangeMacrosRequest struct {
	RemovedMacros        []string       `protobuf:"bytes,1,rep,name=removed_macros,json=removedMacros" json:"removed_macros,omitempty"`
	ModifiedMacros       []*MacroConfig `protobuf:"bytes,2,rep,name=modified_macros,json=modifiedMacros" json:"modified_macros,omitempty"`
	AddedMacros          []*MacroConfig `protobuf:"bytes,3,rep,name=added_macros,json=addedMacros" json:"added_macros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChangeMacrosRequest) Reset()         { *m = ChangeMacrosRequest{} }
func (m *ChangeMacrosRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeMacrosRequest) ProtoMessage()    {}
func (*ChangeMacrosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{53}
}
func (m *ChangeMacrosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeMacrosRequest.Unmarshal(m, b)
}
func (m *ChangeMacrosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeMacrosRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeMacrosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeMacrosRequest.Merge(dst, src)
}
func (m *ChangeMacrosRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeMacrosRequest.Size(m)
}
func (m *ChangeMacrosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeMacrosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeMacrosRequest proto.InternalMessageInfo

func (m *ChangeMacrosRequest) GetRemovedMacros() []string {
	if m != nil {
		return m.RemovedMacros
	}
	return nil
}

func (m *ChangeMacrosRequest) GetModifiedMacros() []*MacroConfig {
	if m != nil {
		return m.ModifiedMacros
	}
	return nil
}

func (m *ChangeMacrosRequest) GetAddedMacros() []*MacroConfig {
	if m != nil {
		return m.AddedMacros
	}
	return nil
}

type ChangeMacrosResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeMacrosResponse) Reset()         { *m = ChangeMacrosResponse{} }
func (m *ChangeMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeMacrosResponse) ProtoMessage()    {}
func (*ChangeMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{54}
}
func (m *ChangeMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeMacrosResponse.Unmarshal(m, b)
}
func (m *ChangeMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeMacrosResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeMacrosResponse.Merge(dst, src)
}
func (m *ChangeMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeMacrosResponse.Size(m)
}
func (m *ChangeMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeMacrosResponse proto.InternalMessageInfo

type ChangeArmStateRequest struct {
	CameraAp             string                                     `protobuf:"bytes,1,opt,name=camera_ap,json=cameraAp" json:"camera_ap,omitempty"`
	State                events.CameraArmStateEvent_ECameraArmState `protobuf:"varint,2,opt,name=state,enum=axxonsoft.bl.events.CameraArmStateEvent_ECameraArmState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *ChangeArmStateRequest) Reset()         { *m = ChangeArmStateRequest{} }
func (m *ChangeArmStateRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeArmStateRequest) ProtoMessage()    {}
func (*ChangeArmStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{55}
}
func (m *ChangeArmStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeArmStateRequest.Unmarshal(m, b)
}
func (m *ChangeArmStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeArmStateRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeArmStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeArmStateRequest.Merge(dst, src)
}
func (m *ChangeArmStateRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeArmStateRequest.Size(m)
}
func (m *ChangeArmStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeArmStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeArmStateRequest proto.InternalMessageInfo

func (m *ChangeArmStateRequest) GetCameraAp() string {
	if m != nil {
		return m.CameraAp
	}
	return ""
}

func (m *ChangeArmStateRequest) GetState() events.CameraArmStateEvent_ECameraArmState {
	if m != nil {
		return m.State
	}
	return events.CameraArmStateEvent_CS_Disarm
}

type ChangeArmStateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeArmStateResponse) Reset()         { *m = ChangeArmStateResponse{} }
func (m *ChangeArmStateResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeArmStateResponse) ProtoMessage()    {}
func (*ChangeArmStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{56}
}
func (m *ChangeArmStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeArmStateResponse.Unmarshal(m, b)
}
func (m *ChangeArmStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeArmStateResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeArmStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeArmStateResponse.Merge(dst, src)
}
func (m *ChangeArmStateResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeArmStateResponse.Size(m)
}
func (m *ChangeArmStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeArmStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeArmStateResponse proto.InternalMessageInfo

type RaiseAlertRequest struct {
	CameraAp             string   `protobuf:"bytes,1,opt,name=camera_ap,json=cameraAp" json:"camera_ap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaiseAlertRequest) Reset()         { *m = RaiseAlertRequest{} }
func (m *RaiseAlertRequest) String() string { return proto.CompactTextString(m) }
func (*RaiseAlertRequest) ProtoMessage()    {}
func (*RaiseAlertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{57}
}
func (m *RaiseAlertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaiseAlertRequest.Unmarshal(m, b)
}
func (m *RaiseAlertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaiseAlertRequest.Marshal(b, m, deterministic)
}
func (dst *RaiseAlertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaiseAlertRequest.Merge(dst, src)
}
func (m *RaiseAlertRequest) XXX_Size() int {
	return xxx_messageInfo_RaiseAlertRequest.Size(m)
}
func (m *RaiseAlertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RaiseAlertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RaiseAlertRequest proto.InternalMessageInfo

func (m *RaiseAlertRequest) GetCameraAp() string {
	if m != nil {
		return m.CameraAp
	}
	return ""
}

type AlertResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertResponse) Reset()         { *m = AlertResponse{} }
func (m *AlertResponse) String() string { return proto.CompactTextString(m) }
func (*AlertResponse) ProtoMessage()    {}
func (*AlertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{58}
}
func (m *AlertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertResponse.Unmarshal(m, b)
}
func (m *AlertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertResponse.Marshal(b, m, deterministic)
}
func (dst *AlertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertResponse.Merge(dst, src)
}
func (m *AlertResponse) XXX_Size() int {
	return xxx_messageInfo_AlertResponse.Size(m)
}
func (m *AlertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlertResponse proto.InternalMessageInfo

func (m *AlertResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type AlertRequest struct {
	CameraAp             string   `protobuf:"bytes,1,opt,name=camera_ap,json=cameraAp" json:"camera_ap,omitempty"`
	AlertId              string   `protobuf:"bytes,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertRequest) Reset()         { *m = AlertRequest{} }
func (m *AlertRequest) String() string { return proto.CompactTextString(m) }
func (*AlertRequest) ProtoMessage()    {}
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{59}
}
func (m *AlertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRequest.Unmarshal(m, b)
}
func (m *AlertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRequest.Marshal(b, m, deterministic)
}
func (dst *AlertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRequest.Merge(dst, src)
}
func (m *AlertRequest) XXX_Size() int {
	return xxx_messageInfo_AlertRequest.Size(m)
}
func (m *AlertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRequest proto.InternalMessageInfo

func (m *AlertRequest) GetCameraAp() string {
	if m != nil {
		return m.CameraAp
	}
	return ""
}

func (m *AlertRequest) GetAlertId() string {
	if m != nil {
		return m.AlertId
	}
	return ""
}

type CompleteAlertReviewRequest struct {
	Severity             events.AlertState_ESeverity `protobuf:"varint,1,opt,name=severity,enum=axxonsoft.bl.events.AlertState_ESeverity" json:"severity,omitempty"`
	Bookmark             *events.Bookmark            `protobuf:"bytes,2,opt,name=bookmark" json:"bookmark,omitempty"`
	CameraAp             string                      `protobuf:"bytes,3,opt,name=camera_ap,json=cameraAp" json:"camera_ap,omitempty"`
	AlertId              string                      `protobuf:"bytes,4,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CompleteAlertReviewRequest) Reset()         { *m = CompleteAlertReviewRequest{} }
func (m *CompleteAlertReviewRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteAlertReviewRequest) ProtoMessage()    {}
func (*CompleteAlertReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_LogicService_94d172c50bcb4680, []int{60}
}
func (m *CompleteAlertReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteAlertReviewRequest.Unmarshal(m, b)
}
func (m *CompleteAlertReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteAlertReviewRequest.Marshal(b, m, deterministic)
}
func (dst *CompleteAlertReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteAlertReviewRequest.Merge(dst, src)
}
func (m *CompleteAlertReviewRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteAlertReviewRequest.Size(m)
}
func (m *CompleteAlertReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteAlertReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteAlertReviewRequest proto.InternalMessageInfo

func (m *CompleteAlertReviewRequest) GetSeverity() events.AlertState_ESeverity {
	if m != nil {
		return m.Severity
	}
	return events.AlertState_SV_UNCLASSIFIED
}

func (m *CompleteAlertReviewRequest) GetBookmark() *events.Bookmark {
	if m != nil {
		return m.Bookmark
	}
	return nil
}

func (m *CompleteAlertReviewRequest) GetCameraAp() string {
	if m != nil {
		return m.CameraAp
	}
	return ""
}

func (m *CompleteAlertReviewRequest) GetAlertId() string {
	if m != nil {
		return m.AlertId
	}
	return ""
}

func init() {
	proto.RegisterType((*MacroModeCommon)(nil), "axxonsoft.bl.logic.MacroModeCommon")
	proto.RegisterType((*MacroModeTimeZone)(nil), "axxonsoft.bl.logic.MacroModeTimeZone")
	proto.RegisterType((*MacroModeAutorule)(nil), "axxonsoft.bl.logic.MacroModeAutorule")
	proto.RegisterType((*MacroModeContinuous)(nil), "axxonsoft.bl.logic.MacroModeContinuous")
	proto.RegisterType((*MacroMode)(nil), "axxonsoft.bl.logic.MacroMode")
	proto.RegisterType((*SpecialFilter)(nil), "axxonsoft.bl.logic.SpecialFilter")
	proto.RegisterType((*DetectorMacroCondition)(nil), "axxonsoft.bl.logic.DetectorMacroCondition")
	proto.RegisterType((*TimeZoneMacroCondition)(nil), "axxonsoft.bl.logic.TimeZoneMacroCondition")
	proto.RegisterType((*AlertMacroCondition)(nil), "axxonsoft.bl.logic.AlertMacroCondition")
	proto.RegisterType((*DeviceStateMacroCondition)(nil), "axxonsoft.bl.logic.DeviceStateMacroCondition")
	proto.RegisterType((*WriteArchiveMacroCondition)(nil), "axxonsoft.bl.logic.WriteArchiveMacroCondition")
	proto.RegisterType((*PtzMacroCondition)(nil), "axxonsoft.bl.logic.PtzMacroCondition")
	proto.RegisterType((*RelayMacroCondition)(nil), "axxonsoft.bl.logic.RelayMacroCondition")
	proto.RegisterType((*AuditMacroCondition)(nil), "axxonsoft.bl.logic.AuditMacroCondition")
	proto.RegisterMapType((map[string]string)(nil), "axxonsoft.bl.logic.AuditMacroCondition.DataEntry")
	proto.RegisterType((*VolumeHealthMacroCondition)(nil), "axxonsoft.bl.logic.VolumeHealthMacroCondition")
	proto.RegisterType((*TextEventCondition)(nil), "axxonsoft.bl.logic.TextEventCondition")
	proto.RegisterType((*ServerStateMacroCondition)(nil), "axxonsoft.bl.logic.ServerStateMacroCondition")
	proto.RegisterType((*ArmStateCondition)(nil), "axxonsoft.bl.logic.ArmStateCondition")
	proto.RegisterType((*RecognitionMacroCondition)(nil), "axxonsoft.bl.logic.RecognitionMacroCondition")
	proto.RegisterType((*StatisticsCondition)(nil), "axxonsoft.bl.logic.StatisticsCondition")
	proto.RegisterType((*MacroCondition)(nil), "axxonsoft.bl.logic.MacroCondition")
	proto.RegisterType((*WriteArchiveAction)(nil), "axxonsoft.bl.logic.WriteArchiveAction")
	proto.RegisterType((*RaiseAlertAction)(nil), "axxonsoft.bl.logic.RaiseAlertAction")
	proto.RegisterType((*CloseAlertAction)(nil), "axxonsoft.bl.logic.CloseAlertAction")
	proto.RegisterType((*SwitchRelayAction)(nil), "axxonsoft.bl.logic.SwitchRelayAction")
	proto.RegisterType((*GotoPTZPresetAction)(nil), "axxonsoft.bl.logic.GotoPTZPresetAction")
	proto.RegisterType((*VoiceNotificationAction)(nil), "axxonsoft.bl.logic.VoiceNotificationAction")
	proto.RegisterType((*SinkAudioNotificationAction)(nil), "axxonsoft.bl.logic.SinkAudioNotificationAction")
	proto.RegisterType((*EmainNotificationAction)(nil), "axxonsoft.bl.logic.EmainNotificationAction")
	proto.RegisterType((*SendSMSAction)(nil), "axxonsoft.bl.logic.SendSMSAction")
	proto.RegisterType((*GuiAction)(nil), "axxonsoft.bl.logic.GuiAction")
	proto.RegisterType((*WebQueryAction)(nil), "axxonsoft.bl.logic.WebQueryAction")
	proto.RegisterType((*ArmStateAction)(nil), "axxonsoft.bl.logic.ArmStateAction")
	proto.RegisterType((*MMExportAction)(nil), "axxonsoft.bl.logic.MMExportAction")
	proto.RegisterType((*SpecialAction)(nil), "axxonsoft.bl.logic.SpecialAction")
	proto.RegisterType((*ReplicationAction)(nil), "axxonsoft.bl.logic.ReplicationAction")
	proto.RegisterType((*ServiceStateAction)(nil), "axxonsoft.bl.logic.ServiceStateAction")
	proto.RegisterType((*ConfigureAction)(nil), "axxonsoft.bl.logic.ConfigureAction")
	proto.RegisterType((*InvokeMacroAction)(nil), "axxonsoft.bl.logic.InvokeMacroAction")
	proto.RegisterType((*GroupAction)(nil), "axxonsoft.bl.logic.GroupAction")
	proto.RegisterType((*Action)(nil), "axxonsoft.bl.logic.Action")
	proto.RegisterType((*RecordCheck)(nil), "axxonsoft.bl.logic.RecordCheck")
	proto.RegisterType((*MacroCheckRule)(nil), "axxonsoft.bl.logic.MacroCheckRule")
	proto.RegisterMapType((map[int32]*MacroRule)(nil), "axxonsoft.bl.logic.MacroCheckRule.FailureRulesEntry")
	proto.RegisterMapType((map[int32]*MacroRule)(nil), "axxonsoft.bl.logic.MacroCheckRule.SuccessRulesEntry")
	proto.RegisterType((*MacroActionRule)(nil), "axxonsoft.bl.logic.MacroActionRule")
	proto.RegisterMapType((map[int32]*MacroCondition)(nil), "axxonsoft.bl.logic.MacroActionRule.CancelConditionsEntry")
	proto.RegisterType((*MacroWaitRule)(nil), "axxonsoft.bl.logic.MacroWaitRule")
	proto.RegisterMapType((map[int32]*MacroCondition)(nil), "axxonsoft.bl.logic.MacroWaitRule.CancelConditionsEntry")
	proto.RegisterMapType((map[int32]*MacroRule)(nil), "axxonsoft.bl.logic.MacroWaitRule.EventRulesEntry")
	proto.RegisterMapType((map[int32]*MacroRule)(nil), "axxonsoft.bl.logic.MacroWaitRule.TimeoutRulesEntry")
	proto.RegisterType((*MacroAfterRule)(nil), "axxonsoft.bl.logic.MacroAfterRule")
	proto.RegisterMapType((map[int32]*MacroRule)(nil), "axxonsoft.bl.logic.MacroAfterRule.RulesEntry")
	proto.RegisterType((*MacroTimeoutRule)(nil), "axxonsoft.bl.logic.MacroTimeoutRule")
	proto.RegisterType((*MacroRule)(nil), "axxonsoft.bl.logic.MacroRule")
	proto.RegisterType((*MacroConfig)(nil), "axxonsoft.bl.logic.MacroConfig")
	proto.RegisterMapType((map[int32]*MacroCondition)(nil), "axxonsoft.bl.logic.MacroConfig.ConditionsEntry")
	proto.RegisterMapType((map[int32]*MacroRule)(nil), "axxonsoft.bl.logic.MacroConfig.RulesEntry")
	proto.RegisterType((*ListMacrosRequest)(nil), "axxonsoft.bl.logic.ListMacrosRequest")
	proto.RegisterType((*ListMacrosResponse)(nil), "axxonsoft.bl.logic.ListMacrosResponse")
	proto.RegisterType((*BatchGetMacrosRequest)(nil), "axxonsoft.bl.logic.BatchGetMacrosRequest")
	proto.RegisterType((*BatchGetMacrosResponse)(nil), "axxonsoft.bl.logic.BatchGetMacrosResponse")
	proto.RegisterType((*ChangeMacrosRequest)(nil), "axxonsoft.bl.logic.ChangeMacrosRequest")
	proto.RegisterType((*ChangeMacrosResponse)(nil), "axxonsoft.bl.logic.ChangeMacrosResponse")
	proto.RegisterType((*ChangeArmStateRequest)(nil), "axxonsoft.bl.logic.ChangeArmStateRequest")
	proto.RegisterType((*ChangeArmStateResponse)(nil), "axxonsoft.bl.logic.ChangeArmStateResponse")
	proto.RegisterType((*RaiseAlertRequest)(nil), "axxonsoft.bl.logic.RaiseAlertRequest")
	proto.RegisterType((*AlertResponse)(nil), "axxonsoft.bl.logic.AlertResponse")
	proto.RegisterType((*AlertRequest)(nil), "axxonsoft.bl.logic.AlertRequest")
	proto.RegisterType((*CompleteAlertReviewRequest)(nil), "axxonsoft.bl.logic.CompleteAlertReviewRequest")
	proto.RegisterEnum("axxonsoft.bl.logic.TimeZoneMacroCondition_ETimezonesBoundary", TimeZoneMacroCondition_ETimezonesBoundary_name, TimeZoneMacroCondition_ETimezonesBoundary_value)
	proto.RegisterEnum("axxonsoft.bl.logic.AlertMacroCondition_EAlertCase", AlertMacroCondition_EAlertCase_name, AlertMacroCondition_EAlertCase_value)
	proto.RegisterEnum("axxonsoft.bl.logic.ServerStateMacroCondition_ServerState", ServerStateMacroCondition_ServerState_name, ServerStateMacroCondition_ServerState_value)
	proto.RegisterEnum("axxonsoft.bl.logic.RecognitionMacroCondition_DetectionType", RecognitionMacroCondition_DetectionType_name, RecognitionMacroCondition_DetectionType_value)
	proto.RegisterEnum("axxonsoft.bl.logic.StatisticsCondition_Trend", StatisticsCondition_Trend_name, StatisticsCondition_Trend_value)
	proto.RegisterEnum("axxonsoft.bl.logic.RaiseAlertAction_RaiseAlertMode", RaiseAlertAction_RaiseAlertMode_name, RaiseAlertAction_RaiseAlertMode_value)
	proto.RegisterEnum("axxonsoft.bl.logic.CloseAlertAction_Resolution", CloseAlertAction_Resolution_name, CloseAlertAction_Resolution_value)
	proto.RegisterEnum("axxonsoft.bl.logic.SwitchRelayAction_SwitchDirective", SwitchRelayAction_SwitchDirective_name, SwitchRelayAction_SwitchDirective_value)
	proto.RegisterEnum("axxonsoft.bl.logic.WebQueryAction_EQueryMethod", WebQueryAction_EQueryMethod_name, WebQueryAction_EQueryMethod_value)
	proto.RegisterEnum("axxonsoft.bl.logic.WebQueryAction_EQueryProto", WebQueryAction_EQueryProto_name, WebQueryAction_EQueryProto_value)
	proto.RegisterEnum("axxonsoft.bl.logic.WebQueryAction_EAuthMethod", WebQueryAction_EAuthMethod_name, WebQueryAction_EAuthMethod_value)
	proto.RegisterEnum("axxonsoft.bl.logic.MMExportAction_ExportMode", MMExportAction_ExportMode_name, MMExportAction_ExportMode_value)
	proto.RegisterEnum("axxonsoft.bl.logic.ReplicationAction_EMode", ReplicationAction_EMode_name, ReplicationAction_EMode_value)
	proto.RegisterEnum("axxonsoft.bl.logic.RecordCheck_CheckType", RecordCheck_CheckType_name, RecordCheck_CheckType_value)
	proto.RegisterEnum("axxonsoft.bl.logic.ListMacrosRequest_EViewMode", ListMacrosRequest_EViewMode_name, ListMacrosRequest_EViewMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LogicService service

type LogicServiceClient interface {
	ListMacros(ctx context.Context, in *ListMacrosRequest, opts ...grpc.CallOption) (*ListMacrosResponse, error)
	BatchGetMacros(ctx context.Context, in *BatchGetMacrosRequest, opts ...grpc.CallOption) (*BatchGetMacrosResponse, error)
	ChangeMacros(ctx context.Context, in *ChangeMacrosRequest, opts ...grpc.CallOption) (*ChangeMacrosResponse, error)
	ChangeArmState(ctx context.Context, in *ChangeArmStateRequest, opts ...grpc.CallOption) (*ChangeArmStateResponse, error)
	RaiseAlert(ctx context.Context, in *RaiseAlertRequest, opts ...grpc.CallOption) (*AlertResponse, error)
	BeginAlertReview(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertResponse, error)
	CancelAlertReview(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertResponse, error)
	ContinueAlertReview(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertResponse, error)
	CompleteAlertReview(ctx context.Context, in *CompleteAlertReviewRequest, opts ...grpc.CallOption) (*AlertResponse, error)
}

type logicServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogicServiceClient(cc *grpc.ClientConn) LogicServiceClient {
	return &logicServiceClient{cc}
}

func (c *logicServiceClient) ListMacros(ctx context.Context, in *ListMacrosRequest, opts ...grpc.CallOption) (*ListMacrosResponse, error) {
	out := new(ListMacrosResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/ListMacros", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) BatchGetMacros(ctx context.Context, in *BatchGetMacrosRequest, opts ...grpc.CallOption) (*BatchGetMacrosResponse, error) {
	out := new(BatchGetMacrosResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/BatchGetMacros", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) ChangeMacros(ctx context.Context, in *ChangeMacrosRequest, opts ...grpc.CallOption) (*ChangeMacrosResponse, error) {
	out := new(ChangeMacrosResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/ChangeMacros", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) ChangeArmState(ctx context.Context, in *ChangeArmStateRequest, opts ...grpc.CallOption) (*ChangeArmStateResponse, error) {
	out := new(ChangeArmStateResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/ChangeArmState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) RaiseAlert(ctx context.Context, in *RaiseAlertRequest, opts ...grpc.CallOption) (*AlertResponse, error) {
	out := new(AlertResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/RaiseAlert", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) BeginAlertReview(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertResponse, error) {
	out := new(AlertResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/BeginAlertReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) CancelAlertReview(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertResponse, error) {
	out := new(AlertResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/CancelAlertReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) ContinueAlertReview(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertResponse, error) {
	out := new(AlertResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/ContinueAlertReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) CompleteAlertReview(ctx context.Context, in *CompleteAlertReviewRequest, opts ...grpc.CallOption) (*AlertResponse, error) {
	out := new(AlertResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.logic.LogicService/CompleteAlertReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LogicService service

type LogicServiceServer interface {
	ListMacros(context.Context, *ListMacrosRequest) (*ListMacrosResponse, error)
	BatchGetMacros(context.Context, *BatchGetMacrosRequest) (*BatchGetMacrosResponse, error)
	ChangeMacros(context.Context, *ChangeMacrosRequest) (*ChangeMacrosResponse, error)
	ChangeArmState(context.Context, *ChangeArmStateRequest) (*ChangeArmStateResponse, error)
	RaiseAlert(context.Context, *RaiseAlertRequest) (*AlertResponse, error)
	BeginAlertReview(context.Context, *AlertRequest) (*AlertResponse, error)
	CancelAlertReview(context.Context, *AlertRequest) (*AlertResponse, error)
	ContinueAlertReview(context.Context, *AlertRequest) (*AlertResponse, error)
	CompleteAlertReview(context.Context, *CompleteAlertReviewRequest) (*AlertResponse, error)
}

func RegisterLogicServiceServer(s *grpc.Server, srv LogicServiceServer) {
	s.RegisterService(&_LogicService_serviceDesc, srv)
}

func _LogicService_ListMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMacrosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).ListMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/ListMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).ListMacros(ctx, req.(*ListMacrosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_BatchGetMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetMacrosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).BatchGetMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/BatchGetMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).BatchGetMacros(ctx, req.(*BatchGetMacrosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_ChangeMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeMacrosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).ChangeMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/ChangeMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).ChangeMacros(ctx, req.(*ChangeMacrosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_ChangeArmState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeArmStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).ChangeArmState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/ChangeArmState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).ChangeArmState(ctx, req.(*ChangeArmStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_RaiseAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RaiseAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).RaiseAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/RaiseAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).RaiseAlert(ctx, req.(*RaiseAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_BeginAlertReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).BeginAlertReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/BeginAlertReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).BeginAlertReview(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_CancelAlertReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).CancelAlertReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/CancelAlertReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).CancelAlertReview(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_ContinueAlertReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).ContinueAlertReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/ContinueAlertReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).ContinueAlertReview(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_CompleteAlertReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteAlertReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).CompleteAlertReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.logic.LogicService/CompleteAlertReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).CompleteAlertReview(ctx, req.(*CompleteAlertReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.logic.LogicService",
	HandlerType: (*LogicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMacros",
			Handler:    _LogicService_ListMacros_Handler,
		},
		{
			MethodName: "BatchGetMacros",
			Handler:    _LogicService_BatchGetMacros_Handler,
		},
		{
			MethodName: "ChangeMacros",
			Handler:    _LogicService_ChangeMacros_Handler,
		},
		{
			MethodName: "ChangeArmState",
			Handler:    _LogicService_ChangeArmState_Handler,
		},
		{
			MethodName: "RaiseAlert",
			Handler:    _LogicService_RaiseAlert_Handler,
		},
		{
			MethodName: "BeginAlertReview",
			Handler:    _LogicService_BeginAlertReview_Handler,
		},
		{
			MethodName: "CancelAlertReview",
			Handler:    _LogicService_CancelAlertReview_Handler,
		},
		{
			MethodName: "ContinueAlertReview",
			Handler:    _LogicService_ContinueAlertReview_Handler,
		},
		{
			MethodName: "CompleteAlertReview",
			Handler:    _LogicService_CompleteAlertReview_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/logic/LogicService.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/logic/LogicService.proto", fileDescriptor_LogicService_94d172c50bcb4680)
}

var fileDescriptor_LogicService_94d172c50bcb4680 = []byte{
	// 4773 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x3b, 0x4d, 0x6c, 0x23, 0x59,
	0x5a, 0x2e, 0xff, 0x24, 0xf6, 0xe7, 0xd8, 0x71, 0x5e, 0xba, 0xd3, 0x69, 0xf7, 0x34, 0xdd, 0x5d,
	0x33, 0xbd, 0xdd, 0xd3, 0xec, 0x38, 0x74, 0x66, 0x96, 0x99, 0xe9, 0x9d, 0x66, 0xa7, 0x62, 0x57,
	0x62, 0xef, 0xc4, 0x8e, 0xbb, 0xec, 0xee, 0x66, 0x47, 0x0b, 0x45, 0xc5, 0xf5, 0xe2, 0x14, 0xed,
	0xaa, 0xf2, 0x54, 0x95, 0x93, 0xce, 0x48, 0x2b, 0xd0, 0x6a, 0xb5, 0x88, 0x03, 0x48, 0xc0, 0x5e,
	0x38, 0x20, 0x0e, 0x88, 0x2b, 0x48, 0x48, 0x88, 0xd3, 0x1e, 0x90, 0x38, 0xc1, 0x65, 0xd1, 0x4a,
	0x20, 0x8e, 0x48, 0x48, 0x08, 0x09, 0x71, 0xe3, 0x0c, 0x7a, 0x3f, 0xf5, 0x67, 0x57, 0x25, 0xa1,
	0x27, 0xc3, 0x25, 0xa9, 0xef, 0xab, 0xf7, 0x7d, 0xef, 0x7b, 0xdf, 0xfb, 0x7e, 0xdf, 0x2b, 0xc3,
	0x7d, 0xed, 0xf5, 0x6b, 0xdb, 0x72, 0xed, 0x23, 0x6f, 0xeb, 0x70, 0xb2, 0x35, 0xb1, 0xc7, 0xc6,
	0x68, 0x6b, 0x9f, 0xfc, 0x1d, 0x60, 0xe7, 0xc4, 0x18, 0xe1, 0xc6, 0xd4, 0xb1, 0x3d, 0x1b, 0xa1,
	0x60, 0x58, 0xe3, 0x70, 0xd2, 0xa0, 0xc3, 0xea, 0x6f, 0x8d, 0x6d, 0x7b, 0x3c, 0xc1, 0x5b, 0xda,
	0xd4, 0xd8, 0xd2, 0x2c, 0xcb, 0xf6, 0x34, 0xcf, 0xb0, 0x2d, 0x97, 0x51, 0xd4, 0xef, 0xc6, 0x18,
	0xe3, 0x13, 0x6c, 0x79, 0xee, 0x96, 0x4c, 0xff, 0xf1, 0x11, 0x8d, 0xd8, 0x88, 0x91, 0x6d, 0x1d,
	0x19, 0xe3, 0xad, 0x26, 0xfd, 0x37, 0x73, 0x28, 0xaf, 0x98, 0x0c, 0xe2, 0x1a, 0xac, 0x76, 0xb5,
	0x91, 0x63, 0x77, 0x6d, 0x1d, 0x37, 0x6d, 0xd3, 0xb4, 0x2d, 0xf1, 0x03, 0x58, 0x0b, 0x50, 0x43,
	0xc3, 0xc4, 0x9f, 0xdb, 0x16, 0x46, 0x77, 0xa0, 0xec, 0x19, 0x26, 0xfe, 0xd2, 0xb6, 0xb0, 0x6a,
	0xe8, 0x9b, 0xc2, 0x5d, 0xe1, 0x61, 0x49, 0x01, 0x1f, 0xd5, 0xd1, 0xc5, 0x2f, 0x22, 0x54, 0xd2,
	0xcc, 0xb3, 0x9d, 0xd9, 0x04, 0xa3, 0x1b, 0xb0, 0x4c, 0x29, 0xb4, 0x29, 0xa7, 0x58, 0x22, 0xa0,
	0x34, 0x45, 0x22, 0x54, 0x6c, 0x6b, 0x72, 0xa6, 0x1a, 0x47, 0xaa, 0xe6, 0x98, 0x58, 0xdf, 0xcc,
	0xde, 0x15, 0x1e, 0x16, 0x95, 0x32, 0x41, 0x76, 0x8e, 0x24, 0x82, 0x9a, 0x9f, 0x32, 0xb7, 0x30,
	0xe5, 0xef, 0x0a, 0xb0, 0x1e, 0x11, 0xde, 0xf2, 0x0c, 0x6b, 0x66, 0xcf, 0x5c, 0xb4, 0x01, 0x4b,
	0x2e, 0x76, 0x4e, 0xb0, 0xe3, 0x4f, 0xca, 0xa0, 0x79, 0x86, 0xd9, 0x79, 0x86, 0xe8, 0x1e, 0xac,
	0x1c, 0x63, 0xcd, 0xf1, 0x0e, 0xb1, 0xe6, 0xa9, 0xa6, 0x4b, 0xa7, 0x2c, 0x28, 0xe5, 0x00, 0xd7,
	0xa5, 0xbc, 0x1d, 0xcd, 0xd2, 0x6d, 0x73, 0x33, 0x4f, 0x25, 0xe6, 0x90, 0xf8, 0xa3, 0x1c, 0x94,
	0x02, 0x59, 0xd0, 0x26, 0x2c, 0x63, 0x4b, 0x3b, 0x9c, 0x60, 0xa6, 0xa9, 0xa2, 0xe2, 0x83, 0xe8,
	0x16, 0x94, 0x66, 0x2e, 0x76, 0x54, 0xc7, 0x9e, 0x60, 0x2e, 0x41, 0x91, 0x20, 0x14, 0x7b, 0x82,
	0xd1, 0xdb, 0x50, 0x35, 0x5c, 0x55, 0xd3, 0x75, 0xd5, 0xb3, 0x55, 0x13, 0x5b, 0x33, 0x2a, 0x41,
	0x51, 0x29, 0x1b, 0xae, 0xa4, 0xeb, 0x43, 0xbb, 0x8b, 0xad, 0x19, 0x7a, 0x0a, 0x4b, 0x23, 0xba,
	0x51, 0x54, 0x82, 0xf2, 0xf6, 0xdb, 0x8d, 0x45, 0x33, 0x6a, 0xcc, 0xed, 0x69, 0x3b, 0xa3, 0x70,
	0x22, 0xd4, 0x82, 0x12, 0x59, 0xb1, 0x4a, 0x96, 0xbc, 0x59, 0xa0, 0x1c, 0xee, 0x9f, 0xcb, 0xc1,
	0x37, 0x81, 0x76, 0x46, 0x29, 0x7a, 0xbe, 0x39, 0x34, 0xa1, 0xa8, 0xf1, 0x4d, 0xde, 0x5c, 0xba,
	0x04, 0x13, 0xdf, 0x22, 0x08, 0x13, 0x9f, 0x10, 0x75, 0x00, 0x46, 0xc1, 0xae, 0x6d, 0x2e, 0x53,
	0x36, 0x0f, 0x2e, 0x58, 0x8d, 0x3f, 0xbc, 0x9d, 0x51, 0x22, 0xc4, 0x3b, 0x4b, 0x90, 0xf7, 0xce,
	0xa6, 0x58, 0xfc, 0x87, 0x2c, 0x54, 0x06, 0x53, 0x3c, 0x32, 0xb4, 0xc9, 0xae, 0x31, 0xf1, 0xb0,
	0x83, 0x6a, 0x90, 0x7b, 0x85, 0xcf, 0xb8, 0x25, 0x90, 0x47, 0x84, 0x61, 0x65, 0x62, 0x9f, 0x62,
	0x47, 0x1d, 0x63, 0x4b, 0xc7, 0x0e, 0x55, 0x63, 0x75, 0xfb, 0xd3, 0xf8, 0xc4, 0xcc, 0xb7, 0x1a,
	0x2d, 0xec, 0xe1, 0x91, 0x67, 0x3b, 0xd4, 0xc7, 0x1a, 0xbb, 0xda, 0x08, 0x2b, 0x78, 0x64, 0x8f,
	0x2d, 0x83, 0x78, 0x92, 0x82, 0xdd, 0xd9, 0xc4, 0x6b, 0xc8, 0x7b, 0x94, 0x4f, 0x3b, 0xa3, 0x94,
	0x29, 0x5f, 0x06, 0xa2, 0xdb, 0x50, 0x62, 0xd3, 0x68, 0x63, 0xa6, 0xe8, 0x02, 0x59, 0x3c, 0x45,
	0x49, 0x63, 0x4c, 0xa4, 0x98, 0x4d, 0xa7, 0xa1, 0x14, 0xc5, 0x2b, 0x92, 0x42, 0x50, 0xca, 0x94,
	0x6f, 0x28, 0x05, 0x9b, 0x86, 0x48, 0x51, 0xa2, 0x52, 0x08, 0x4a, 0x91, 0xa2, 0xa4, 0x31, 0xde,
	0xa9, 0x00, 0x93, 0x59, 0x3d, 0xb4, 0x67, 0x96, 0x4e, 0x40, 0x36, 0x9a, 0x82, 0xe2, 0x3f, 0x09,
	0xb0, 0xe1, 0xcf, 0x4d, 0xf7, 0xa0, 0x69, 0x5b, 0x3a, 0x9d, 0x14, 0xdd, 0x06, 0xa0, 0xc2, 0xa9,
	0x44, 0xed, 0x5c, 0xbb, 0x25, 0x8a, 0x19, 0x9e, 0x4d, 0x31, 0x31, 0x73, 0xd7, 0x9e, 0x39, 0x23,
	0xea, 0xfa, 0xdc, 0xcc, 0x19, 0x42, 0x9a, 0xa2, 0x26, 0x14, 0x5c, 0x4f, 0xf3, 0x30, 0xb5, 0xee,
	0xea, 0xf6, 0x7b, 0x97, 0x58, 0xb3, 0x34, 0xc1, 0x8e, 0x37, 0x20, 0x44, 0x0a, 0xa3, 0x45, 0xdf,
	0x86, 0x65, 0x1d, 0x7b, 0x9a, 0x31, 0x71, 0x37, 0xf3, 0x77, 0x73, 0x0f, 0xcb, 0xdb, 0xf7, 0x92,
	0x2c, 0x27, 0x66, 0x0b, 0x8a, 0x4f, 0x21, 0xfe, 0x5c, 0x80, 0x0d, 0xdf, 0xae, 0xe7, 0x16, 0x76,
	0x51, 0xa0, 0x43, 0x87, 0x50, 0xa1, 0xda, 0xd1, 0x9c, 0x33, 0x75, 0xa4, 0xb9, 0xcc, 0x8b, 0xab,
	0xdb, 0x4f, 0x93, 0xa6, 0x4f, 0x9e, 0xa3, 0x21, 0x0f, 0x39, 0x3b, 0x77, 0x87, 0x73, 0x52, 0x56,
	0x7c, 0x9e, 0x4d, 0xcd, 0xc5, 0xe2, 0x07, 0x80, 0x16, 0xc7, 0xa0, 0x55, 0x28, 0x0f, 0x77, 0xd4,
	0x1d, 0x79, 0xaf, 0xd3, 0xeb, 0xf4, 0xf6, 0x6a, 0x19, 0x54, 0x81, 0xd2, 0x70, 0x47, 0x95, 0x7b,
	0x2d, 0x02, 0x0a, 0xe2, 0xdf, 0x66, 0x61, 0x9d, 0x2a, 0x6a, 0x6e, 0x49, 0xa9, 0x51, 0xf8, 0x19,
	0x80, 0x46, 0xc6, 0x47, 0xd7, 0xb1, 0x9d, 0xb4, 0x8e, 0x04, 0xae, 0x0d, 0x99, 0x22, 0x89, 0xb8,
	0x4a, 0x49, 0xf3, 0x1f, 0xc5, 0x9f, 0x0a, 0x00, 0xe1, 0x1b, 0x74, 0x0d, 0x6a, 0x52, 0x53, 0x95,
	0xf6, 0x65, 0x65, 0xa8, 0x3e, 0xef, 0x7d, 0xd6, 0x3b, 0x78, 0xd9, 0xab, 0x65, 0xd0, 0x3a, 0xac,
	0x06, 0x58, 0x45, 0xea, 0x0c, 0xe4, 0x56, 0x4d, 0x40, 0x08, 0xaa, 0x01, 0x72, 0x28, 0x7d, 0x26,
	0xf7, 0x6a, 0xd9, 0xd8, 0xc0, 0xe6, 0xfe, 0x01, 0x19, 0x98, 0x8f, 0x21, 0xbb, 0x9d, 0x01, 0x41,
	0x16, 0xd1, 0x75, 0x58, 0x0b, 0x90, 0x6d, 0x49, 0xe9, 0xee, 0xcb, 0x83, 0x41, 0xad, 0x86, 0x6e,
	0xc0, 0x7a, 0x80, 0x1e, 0x3c, 0x1f, 0xf4, 0x3b, 0xcd, 0xce, 0xc1, 0xf3, 0x41, 0xed, 0x2e, 0xda,
	0x00, 0x14, 0xbc, 0x68, 0x49, 0xbd, 0x3d, 0x59, 0x21, 0xf8, 0x4f, 0xc5, 0x3f, 0x11, 0xe0, 0x66,
	0x0b, 0x93, 0x04, 0x49, 0xad, 0x6d, 0x4e, 0x93, 0x1b, 0xb0, 0xa4, 0xd3, 0x97, 0xbe, 0x22, 0x19,
	0x84, 0xbe, 0xeb, 0x5b, 0x34, 0xd3, 0xe1, 0x07, 0x89, 0x16, 0xdd, 0x99, 0x46, 0x18, 0x37, 0x8f,
	0x35, 0x6b, 0x8c, 0x75, 0x66, 0xdd, 0x31, 0xc3, 0x7e, 0x0b, 0x4a, 0xde, 0xb1, 0x83, 0xdd, 0x63,
	0x7b, 0xa2, 0xf3, 0x0c, 0x14, 0x22, 0xc4, 0x1f, 0x0b, 0x50, 0x7f, 0xe9, 0x18, 0x1e, 0x96, 0x9c,
	0xd1, 0xb1, 0x71, 0x92, 0x20, 0xe0, 0x48, 0x33, 0xb1, 0xa3, 0xf9, 0x02, 0x32, 0x08, 0xf5, 0xe3,
	0x02, 0x3e, 0x49, 0x14, 0x90, 0x09, 0x66, 0x5b, 0x9e, 0x63, 0x4f, 0x22, 0x42, 0x72, 0x19, 0x9b,
	0x83, 0x53, 0xc3, 0x1b, 0x1d, 0x73, 0x31, 0x45, 0x03, 0xd6, 0xfa, 0xde, 0x97, 0x97, 0x9c, 0xfe,
	0x13, 0x58, 0x72, 0xb0, 0xe6, 0xda, 0x16, 0x9f, 0xff, 0x9d, 0xc4, 0xf9, 0xfb, 0xc3, 0xcf, 0xd9,
	0x5c, 0x0a, 0x1d, 0xab, 0x70, 0x1a, 0xf1, 0x07, 0xb0, 0xae, 0xe0, 0x89, 0x76, 0x36, 0x37, 0xd9,
	0x35, 0x28, 0x38, 0x04, 0xcd, 0xe7, 0x62, 0xc0, 0xd7, 0xb0, 0xd2, 0x7f, 0x14, 0x60, 0x5d, 0x9a,
	0xe9, 0xc6, 0xbc, 0x5b, 0x3d, 0x81, 0x02, 0x65, 0x47, 0xe7, 0x4f, 0x5b, 0x93, 0x4c, 0x29, 0x65,
	0x3f, 0x30, 0x2a, 0x8c, 0x04, 0xc9, 0x90, 0xd7, 0x35, 0x4f, 0xdb, 0xcc, 0xd2, 0xd0, 0xf5, 0x38,
	0xd1, 0xe7, 0x16, 0xa7, 0x6c, 0xb4, 0x34, 0x4f, 0x93, 0x2d, 0xcf, 0x39, 0x53, 0x28, 0x79, 0xfd,
	0x43, 0x28, 0x05, 0xa8, 0x84, 0x4c, 0x77, 0x0d, 0x0a, 0x27, 0xda, 0x64, 0xe6, 0x17, 0x1a, 0x0c,
	0x78, 0x92, 0xfd, 0x48, 0x10, 0x7f, 0x22, 0x40, 0xfd, 0x85, 0x3d, 0x99, 0x99, 0xb8, 0x8d, 0xb5,
	0x89, 0x77, 0x3c, 0xb7, 0xb4, 0x4d, 0x58, 0x76, 0x3d, 0xdb, 0x21, 0x39, 0x83, 0xb1, 0xf3, 0x41,
	0xb2, 0xc3, 0x27, 0x94, 0x8e, 0xf3, 0xe4, 0x10, 0x6a, 0xc1, 0xd2, 0x31, 0xe5, 0xc4, 0x83, 0xfa,
	0x37, 0x13, 0xb5, 0x11, 0x9d, 0x32, 0x6a, 0xfa, 0x9c, 0x56, 0xfc, 0x14, 0xd0, 0x10, 0xbf, 0x66,
	0xea, 0x8a, 0x59, 0x15, 0xcb, 0x1d, 0x41, 0x3d, 0x47, 0x21, 0x84, 0x20, 0xef, 0xe1, 0xd7, 0x1e,
	0x97, 0x84, 0x3e, 0x8b, 0x3f, 0x13, 0xe0, 0xe6, 0x80, 0x96, 0x7b, 0x49, 0xfe, 0x5b, 0x87, 0xa2,
	0x7d, 0x18, 0xab, 0x0d, 0x03, 0x98, 0xae, 0x79, 0x76, 0xf8, 0x9b, 0x78, 0xe4, 0x33, 0xf4, 0x41,
	0x74, 0x10, 0xcf, 0x57, 0x1f, 0x27, 0x26, 0x9a, 0xb4, 0x39, 0xa3, 0x6f, 0x7c, 0x8b, 0xfa, 0x26,
	0x94, 0x23, 0x58, 0x54, 0x05, 0x18, 0x0c, 0xd4, 0x83, 0xdd, 0xdd, 0xfd, 0x4e, 0x4f, 0x66, 0x61,
	0x9d, 0xc0, 0x3d, 0x0a, 0x0a, 0xe2, 0x29, 0xac, 0x49, 0x8e, 0xe9, 0x9b, 0x2c, 0x5f, 0x09, 0x82,
	0x3c, 0xad, 0xe0, 0xd8, 0x2a, 0xe8, 0x33, 0xea, 0xc5, 0x4d, 0xff, 0xa3, 0xc4, 0x2d, 0x68, 0x52,
	0x8f, 0xf4, 0x19, 0xb2, 0x4d, 0x90, 0xe3, 0x48, 0x5f, 0xcc, 0xbf, 0x13, 0xe0, 0x66, 0xa4, 0xd0,
	0xb8, 0xa4, 0xaf, 0x23, 0xc8, 0x4f, 0x0c, 0x37, 0xd8, 0x15, 0xf2, 0x8c, 0x0e, 0x58, 0x79, 0xc6,
	0x15, 0xf8, 0xed, 0x24, 0x05, 0xa6, 0x4e, 0xc4, 0x2b, 0x01, 0xc3, 0xb6, 0xa8, 0x03, 0xb1, 0x3a,
	0xef, 0x11, 0x54, 0x62, 0x68, 0x54, 0x86, 0xe5, 0xd6, 0x50, 0x25, 0xa5, 0x51, 0x2d, 0x83, 0x56,
	0xa0, 0xd8, 0x1a, 0xaa, 0xfd, 0x89, 0xe6, 0xe1, 0x9a, 0x20, 0xfe, 0xb7, 0x00, 0xeb, 0x64, 0x5d,
	0x86, 0xeb, 0x19, 0x23, 0x37, 0x16, 0x3f, 0xa6, 0xb6, 0xc1, 0xfd, 0xb7, 0xa4, 0x30, 0x80, 0x88,
	0x6f, 0x78, 0xd8, 0xf4, 0xc5, 0x27, 0xcf, 0xa1, 0x1f, 0x11, 0xf9, 0x05, 0xee, 0x47, 0x04, 0xab,
	0xe3, 0x89, 0xa7, 0xd1, 0x02, 0x52, 0x50, 0x18, 0x40, 0x8a, 0x1b, 0xcf, 0xc1, 0x96, 0x4e, 0x4b,
	0xbe, 0x85, 0xe2, 0x86, 0x1b, 0xcb, 0xa2, 0x34, 0x8d, 0x21, 0x21, 0x52, 0x18, 0xad, 0xd8, 0x84,
	0x02, 0x85, 0xc9, 0xb2, 0xe4, 0xa1, 0xda, 0x3b, 0xf0, 0xed, 0x42, 0x1e, 0xaa, 0x4a, 0x67, 0x40,
	0xd3, 0x3d, 0x31, 0x1b, 0x79, 0xa8, 0xee, 0x4a, 0xfb, 0xfb, 0x04, 0xce, 0x72, 0x78, 0x5f, 0x96,
	0x5e, 0x10, 0x38, 0x27, 0xfe, 0x79, 0x11, 0xaa, 0x73, 0x7b, 0x86, 0x20, 0x3f, 0xd5, 0xbc, 0x63,
	0xdf, 0x6a, 0xc8, 0x33, 0x6a, 0x43, 0x51, 0xe7, 0xb5, 0x16, 0xef, 0x28, 0x1e, 0x25, 0xc9, 0x9c,
	0x5c, 0x07, 0x92, 0x92, 0xd6, 0xa7, 0x26, 0x9c, 0xfc, 0x3a, 0x89, 0x77, 0x16, 0x8f, 0x2e, 0x5f,
	0x14, 0xf9, 0xed, 0x05, 0xb5, 0xe4, 0xef, 0x40, 0x81, 0x96, 0x14, 0xbc, 0xb7, 0x78, 0x70, 0xc9,
	0x9a, 0xa4, 0x9d, 0x51, 0x18, 0x1d, 0xda, 0x0b, 0x12, 0x35, 0x6b, 0x2b, 0xde, 0x4b, 0x5e, 0x52,
	0x4a, 0x9e, 0x27, 0xed, 0x12, 0xcf, 0xec, 0xcf, 0xa1, 0xa2, 0xb1, 0x4c, 0xab, 0x9e, 0x92, 0xb4,
	0x4b, 0xeb, 0xf4, 0xf2, 0x76, 0x23, 0x89, 0x5f, 0x7a, 0x5e, 0x6e, 0x67, 0x94, 0x15, 0xce, 0x86,
	0x0e, 0x42, 0x1f, 0x43, 0x6e, 0xea, 0x7d, 0x49, 0x0b, 0xf2, 0x94, 0xd6, 0x69, 0x21, 0xb9, 0xb6,
	0x33, 0x0a, 0xa1, 0x21, 0xba, 0x61, 0x69, 0x0f, 0xd2, 0x75, 0x93, 0x90, 0x2e, 0x89, 0x6e, 0x58,
	0x86, 0x7c, 0x0e, 0x15, 0x16, 0xb4, 0x55, 0x1e, 0xb1, 0xcb, 0xe9, 0x4b, 0x4a, 0xcf, 0x11, 0x64,
	0x49, 0x27, 0x91, 0xb7, 0x48, 0x81, 0x15, 0x16, 0x49, 0x55, 0x16, 0x84, 0x56, 0xd2, 0x15, 0x9f,
	0x1a, 0x2c, 0x49, 0x0f, 0xe5, 0x46, 0x22, 0xe3, 0x27, 0x3c, 0xc2, 0x57, 0x28, 0xaf, 0x6f, 0x24,
	0x5a, 0xd3, 0x42, 0xbe, 0x68, 0x67, 0x58, 0x2e, 0x20, 0x4a, 0xd6, 0x1c, 0x73, 0xb3, 0x9a, 0xae,
	0xe4, 0x85, 0xb8, 0x4a, 0x94, 0xac, 0x39, 0x26, 0x7a, 0x06, 0x65, 0x27, 0x0c, 0x48, 0x9b, 0xab,
	0xe9, 0x6b, 0x49, 0x8d, 0x5b, 0x64, 0x2d, 0x11, 0x1e, 0xa4, 0xdb, 0x75, 0x03, 0xbf, 0xdf, 0xac,
	0xa5, 0x6f, 0x5e, 0x42, 0x74, 0x20, 0xdd, 0x6e, 0x48, 0x4c, 0xdd, 0x83, 0x54, 0x07, 0x9b, 0x6b,
	0xe7, 0xb8, 0xc7, 0x62, 0xf9, 0x40, 0xdd, 0x83, 0xa0, 0x77, 0xca, 0x50, 0x1a, 0xf9, 0x58, 0xf1,
	0xcf, 0x04, 0x40, 0x51, 0xd3, 0x95, 0x46, 0xe7, 0xc6, 0xf7, 0x4d, 0x58, 0xe6, 0xa6, 0xec, 0xe7,
	0x49, 0x0e, 0xa2, 0x87, 0x50, 0x33, 0x0d, 0x4b, 0x9d, 0x3a, 0x98, 0xac, 0xdb, 0xd1, 0xc3, 0x23,
	0x94, 0xaa, 0x69, 0x58, 0x7d, 0x1f, 0xdd, 0x75, 0xd1, 0x63, 0xb8, 0x3e, 0xb5, 0x5d, 0x4f, 0xe5,
	0x2d, 0xa4, 0x61, 0x62, 0x7b, 0x46, 0x4f, 0x5c, 0xf2, 0x74, 0x38, 0x22, 0x2f, 0x59, 0xcd, 0xc4,
	0x5e, 0x75, 0x5d, 0xf1, 0x4f, 0xb3, 0x50, 0x53, 0x34, 0xc3, 0xc5, 0xd4, 0xef, 0xb9, 0x8c, 0x49,
	0x59, 0x30, 0x5d, 0xbe, 0x5b, 0x50, 0xb2, 0x8f, 0x8e, 0x5c, 0x1c, 0x39, 0xdb, 0x29, 0x32, 0x44,
	0xd7, 0x45, 0x7b, 0x90, 0x37, 0x6d, 0x1d, 0xf3, 0xd3, 0x80, 0xf7, 0x13, 0xb7, 0x7a, 0x6e, 0xfa,
	0x08, 0xa2, 0x6b, 0xeb, 0x58, 0xa1, 0x0c, 0xc4, 0x53, 0xa8, 0xc6, 0xf1, 0x24, 0x30, 0x2b, 0x52,
	0x57, 0x95, 0x26, 0xa7, 0xda, 0x99, 0x5b, 0xcb, 0x90, 0x5e, 0x25, 0x84, 0xf9, 0x69, 0x57, 0x4d,
	0x40, 0xb7, 0xe1, 0x66, 0x14, 0xdd, 0xb3, 0xc9, 0x2c, 0x27, 0x8c, 0x4f, 0x2d, 0x8b, 0xee, 0xc0,
	0x2d, 0xf2, 0x9a, 0x8f, 0x97, 0x2c, 0x3d, 0x3e, 0x20, 0x27, 0xfe, 0xab, 0x00, 0xb5, 0xe6, 0xc4,
	0xbe, 0x58, 0x43, 0x07, 0x00, 0x0e, 0x76, 0xed, 0xc9, 0x8c, 0xda, 0x36, 0x2b, 0x16, 0xb6, 0x92,
	0x16, 0x3c, 0xcf, 0xad, 0xa1, 0x04, 0x64, 0x4a, 0x84, 0x05, 0xba, 0x07, 0x2b, 0x23, 0x32, 0x54,
	0x9d, 0xd8, 0xa3, 0x57, 0x58, 0xf7, 0x4f, 0xad, 0x28, 0x6e, 0x9f, 0xa2, 0x44, 0x19, 0x20, 0x24,
	0x26, 0x69, 0x4d, 0x52, 0xd4, 0x9e, 0x6d, 0xf1, 0x6c, 0x2d, 0x29, 0xea, 0xae, 0x36, 0x71, 0x31,
	0xcb, 0x6a, 0x92, 0xa2, 0xbe, 0xd4, 0x1c, 0xcb, 0xb0, 0xc6, 0xb5, 0x1c, 0x7f, 0x2b, 0x4d, 0x34,
	0xc7, 0xac, 0xe5, 0xc5, 0xbf, 0x12, 0x60, 0x8d, 0x57, 0xe7, 0x24, 0x96, 0xf1, 0x45, 0x26, 0x77,
	0x02, 0x5d, 0x58, 0xc2, 0x47, 0x47, 0x7e, 0x3d, 0x57, 0xdd, 0xfe, 0x56, 0xa2, 0xb3, 0xcd, 0x33,
	0xe3, 0x98, 0x96, 0xe1, 0x60, 0xaa, 0x5d, 0x85, 0x33, 0x11, 0x3f, 0x82, 0xd5, 0xb9, 0x57, 0xb4,
	0x70, 0x6b, 0xa9, 0x3d, 0xf9, 0xf9, 0x50, 0x91, 0xf6, 0x6b, 0x19, 0x04, 0xb0, 0x34, 0x68, 0x91,
	0x42, 0xae, 0x26, 0xa0, 0x12, 0x14, 0xc8, 0x73, 0xaf, 0x96, 0x15, 0x2d, 0x58, 0xdf, 0xb3, 0x3d,
	0xbb, 0x3f, 0xfc, 0xbc, 0xef, 0x60, 0x17, 0xfb, 0x5b, 0x43, 0x1a, 0x3d, 0x3c, 0xc1, 0x26, 0xf6,
	0x1c, 0x5f, 0xf2, 0x10, 0x81, 0xde, 0x86, 0xca, 0x94, 0x8e, 0x56, 0xad, 0x99, 0x79, 0x88, 0x1d,
	0xba, 0x88, 0x82, 0xb2, 0xc2, 0x90, 0x3d, 0x8a, 0x23, 0x0b, 0x77, 0xa7, 0x18, 0xfb, 0x7d, 0x22,
	0x03, 0xc4, 0x21, 0xdc, 0x78, 0x61, 0x1b, 0x23, 0xdc, 0xb3, 0x3d, 0xe3, 0xc8, 0x18, 0xd1, 0x53,
	0x5f, 0x3e, 0x67, 0x1d, 0x8a, 0x16, 0xc5, 0x86, 0x05, 0xb0, 0x0f, 0xa3, 0xdb, 0x00, 0x11, 0x4f,
	0xcc, 0xf2, 0xce, 0x33, 0x70, 0xc0, 0xbf, 0x14, 0xe0, 0xd6, 0xc0, 0xb0, 0x5e, 0x91, 0xc0, 0x62,
	0x27, 0xb0, 0x7e, 0x1b, 0x2a, 0x34, 0xf0, 0xab, 0x23, 0xd6, 0x57, 0x71, 0xfe, 0x2b, 0x6e, 0xa4,
	0xd7, 0x42, 0x0f, 0x60, 0x95, 0x9f, 0x0b, 0x61, 0x4b, 0x67, 0xd5, 0x17, 0x73, 0xd2, 0x2a, 0x43,
	0xcb, 0x1c, 0x4b, 0xb9, 0x19, 0xd6, 0xab, 0x70, 0x58, 0x8e, 0x73, 0x33, 0xac, 0x57, 0xc1, 0xa0,
	0xb8, 0xc4, 0xf9, 0x79, 0x89, 0xff, 0x38, 0x0b, 0x37, 0x64, 0x53, 0x33, 0xac, 0xff, 0xa3, 0x22,
	0x7e, 0x81, 0xf8, 0xc7, 0xc8, 0x98, 0x1a, 0xa4, 0x60, 0xa6, 0x2d, 0x5a, 0x49, 0x89, 0x60, 0xa2,
	0x9d, 0x42, 0x2e, 0xde, 0x29, 0xdc, 0x84, 0xa2, 0xe9, 0x8e, 0x55, 0x9a, 0xb3, 0xf2, 0xec, 0x95,
	0xe9, 0x8e, 0x49, 0x8a, 0x42, 0x77, 0xa0, 0xac, 0x79, 0xda, 0xe8, 0x58, 0x3d, 0x31, 0x74, 0x6c,
	0xd3, 0xfa, 0xa8, 0xa8, 0x00, 0x45, 0xbd, 0x20, 0x18, 0xe2, 0x44, 0xf8, 0xf5, 0xd4, 0x76, 0x3c,
	0x55, 0x1b, 0x93, 0xae, 0x72, 0x89, 0xd2, 0x97, 0x19, 0x4e, 0x22, 0x28, 0x74, 0x03, 0x96, 0xdd,
	0xa9, 0x66, 0x91, 0xc5, 0x2e, 0xd3, 0xc5, 0x2e, 0x11, 0x90, 0x9d, 0x4a, 0xf3, 0x58, 0x5d, 0x4c,
	0x8b, 0xd5, 0xa5, 0x58, 0x2c, 0x14, 0x75, 0xa8, 0x0c, 0xb0, 0xa5, 0x0f, 0xba, 0x83, 0x4b, 0x28,
	0xe4, 0x2d, 0x28, 0x05, 0xcb, 0xe7, 0xfb, 0x15, 0x22, 0xce, 0x59, 0xb4, 0xd8, 0x87, 0xd2, 0xde,
	0xcc, 0xe0, 0x33, 0x54, 0x21, 0x1b, 0x1c, 0xa8, 0x65, 0x0d, 0x9d, 0x84, 0x26, 0xde, 0x03, 0xd3,
	0xd0, 0x44, 0x9e, 0x89, 0x96, 0x46, 0x9a, 0x35, 0xc2, 0x13, 0x95, 0xbe, 0xe2, 0x67, 0xfe, 0x0c,
	0x45, 0x3a, 0x5d, 0xf1, 0x7f, 0x72, 0x50, 0x7d, 0x89, 0x0f, 0x9f, 0xcd, 0xb0, 0xe3, 0x7b, 0xff,
	0x1e, 0x2c, 0x99, 0xd8, 0x3b, 0xb6, 0x75, 0xde, 0x88, 0x27, 0x86, 0xb2, 0x38, 0x4d, 0x43, 0xa6,
	0x40, 0x97, 0x92, 0x29, 0x9c, 0x1c, 0xb5, 0xa0, 0x40, 0x2f, 0x45, 0x78, 0xbc, 0x68, 0x5c, 0x9a,
	0x4f, 0x9f, 0x50, 0x29, 0x05, 0x7e, 0xab, 0x03, 0xf9, 0xb6, 0xed, 0xfa, 0xa6, 0x41, 0x9f, 0x09,
	0xae, 0x6f, 0x3b, 0x4c, 0x3d, 0x15, 0x85, 0x3e, 0x53, 0x1c, 0xa9, 0xc5, 0x0b, 0x6c, 0x1c, 0x79,
	0x26, 0xb8, 0x1d, 0x5b, 0x3f, 0xe3, 0x7b, 0x4f, 0x9f, 0x89, 0x8f, 0xef, 0xdb, 0x63, 0xc3, 0xa2,
	0x5b, 0x5e, 0x52, 0x18, 0x40, 0xb6, 0xab, 0xaf, 0xb9, 0xee, 0xa9, 0xed, 0xe8, 0x7c, 0xcf, 0x03,
	0x18, 0xed, 0x40, 0x5e, 0x9a, 0x79, 0xc7, 0x74, 0xcb, 0x2f, 0xb9, 0x0c, 0x32, 0x9e, 0x6b, 0x83,
	0xd2, 0x8a, 0x3b, 0xb0, 0x12, 0xd5, 0x11, 0x89, 0xd8, 0xcf, 0xba, 0x6a, 0xff, 0x60, 0x30, 0x64,
	0x71, 0xee, 0x59, 0x57, 0xdd, 0x93, 0x87, 0x35, 0x81, 0x3f, 0xf7, 0x9f, 0x0f, 0x6b, 0x59, 0xd2,
	0xa0, 0x3c, 0xeb, 0xaa, 0x2d, 0x79, 0x5f, 0x1e, 0xca, 0xb5, 0x9c, 0xf8, 0x10, 0xca, 0x11, 0xfd,
	0x50, 0x16, 0x7d, 0xb5, 0x3d, 0x1c, 0xf6, 0x59, 0xd0, 0xe7, 0xc0, 0xa0, 0x26, 0x88, 0x8f, 0xa0,
	0x1c, 0x11, 0x81, 0xc6, 0xfc, 0xae, 0xba, 0x23, 0x0d, 0x3a, 0x4d, 0xd6, 0xf6, 0x48, 0x5d, 0xb5,
	0xd5, 0xd9, 0x93, 0x07, 0xc3, 0x9a, 0x20, 0x4a, 0x50, 0xf5, 0xcb, 0xb6, 0x73, 0x72, 0xdc, 0x2d,
	0x28, 0x59, 0xf8, 0x54, 0x0d, 0xfb, 0xe1, 0xa2, 0x52, 0xb4, 0xf0, 0xe9, 0x80, 0x35, 0xb6, 0x39,
	0xa8, 0x76, 0xbb, 0x32, 0xf3, 0xac, 0x91, 0x9f, 0xc2, 0x62, 0xde, 0x27, 0x2c, 0x7a, 0x9f, 0xc4,
	0x2b, 0x84, 0x6c, 0x7a, 0x63, 0x17, 0x67, 0xda, 0x60, 0x40, 0x58, 0x1b, 0x90, 0x5d, 0x0b, 0x3a,
	0x24, 0x66, 0x1f, 0x61, 0xcf, 0x13, 0x71, 0xee, 0x7c, 0xcc, 0xb9, 0x63, 0x65, 0x4b, 0x61, 0xae,
	0x6c, 0x09, 0x3d, 0x7f, 0x29, 0xcd, 0xf3, 0x97, 0xe3, 0x55, 0xd0, 0x03, 0x58, 0x3d, 0x32, 0x26,
	0xd8, 0xd2, 0x4c, 0xac, 0x1e, 0xd9, 0x8e, 0xa9, 0x79, 0xdc, 0x80, 0xaa, 0x3e, 0x7a, 0x97, 0x62,
	0xd1, 0x7d, 0xa8, 0x8e, 0x6c, 0xd3, 0x24, 0x15, 0x1a, 0x1f, 0xc7, 0x62, 0x48, 0x85, 0x63, 0xd9,
	0x30, 0xf1, 0x35, 0x40, 0xb8, 0x4e, 0xda, 0xb0, 0x76, 0xfd, 0x86, 0x75, 0x13, 0xae, 0xc9, 0x5d,
	0x75, 0xd8, 0xe9, 0xca, 0x9f, 0x1f, 0xf4, 0x64, 0x75, 0x57, 0x91, 0xf6, 0xba, 0x72, 0x8f, 0x58,
	0xcd, 0x4d, 0xb8, 0x2e, 0x77, 0xd5, 0x41, 0x5f, 0x6e, 0x76, 0x76, 0x3b, 0x72, 0x2b, 0x7c, 0x95,
	0x45, 0xab, 0x50, 0x26, 0xaf, 0x7a, 0x52, 0x7f, 0xd0, 0x3e, 0x18, 0xd6, 0x72, 0xe8, 0x06, 0xac,
	0xcb, 0x5d, 0x55, 0x79, 0xde, 0x23, 0x8c, 0xc2, 0x91, 0x79, 0xf1, 0xd7, 0x82, 0xbb, 0x9e, 0xb0,
	0x64, 0x75, 0x47, 0x8e, 0x31, 0xf5, 0x82, 0x83, 0x22, 0x0a, 0x45, 0x2e, 0x04, 0xb3, 0xb1, 0x0b,
	0xc1, 0xb7, 0xa0, 0xa4, 0x39, 0xe3, 0x99, 0x49, 0xe3, 0x3c, 0xdb, 0x8f, 0x10, 0x21, 0xfe, 0x7b,
	0x16, 0xd6, 0x14, 0x3c, 0x9d, 0xc4, 0x13, 0xc7, 0x77, 0xb8, 0x15, 0xb0, 0x58, 0xf3, 0x8b, 0xc9,
	0x2d, 0xc1, 0x1c, 0x51, 0x43, 0x8e, 0xd8, 0xc0, 0x85, 0xb7, 0x90, 0x11, 0x43, 0xc8, 0xa5, 0x1b,
	0x42, 0x3e, 0xd5, 0x10, 0x0a, 0x69, 0x86, 0xb0, 0x14, 0x4f, 0x01, 0xbf, 0x23, 0x40, 0x41, 0xe6,
	0xd7, 0x95, 0xd7, 0x94, 0xa4, 0x7d, 0xca, 0x90, 0x7d, 0x52, 0x12, 0xf7, 0x49, 0x20, 0xdb, 0xa2,
	0x24, 0x6c, 0x4b, 0x96, 0x73, 0xdb, 0xd9, 0xef, 0xf4, 0x5a, 0xaa, 0x22, 0xf7, 0xf7, 0x3b, 0x4d,
	0x69, 0xd8, 0x39, 0xe8, 0xd5, 0x72, 0x68, 0x03, 0x90, 0xd2, 0x55, 0x5f, 0x48, 0xfb, 0xcf, 0xa3,
	0xac, 0xf2, 0xe2, 0x2e, 0x20, 0x7e, 0x2b, 0x1d, 0x75, 0x6b, 0x92, 0x66, 0x19, 0x36, 0x38, 0x84,
	0x64, 0x20, 0x59, 0x2b, 0xbb, 0x4f, 0xe5, 0x9e, 0xcd, 0x21, 0xd1, 0x83, 0x55, 0xff, 0xaa, 0xdb,
	0x67, 0x22, 0xc2, 0xca, 0xc8, 0xbf, 0xfd, 0x26, 0x04, 0xbc, 0x28, 0x89, 0xe2, 0xd0, 0x53, 0x80,
	0xa9, 0x63, 0x4f, 0xb1, 0xe3, 0x19, 0xd8, 0xe5, 0x47, 0xb2, 0xb7, 0xe3, 0x1b, 0xcb, 0xc6, 0x37,
	0xfa, 0x6c, 0xd8, 0x99, 0x12, 0x21, 0x10, 0xdf, 0x85, 0xb5, 0x8e, 0x75, 0x62, 0xbf, 0x62, 0xbd,
	0x6c, 0x58, 0x92, 0x9a, 0x04, 0xf4, 0x4b, 0x52, 0x0a, 0x88, 0x3f, 0xcb, 0x43, 0x79, 0xcf, 0xb1,
	0x67, 0xd3, 0x70, 0xd4, 0x98, 0x80, 0xfe, 0x28, 0x0a, 0x44, 0xee, 0x98, 0xb3, 0xd1, 0x3b, 0x66,
	0xd4, 0x85, 0x0a, 0x3d, 0x83, 0x50, 0xfd, 0x0d, 0xcd, 0xa7, 0xb7, 0xc5, 0x8b, 0x0d, 0x1d, 0x69,
	0xd8, 0x4f, 0x23, 0x58, 0xb4, 0x07, 0x65, 0x87, 0x34, 0x2a, 0x2a, 0x3b, 0x6a, 0x61, 0x27, 0x36,
	0xef, 0x5c, 0xa6, 0xf1, 0x21, 0xed, 0xa8, 0x13, 0xe0, 0xd0, 0xf7, 0x01, 0x61, 0x53, 0x33, 0x26,
	0xaa, 0x15, 0xa9, 0xb3, 0xf8, 0xd1, 0x4d, 0xa2, 0x83, 0xa4, 0x14, 0x65, 0xed, 0x8c, 0xb2, 0x46,
	0x19, 0x45, 0x5f, 0x21, 0x89, 0x38, 0xa9, 0xc9, 0x23, 0x39, 0x3b, 0xcd, 0x11, 0xcf, 0xeb, 0xe5,
	0x03, 0x5e, 0x45, 0x8d, 0x63, 0xd0, 0x27, 0xb0, 0xc4, 0x02, 0x39, 0x3f, 0xbd, 0x11, 0x2f, 0x8e,
	0xdd, 0xed, 0x8c, 0xc2, 0x69, 0x50, 0x07, 0xca, 0x4e, 0xe8, 0xd1, 0xe7, 0x9d, 0xd9, 0x2c, 0x38,
	0x3e, 0x3b, 0x03, 0x08, 0x90, 0x44, 0xe5, 0xac, 0x51, 0x62, 0x2a, 0x87, 0x74, 0x95, 0xcf, 0xb7,
	0x5e, 0xf4, 0xbe, 0x3b, 0xc0, 0xed, 0x14, 0x61, 0x49, 0xa3, 0x78, 0xf1, 0xbf, 0x00, 0x96, 0xb8,
	0x35, 0x5d, 0xb1, 0x7d, 0x7c, 0x17, 0x56, 0x5c, 0xda, 0xf0, 0xa8, 0xac, 0xb9, 0x3a, 0xe7, 0x63,
	0x81, 0x85, 0x2e, 0x8a, 0x1e, 0xe4, 0x84, 0x48, 0xd4, 0x82, 0xe2, 0xd8, 0xf6, 0x6c, 0x75, 0xea,
	0x7d, 0x79, 0xde, 0x99, 0x5e, 0x42, 0x9b, 0xd4, 0xce, 0x28, 0xcb, 0x84, 0xb4, 0xef, 0x7d, 0x49,
	0x0c, 0xed, 0x84, 0x34, 0x36, 0x71, 0x43, 0x5b, 0x4e, 0x37, 0xb4, 0x94, 0x36, 0x88, 0x18, 0xda,
	0xc9, 0xfc, 0x2b, 0xf4, 0x1b, 0x80, 0x34, 0xd2, 0xdb, 0xc4, 0xb9, 0x33, 0x8b, 0x49, 0xac, 0x29,
	0xcf, 0xe9, 0x86, 0xc8, 0x0c, 0xda, 0xfc, 0xab, 0x14, 0x47, 0x29, 0x5d, 0x91, 0xa3, 0xfc, 0x0a,
	0x14, 0x5d, 0x6c, 0xe9, 0xaa, 0x6b, 0xba, 0xdc, 0xb2, 0x92, 0xaf, 0xc4, 0xa3, 0x65, 0x3f, 0xd1,
	0x2e, 0x21, 0x1a, 0x98, 0x2e, 0x7a, 0x0c, 0xb9, 0xf1, 0xcc, 0xe0, 0xa7, 0x81, 0xb7, 0x13, 0xb7,
	0xc7, 0xaf, 0xe5, 0xdb, 0x19, 0x85, 0x8c, 0x8d, 0x38, 0xd6, 0xca, 0x1b, 0x38, 0xd6, 0x53, 0x92,
	0xe8, 0x68, 0xfe, 0xe6, 0x07, 0x7c, 0xe7, 0x5d, 0xe1, 0x47, 0xe4, 0x65, 0x88, 0x79, 0xbf, 0xac,
	0x7e, 0x05, 0xbf, 0xec, 0x42, 0x85, 0xe7, 0x16, 0x1e, 0x67, 0x56, 0xd3, 0x3d, 0x67, 0x31, 0x53,
	0x11, 0xcf, 0x71, 0x23, 0x58, 0x12, 0xb2, 0x4e, 0xf1, 0xa1, 0xfa, 0x05, 0xa9, 0x7d, 0xf9, 0x49,
	0x9f, 0x78, 0x71, 0x15, 0x4e, 0x42, 0xd6, 0x29, 0xc7, 0xcc, 0x07, 0xe7, 0xb5, 0x37, 0x0e, 0xce,
	0xb1, 0xf0, 0x89, 0xde, 0x28, 0x7c, 0x36, 0xe9, 0x69, 0x21, 0x4b, 0xab, 0x9b, 0xeb, 0xe9, 0x1f,
	0x1d, 0xcd, 0xe5, 0xde, 0x76, 0x46, 0x09, 0xe9, 0xd0, 0x53, 0x3f, 0x21, 0x5e, 0x4b, 0xdf, 0xa7,
	0x85, 0x34, 0xda, 0xce, 0xf0, 0xcc, 0x89, 0x3e, 0xf4, 0x33, 0xe5, 0x75, 0x4a, 0x7e, 0x27, 0xd1,
	0x3c, 0xc3, 0xcc, 0x4a, 0x08, 0x59, 0x32, 0x9d, 0x0b, 0xb9, 0x1b, 0x6f, 0x1c, 0x72, 0xfd, 0x4f,
	0x8c, 0xfe, 0x59, 0x80, 0xb2, 0x42, 0x0f, 0x32, 0x9b, 0xc7, 0x78, 0xf4, 0xea, 0x0d, 0xce, 0x49,
	0x6f, 0x42, 0x51, 0xc7, 0x53, 0xef, 0x38, 0xac, 0xf0, 0x96, 0x29, 0xdc, 0x75, 0xd1, 0x53, 0x7e,
	0x51, 0xc6, 0x4e, 0x21, 0xdf, 0x4d, 0x3b, 0x70, 0xe6, 0x73, 0x37, 0xe8, 0xdf, 0xc8, 0xb5, 0xd8,
	0x27, 0x50, 0x0a, 0x50, 0x68, 0x1d, 0x56, 0x9b, 0x43, 0xb5, 0xd9, 0x96, 0x9b, 0x9f, 0xa9, 0x8a,
	0xdc, 0x3c, 0x50, 0x5a, 0xb5, 0x0c, 0xaa, 0xc3, 0xc6, 0x1c, 0x52, 0x1d, 0x48, 0xbb, 0xf2, 0xf0,
	0x7b, 0x35, 0x41, 0xfc, 0x69, 0xce, 0xbf, 0x30, 0x22, 0x3c, 0x94, 0xd9, 0x04, 0xa3, 0x6f, 0x41,
	0x61, 0x44, 0x00, 0xba, 0xb6, 0x14, 0xb5, 0x47, 0x04, 0x52, 0xd8, 0x68, 0xf4, 0x3d, 0xa8, 0xb8,
	0xb3, 0xd1, 0x08, 0xbb, 0xae, 0xea, 0xcc, 0x26, 0x41, 0x51, 0xf5, 0x41, 0xea, 0xc7, 0x5d, 0xc1,
	0x8c, 0x8d, 0x01, 0xa3, 0x23, 0xcf, 0x2e, 0xbb, 0xea, 0x5e, 0x71, 0x23, 0x28, 0xc2, 0xfa, 0x48,
	0x33, 0x26, 0x33, 0x07, 0x73, 0xd6, 0xb9, 0x4b, 0xb3, 0xde, 0x65, 0x74, 0x51, 0xd6, 0x47, 0x11,
	0x54, 0xfd, 0xd7, 0x61, 0x6d, 0x61, 0xf6, 0xe8, 0xad, 0x7a, 0x81, 0xdd, 0xaa, 0xbf, 0x1f, 0xbd,
	0x55, 0x4f, 0x89, 0x94, 0x74, 0x66, 0xc2, 0x25, 0x72, 0xe9, 0x4e, 0xf8, 0x2f, 0x88, 0x70, 0x85,
	0xfc, 0xc5, 0xbf, 0xce, 0xf2, 0x8f, 0x39, 0x99, 0xfd, 0xd2, 0x0d, 0x8c, 0x1f, 0x91, 0x09, 0x73,
	0x47, 0x64, 0xe8, 0x08, 0xd6, 0xf8, 0x79, 0x4b, 0x70, 0x1f, 0xe0, 0x6f, 0xd6, 0xc7, 0xa9, 0xf3,
	0x86, 0xec, 0x1b, 0x4d, 0x4a, 0x1c, 0xdc, 0x30, 0x70, 0xb5, 0xd6, 0x46, 0x73, 0x68, 0xb4, 0xed,
	0xd7, 0x2b, 0xd4, 0xe0, 0xcb, 0xdb, 0xf5, 0xc4, 0x10, 0xc4, 0xf8, 0xf2, 0x91, 0xf5, 0x31, 0x5c,
	0x4f, 0x64, 0x9f, 0xa0, 0xb2, 0x8f, 0xe2, 0x2a, 0x13, 0xd3, 0x8d, 0xc1, 0x67, 0x15, 0xd5, 0xdb,
	0x7f, 0xe4, 0xa1, 0x42, 0xdf, 0xbe, 0xd4, 0x0c, 0xef, 0x32, 0x5a, 0xd3, 0xd3, 0xb5, 0xf6, 0x61,
	0xea, 0xd4, 0x3e, 0xf3, 0x4b, 0xeb, 0x4c, 0x81, 0x32, 0xbb, 0x1f, 0x89, 0xda, 0xf9, 0xe3, 0x8b,
	0xf9, 0xd3, 0x8b, 0x93, 0x88, 0x91, 0xb3, 0x0f, 0xf5, 0x98, 0xf7, 0xfc, 0x2a, 0x54, 0xfc, 0x85,
	0x31, 0xae, 0xec, 0xdb, 0xb9, 0xf7, 0x2f, 0xe6, 0xca, 0x6f, 0x62, 0xa2, 0xce, 0xe3, 0x45, 0x50,
	0xff, 0x6f, 0xbb, 0x55, 0xff, 0x3e, 0xac, 0xce, 0xad, 0xf0, 0x8a, 0x7d, 0x74, 0x61, 0xa5, 0x57,
	0xe9, 0xa3, 0x7f, 0x21, 0xf0, 0x18, 0x2b, 0x1d, 0x79, 0xd8, 0xa1, 0xc6, 0xd6, 0x84, 0x02, 0xdb,
	0x0b, 0x81, 0xee, 0xc5, 0x7b, 0xe9, 0x7e, 0xe7, 0x93, 0x34, 0x22, 0xbb, 0xc0, 0x68, 0xeb, 0x2f,
	0x01, 0xbe, 0x1e, 0x81, 0x1f, 0x43, 0x8d, 0xe2, 0x23, 0x5a, 0xb9, 0xc0, 0x3d, 0xc4, 0x7f, 0xc9,
	0xf2, 0x6f, 0xa1, 0xe9, 0xe0, 0xa4, 0x6f, 0x0e, 0x9e, 0x06, 0xe1, 0xe0, 0xa2, 0x6f, 0x98, 0xc3,
	0x58, 0x43, 0x0a, 0x47, 0x46, 0x84, 0x3e, 0x84, 0xfc, 0xa9, 0x66, 0xf8, 0x2d, 0xeb, 0xbd, 0x0b,
	0x8d, 0xb7, 0x9d, 0x51, 0x28, 0x01, 0x7a, 0x02, 0x05, 0x8d, 0x28, 0x91, 0xf7, 0x20, 0xe2, 0xc5,
	0xaa, 0xa6, 0x77, 0xa6, 0x04, 0x40, 0x9f, 0xc2, 0x32, 0x5f, 0x22, 0xef, 0x38, 0xde, 0x49, 0xa5,
	0x8e, 0xe8, 0x8a, 0x14, 0xac, 0x9c, 0x8c, 0xcc, 0xce, 0x92, 0x69, 0xf1, 0x22, 0xbb, 0xf7, 0x53,
	0x16, 0x99, 0x9d, 0x92, 0x04, 0xd5, 0xc7, 0xdf, 0xe4, 0xa0, 0xec, 0xfb, 0xc6, 0x91, 0x31, 0x26,
	0xda, 0x1d, 0xcf, 0x82, 0x63, 0x75, 0xfa, 0x4c, 0x70, 0x96, 0x16, 0x7c, 0xa1, 0x45, 0x9f, 0xd1,
	0x63, 0x7e, 0x6c, 0x95, 0xbb, 0x60, 0xfb, 0x23, 0x07, 0x55, 0x07, 0xf4, 0xf3, 0x6c, 0x3f, 0xbc,
	0xb1, 0x40, 0xb1, 0x75, 0x9e, 0xaf, 0x1e, 0x19, 0xe3, 0xc6, 0x7c, 0x58, 0x8b, 0xb0, 0x40, 0x9f,
	0xfa, 0x86, 0x5e, 0xa0, 0xbc, 0x1e, 0x5d, 0xc4, 0x6b, 0xd1, 0xca, 0x35, 0x7a, 0xc0, 0xf3, 0xb5,
	0x86, 0x97, 0xaf, 0xcd, 0x91, 0xfe, 0x40, 0x80, 0xb5, 0x7d, 0xc3, 0x65, 0x77, 0xf2, 0xae, 0x82,
	0xbf, 0x98, 0x61, 0xd7, 0x43, 0x4d, 0xc8, 0x9f, 0x18, 0xf8, 0xf4, 0xbc, 0xab, 0x8b, 0x05, 0xa2,
	0x86, 0xfc, 0xc2, 0xc0, 0xa7, 0x6c, 0xa7, 0x08, 0xb1, 0xf8, 0x21, 0x94, 0x02, 0x14, 0xda, 0x00,
	0xf4, 0xa2, 0x23, 0xbf, 0x54, 0xbb, 0x07, 0x2d, 0x59, 0x1d, 0x0c, 0x95, 0x4e, 0xbf, 0x2f, 0x93,
	0xca, 0x0f, 0x41, 0x35, 0xc4, 0xef, 0x3e, 0xdf, 0xdf, 0xaf, 0x09, 0xe2, 0x67, 0x80, 0xa2, 0xdc,
	0xdd, 0xa9, 0x6d, 0xb9, 0xb4, 0xe8, 0x33, 0x3c, 0x6c, 0xfa, 0x01, 0xe9, 0xce, 0x05, 0xfb, 0xa4,
	0xb0, 0xd1, 0xe2, 0x2f, 0xc3, 0xf5, 0x1d, 0xcd, 0x1b, 0x1d, 0xef, 0xe1, 0xb9, 0x35, 0xde, 0x06,
	0xa0, 0x45, 0xbc, 0xab, 0x1a, 0x3a, 0x63, 0x5a, 0x52, 0x4a, 0x0c, 0xd3, 0xd1, 0x5d, 0xf1, 0x0c,
	0x36, 0xe6, 0xe9, 0xbe, 0x92, 0x20, 0xe8, 0x21, 0xd4, 0x2c, 0xdb, 0x53, 0x8f, 0xec, 0x99, 0xa5,
	0xab, 0x6c, 0x1e, 0x7e, 0x8b, 0x57, 0xb5, 0x6c, 0x6f, 0x97, 0xa0, 0xd9, 0x44, 0xe2, 0xdf, 0x0b,
	0xb0, 0xce, 0x3e, 0xfd, 0x8c, 0x4b, 0x7c, 0x1f, 0xaa, 0x0e, 0x36, 0xed, 0x13, 0x1c, 0xd0, 0x33,
	0xa9, 0x2b, 0x1c, 0xcb, 0x46, 0xa3, 0x36, 0xac, 0x9a, 0xb6, 0x6e, 0x1c, 0x19, 0x38, 0x36, 0xcf,
	0x25, 0x24, 0xad, 0xfa, 0x74, 0x9c, 0xd3, 0x0e, 0xac, 0x68, 0xba, 0x1e, 0xb2, 0xc9, 0x5d, 0x8e,
	0x4d, 0x99, 0x12, 0xf1, 0xc5, 0x6c, 0xc0, 0xb5, 0xf8, 0x5a, 0x98, 0x16, 0xc5, 0x1f, 0x09, 0x70,
	0x9d, 0xbd, 0x08, 0x3e, 0xf0, 0xe3, 0xcb, 0xbc, 0x05, 0x25, 0xd6, 0xac, 0x84, 0x9f, 0x86, 0x17,
	0x19, 0x42, 0x9a, 0x5e, 0xf9, 0xd7, 0x84, 0x9b, 0xb0, 0x31, 0x2f, 0x05, 0x17, 0xf0, 0x97, 0x60,
	0x2d, 0x6c, 0x62, 0x2f, 0x23, 0x9b, 0xf8, 0x00, 0x2a, 0x7c, 0x30, 0xb7, 0x94, 0x0d, 0x58, 0x72,
	0xe8, 0xef, 0x20, 0xf8, 0xef, 0x6d, 0x38, 0x24, 0xee, 0xc2, 0xca, 0xa5, 0xb9, 0x92, 0xbe, 0x8c,
	0x7d, 0x0e, 0x1f, 0x1c, 0xcb, 0x2f, 0x53, 0xb8, 0x43, 0x7f, 0x09, 0x51, 0x6f, 0xda, 0xe6, 0x74,
	0x82, 0x3d, 0x5f, 0x4c, 0xe2, 0x79, 0x3e, 0x5b, 0x19, 0x8a, 0x2e, 0x3e, 0xc1, 0x8e, 0xe1, 0x9d,
	0x71, 0x4f, 0x7e, 0x37, 0x51, 0x5d, 0xe1, 0xcf, 0x18, 0x1a, 0xf2, 0x80, 0x13, 0x28, 0x01, 0x29,
	0xfa, 0x18, 0x8a, 0x87, 0xb6, 0xfd, 0xca, 0xd4, 0x9c, 0x57, 0xc9, 0xe1, 0x85, 0xb3, 0xd9, 0xe1,
	0x83, 0x94, 0x60, 0x78, 0x7c, 0x61, 0xb9, 0x73, 0x16, 0x96, 0x8f, 0x2d, 0x6c, 0xfb, 0x3f, 0x4b,
	0xb0, 0x12, 0xfd, 0x69, 0x1a, 0xfa, 0x01, 0x40, 0x18, 0x12, 0xd0, 0xfd, 0x4b, 0x05, 0xa4, 0xfa,
	0x37, 0x2e, 0x1a, 0xc6, 0x77, 0xfa, 0xee, 0x0f, 0x7f, 0xfe, 0x6f, 0x7f, 0x94, 0xad, 0xa3, 0xcd,
	0xad, 0x93, 0xc7, 0xec, 0x77, 0x71, 0x2a, 0x3f, 0x38, 0xd9, 0x62, 0x86, 0x8f, 0xfe, 0x50, 0x80,
	0x6a, 0x3c, 0x1a, 0xa0, 0xc4, 0x2e, 0x38, 0x31, 0xd2, 0xd4, 0x1f, 0x5d, 0x66, 0x28, 0x97, 0xe5,
	0x5d, 0x2a, 0xcb, 0xdb, 0xe8, 0x5e, 0x9a, 0x2c, 0x4f, 0x0e, 0x39, 0x21, 0xfa, 0x3d, 0x01, 0x56,
	0xa2, 0xae, 0x85, 0x12, 0x0f, 0x2f, 0x13, 0x02, 0x49, 0xfd, 0xe1, 0xc5, 0x03, 0xb9, 0x38, 0x8f,
	0xa8, 0x38, 0xef, 0x88, 0x77, 0x52, 0xc5, 0x19, 0x51, 0xb2, 0x27, 0xc2, 0x23, 0xf4, 0xfb, 0x02,
	0x54, 0xe3, 0xbe, 0x94, 0xac, 0xa4, 0x44, 0xaf, 0x4f, 0x56, 0x52, 0x8a, 0x6b, 0xde, 0xa7, 0x52,
	0xdd, 0x11, 0xeb, 0x8b, 0x52, 0x69, 0x8e, 0x49, 0x1d, 0x9b, 0x08, 0xf4, 0x5b, 0x00, 0xa1, 0x07,
	0x27, 0x1b, 0xcd, 0x82, 0x87, 0xd7, 0xef, 0xa5, 0x7e, 0xd5, 0x19, 0x4c, 0xff, 0x80, 0x4e, 0x7f,
	0x4f, 0x7c, 0x6b, 0x71, 0x7a, 0x7a, 0xc4, 0x45, 0xad, 0x98, 0x08, 0xf0, 0xdb, 0x02, 0xd4, 0x76,
	0xf0, 0xd8, 0xb0, 0x22, 0xce, 0x89, 0xee, 0x9e, 0x33, 0xc1, 0x55, 0x88, 0x70, 0x48, 0x26, 0x0c,
	0x44, 0xf8, 0xa1, 0x00, 0x6b, 0xac, 0x03, 0xba, 0x72, 0x19, 0x1e, 0x52, 0x19, 0x44, 0xf1, 0xf6,
	0xa2, 0x0c, 0xac, 0x6b, 0x0c, 0x84, 0xf8, 0x31, 0x49, 0x68, 0xec, 0x67, 0x71, 0xf8, 0xca, 0xc5,
	0x38, 0xc7, 0x44, 0xf9, 0x4f, 0xf1, 0xc2, 0x0d, 0xf9, 0x09, 0x15, 0x64, 0x21, 0x60, 0xa2, 0x46,
	0xf2, 0xc1, 0x61, 0x5a, 0x64, 0xfd, 0xca, 0x62, 0x31, 0xc6, 0xbe, 0x58, 0x3b, 0xe2, 0xe7, 0x77,
	0x0f, 0x0d, 0xef, 0x70, 0x36, 0x7a, 0x85, 0xbd, 0x86, 0xed, 0x8c, 0xb7, 0xa4, 0x85, 0x5f, 0xea,
	0x1e, 0x2e, 0xd1, 0xef, 0x38, 0xde, 0xff, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x89, 0x5d, 0x42,
	0xe1, 0xc6, 0x3b, 0x00, 0x00,
}
