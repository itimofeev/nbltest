// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/vmda/VMDA.proto

package vmda // import "bitbucket.org/Axxonsoft/bl/vmda"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import primitive "bitbucket.org/Axxonsoft/bl/primitive"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnumerateSchemesRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Language             string   `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnumerateSchemesRequest) Reset()         { *m = EnumerateSchemesRequest{} }
func (m *EnumerateSchemesRequest) String() string { return proto.CompactTextString(m) }
func (*EnumerateSchemesRequest) ProtoMessage()    {}
func (*EnumerateSchemesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{0}
}
func (m *EnumerateSchemesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnumerateSchemesRequest.Unmarshal(m, b)
}
func (m *EnumerateSchemesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnumerateSchemesRequest.Marshal(b, m, deterministic)
}
func (dst *EnumerateSchemesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnumerateSchemesRequest.Merge(dst, src)
}
func (m *EnumerateSchemesRequest) XXX_Size() int {
	return xxx_messageInfo_EnumerateSchemesRequest.Size(m)
}
func (m *EnumerateSchemesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnumerateSchemesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnumerateSchemesRequest proto.InternalMessageInfo

func (m *EnumerateSchemesRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *EnumerateSchemesRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type CameraAndSchemaIDs struct {
	Camera_ID            string   `protobuf:"bytes,1,opt,name=camera_ID,json=cameraID" json:"camera_ID,omitempty"`
	Schema_ID            string   `protobuf:"bytes,2,opt,name=schema_ID,json=schemaID" json:"schema_ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CameraAndSchemaIDs) Reset()         { *m = CameraAndSchemaIDs{} }
func (m *CameraAndSchemaIDs) String() string { return proto.CompactTextString(m) }
func (*CameraAndSchemaIDs) ProtoMessage()    {}
func (*CameraAndSchemaIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{1}
}
func (m *CameraAndSchemaIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraAndSchemaIDs.Unmarshal(m, b)
}
func (m *CameraAndSchemaIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraAndSchemaIDs.Marshal(b, m, deterministic)
}
func (dst *CameraAndSchemaIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraAndSchemaIDs.Merge(dst, src)
}
func (m *CameraAndSchemaIDs) XXX_Size() int {
	return xxx_messageInfo_CameraAndSchemaIDs.Size(m)
}
func (m *CameraAndSchemaIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraAndSchemaIDs.DiscardUnknown(m)
}

var xxx_messageInfo_CameraAndSchemaIDs proto.InternalMessageInfo

func (m *CameraAndSchemaIDs) GetCamera_ID() string {
	if m != nil {
		return m.Camera_ID
	}
	return ""
}

func (m *CameraAndSchemaIDs) GetSchema_ID() string {
	if m != nil {
		return m.Schema_ID
	}
	return ""
}

type EnumerateSchemesResponse struct {
	Cs_IDs               []*CameraAndSchemaIDs `protobuf:"bytes,1,rep,name=cs_IDs,json=csIDs" json:"cs_IDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EnumerateSchemesResponse) Reset()         { *m = EnumerateSchemesResponse{} }
func (m *EnumerateSchemesResponse) String() string { return proto.CompactTextString(m) }
func (*EnumerateSchemesResponse) ProtoMessage()    {}
func (*EnumerateSchemesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{2}
}
func (m *EnumerateSchemesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnumerateSchemesResponse.Unmarshal(m, b)
}
func (m *EnumerateSchemesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnumerateSchemesResponse.Marshal(b, m, deterministic)
}
func (dst *EnumerateSchemesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnumerateSchemesResponse.Merge(dst, src)
}
func (m *EnumerateSchemesResponse) XXX_Size() int {
	return xxx_messageInfo_EnumerateSchemesResponse.Size(m)
}
func (m *EnumerateSchemesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnumerateSchemesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnumerateSchemesResponse proto.InternalMessageInfo

func (m *EnumerateSchemesResponse) GetCs_IDs() []*CameraAndSchemaIDs {
	if m != nil {
		return m.Cs_IDs
	}
	return nil
}

type ExecuteQueryRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Camera_ID            string   `protobuf:"bytes,2,opt,name=camera_ID,json=cameraID" json:"camera_ID,omitempty"`
	Schema_ID            string   `protobuf:"bytes,3,opt,name=schema_ID,json=schemaID" json:"schema_ID,omitempty"`
	DtPosixStartTime     string   `protobuf:"bytes,4,opt,name=dt_posix_start_time,json=dtPosixStartTime" json:"dt_posix_start_time,omitempty"`
	DtPosixEndTime       string   `protobuf:"bytes,5,opt,name=dt_posix_end_time,json=dtPosixEndTime" json:"dt_posix_end_time,omitempty"`
	Query                string   `protobuf:"bytes,6,opt,name=query" json:"query,omitempty"`
	Language             string   `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteQueryRequest) Reset()         { *m = ExecuteQueryRequest{} }
func (m *ExecuteQueryRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteQueryRequest) ProtoMessage()    {}
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{3}
}
func (m *ExecuteQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteQueryRequest.Unmarshal(m, b)
}
func (m *ExecuteQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteQueryRequest.Marshal(b, m, deterministic)
}
func (dst *ExecuteQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteQueryRequest.Merge(dst, src)
}
func (m *ExecuteQueryRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteQueryRequest.Size(m)
}
func (m *ExecuteQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteQueryRequest proto.InternalMessageInfo

func (m *ExecuteQueryRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *ExecuteQueryRequest) GetCamera_ID() string {
	if m != nil {
		return m.Camera_ID
	}
	return ""
}

func (m *ExecuteQueryRequest) GetSchema_ID() string {
	if m != nil {
		return m.Schema_ID
	}
	return ""
}

func (m *ExecuteQueryRequest) GetDtPosixStartTime() string {
	if m != nil {
		return m.DtPosixStartTime
	}
	return ""
}

func (m *ExecuteQueryRequest) GetDtPosixEndTime() string {
	if m != nil {
		return m.DtPosixEndTime
	}
	return ""
}

func (m *ExecuteQueryRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ExecuteQueryRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type ObjectVal struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Left                 float64  `protobuf:"fixed64,2,opt,name=left" json:"left,omitempty"`
	Top                  float64  `protobuf:"fixed64,3,opt,name=top" json:"top,omitempty"`
	Right                float64  `protobuf:"fixed64,4,opt,name=right" json:"right,omitempty"`
	Bottom               float64  `protobuf:"fixed64,5,opt,name=bottom" json:"bottom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectVal) Reset()         { *m = ObjectVal{} }
func (m *ObjectVal) String() string { return proto.CompactTextString(m) }
func (*ObjectVal) ProtoMessage()    {}
func (*ObjectVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{4}
}
func (m *ObjectVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectVal.Unmarshal(m, b)
}
func (m *ObjectVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectVal.Marshal(b, m, deterministic)
}
func (dst *ObjectVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectVal.Merge(dst, src)
}
func (m *ObjectVal) XXX_Size() int {
	return xxx_messageInfo_ObjectVal.Size(m)
}
func (m *ObjectVal) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectVal.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectVal proto.InternalMessageInfo

func (m *ObjectVal) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ObjectVal) GetLeft() float64 {
	if m != nil {
		return m.Left
	}
	return 0
}

func (m *ObjectVal) GetTop() float64 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *ObjectVal) GetRight() float64 {
	if m != nil {
		return m.Right
	}
	return 0
}

func (m *ObjectVal) GetBottom() float64 {
	if m != nil {
		return m.Bottom
	}
	return 0
}

type Interval struct {
	Limit                *primitive.TimeRange `protobuf:"bytes,1,opt,name=limit" json:"limit,omitempty"`
	Objects              []*ObjectVal         `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Interval) Reset()         { *m = Interval{} }
func (m *Interval) String() string { return proto.CompactTextString(m) }
func (*Interval) ProtoMessage()    {}
func (*Interval) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{5}
}
func (m *Interval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interval.Unmarshal(m, b)
}
func (m *Interval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interval.Marshal(b, m, deterministic)
}
func (dst *Interval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interval.Merge(dst, src)
}
func (m *Interval) XXX_Size() int {
	return xxx_messageInfo_Interval.Size(m)
}
func (m *Interval) XXX_DiscardUnknown() {
	xxx_messageInfo_Interval.DiscardUnknown(m)
}

var xxx_messageInfo_Interval proto.InternalMessageInfo

func (m *Interval) GetLimit() *primitive.TimeRange {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Interval) GetObjects() []*ObjectVal {
	if m != nil {
		return m.Objects
	}
	return nil
}

type ExecuteQueryResponse struct {
	Intervals            []*Interval `protobuf:"bytes,1,rep,name=intervals" json:"intervals,omitempty"`
	Progress             string      `protobuf:"bytes,2,opt,name=progress" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExecuteQueryResponse) Reset()         { *m = ExecuteQueryResponse{} }
func (m *ExecuteQueryResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteQueryResponse) ProtoMessage()    {}
func (*ExecuteQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{6}
}
func (m *ExecuteQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteQueryResponse.Unmarshal(m, b)
}
func (m *ExecuteQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteQueryResponse.Marshal(b, m, deterministic)
}
func (dst *ExecuteQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteQueryResponse.Merge(dst, src)
}
func (m *ExecuteQueryResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteQueryResponse.Size(m)
}
func (m *ExecuteQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteQueryResponse proto.InternalMessageInfo

func (m *ExecuteQueryResponse) GetIntervals() []*Interval {
	if m != nil {
		return m.Intervals
	}
	return nil
}

func (m *ExecuteQueryResponse) GetProgress() string {
	if m != nil {
		return m.Progress
	}
	return ""
}

type CleanupRequest struct {
	AccessPoint          string              `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Cs_IDs               *CameraAndSchemaIDs `protobuf:"bytes,2,opt,name=cs_IDs,json=csIDs" json:"cs_IDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CleanupRequest) Reset()         { *m = CleanupRequest{} }
func (m *CleanupRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupRequest) ProtoMessage()    {}
func (*CleanupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{7}
}
func (m *CleanupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupRequest.Unmarshal(m, b)
}
func (m *CleanupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupRequest.Marshal(b, m, deterministic)
}
func (dst *CleanupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupRequest.Merge(dst, src)
}
func (m *CleanupRequest) XXX_Size() int {
	return xxx_messageInfo_CleanupRequest.Size(m)
}
func (m *CleanupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupRequest proto.InternalMessageInfo

func (m *CleanupRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *CleanupRequest) GetCs_IDs() *CameraAndSchemaIDs {
	if m != nil {
		return m.Cs_IDs
	}
	return nil
}

type CleanupResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupResponse) Reset()         { *m = CleanupResponse{} }
func (m *CleanupResponse) String() string { return proto.CompactTextString(m) }
func (*CleanupResponse) ProtoMessage()    {}
func (*CleanupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_VMDA_802b69f399cb4d0a, []int{8}
}
func (m *CleanupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupResponse.Unmarshal(m, b)
}
func (m *CleanupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupResponse.Marshal(b, m, deterministic)
}
func (dst *CleanupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupResponse.Merge(dst, src)
}
func (m *CleanupResponse) XXX_Size() int {
	return xxx_messageInfo_CleanupResponse.Size(m)
}
func (m *CleanupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupResponse proto.InternalMessageInfo

func (m *CleanupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*EnumerateSchemesRequest)(nil), "axxonsoft.bl.vmda.EnumerateSchemesRequest")
	proto.RegisterType((*CameraAndSchemaIDs)(nil), "axxonsoft.bl.vmda.CameraAndSchemaIDs")
	proto.RegisterType((*EnumerateSchemesResponse)(nil), "axxonsoft.bl.vmda.EnumerateSchemesResponse")
	proto.RegisterType((*ExecuteQueryRequest)(nil), "axxonsoft.bl.vmda.ExecuteQueryRequest")
	proto.RegisterType((*ObjectVal)(nil), "axxonsoft.bl.vmda.ObjectVal")
	proto.RegisterType((*Interval)(nil), "axxonsoft.bl.vmda.Interval")
	proto.RegisterType((*ExecuteQueryResponse)(nil), "axxonsoft.bl.vmda.ExecuteQueryResponse")
	proto.RegisterType((*CleanupRequest)(nil), "axxonsoft.bl.vmda.CleanupRequest")
	proto.RegisterType((*CleanupResponse)(nil), "axxonsoft.bl.vmda.CleanupResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VMDAService service

type VMDAServiceClient interface {
	// interface Database
	EnumerateSchemes(ctx context.Context, in *EnumerateSchemesRequest, opts ...grpc.CallOption) (*EnumerateSchemesResponse, error)
	Cleanup(ctx context.Context, in *CleanupRequest, opts ...grpc.CallOption) (*CleanupResponse, error)
	ExecuteQuery(ctx context.Context, in *ExecuteQueryRequest, opts ...grpc.CallOption) (VMDAService_ExecuteQueryClient, error)
}

type vMDAServiceClient struct {
	cc *grpc.ClientConn
}

func NewVMDAServiceClient(cc *grpc.ClientConn) VMDAServiceClient {
	return &vMDAServiceClient{cc}
}

func (c *vMDAServiceClient) EnumerateSchemes(ctx context.Context, in *EnumerateSchemesRequest, opts ...grpc.CallOption) (*EnumerateSchemesResponse, error) {
	out := new(EnumerateSchemesResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.vmda.VMDAService/EnumerateSchemes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMDAServiceClient) Cleanup(ctx context.Context, in *CleanupRequest, opts ...grpc.CallOption) (*CleanupResponse, error) {
	out := new(CleanupResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.vmda.VMDAService/Cleanup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMDAServiceClient) ExecuteQuery(ctx context.Context, in *ExecuteQueryRequest, opts ...grpc.CallOption) (VMDAService_ExecuteQueryClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VMDAService_serviceDesc.Streams[0], c.cc, "/axxonsoft.bl.vmda.VMDAService/ExecuteQuery", opts...)
	if err != nil {
		return nil, err
	}
	x := &vMDAServiceExecuteQueryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VMDAService_ExecuteQueryClient interface {
	Recv() (*ExecuteQueryResponse, error)
	grpc.ClientStream
}

type vMDAServiceExecuteQueryClient struct {
	grpc.ClientStream
}

func (x *vMDAServiceExecuteQueryClient) Recv() (*ExecuteQueryResponse, error) {
	m := new(ExecuteQueryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for VMDAService service

type VMDAServiceServer interface {
	// interface Database
	EnumerateSchemes(context.Context, *EnumerateSchemesRequest) (*EnumerateSchemesResponse, error)
	Cleanup(context.Context, *CleanupRequest) (*CleanupResponse, error)
	ExecuteQuery(*ExecuteQueryRequest, VMDAService_ExecuteQueryServer) error
}

func RegisterVMDAServiceServer(s *grpc.Server, srv VMDAServiceServer) {
	s.RegisterService(&_VMDAService_serviceDesc, srv)
}

func _VMDAService_EnumerateSchemes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnumerateSchemesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMDAServiceServer).EnumerateSchemes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.vmda.VMDAService/EnumerateSchemes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMDAServiceServer).EnumerateSchemes(ctx, req.(*EnumerateSchemesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VMDAService_Cleanup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMDAServiceServer).Cleanup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.vmda.VMDAService/Cleanup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMDAServiceServer).Cleanup(ctx, req.(*CleanupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VMDAService_ExecuteQuery_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExecuteQueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VMDAServiceServer).ExecuteQuery(m, &vMDAServiceExecuteQueryServer{stream})
}

type VMDAService_ExecuteQueryServer interface {
	Send(*ExecuteQueryResponse) error
	grpc.ServerStream
}

type vMDAServiceExecuteQueryServer struct {
	grpc.ServerStream
}

func (x *vMDAServiceExecuteQueryServer) Send(m *ExecuteQueryResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _VMDAService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.vmda.VMDAService",
	HandlerType: (*VMDAServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnumerateSchemes",
			Handler:    _VMDAService_EnumerateSchemes_Handler,
		},
		{
			MethodName: "Cleanup",
			Handler:    _VMDAService_Cleanup_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExecuteQuery",
			Handler:       _VMDAService_ExecuteQuery_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "axxonsoft/bl/vmda/VMDA.proto",
}

func init() { proto.RegisterFile("axxonsoft/bl/vmda/VMDA.proto", fileDescriptor_VMDA_802b69f399cb4d0a) }

var fileDescriptor_VMDA_802b69f399cb4d0a = []byte{
	// 645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x41, 0x4f, 0xdb, 0x4c,
	0x10, 0x95, 0x03, 0x09, 0xc9, 0x04, 0xf1, 0xc1, 0x82, 0xf8, 0xa2, 0x80, 0x54, 0x62, 0xa9, 0x05,
	0x5a, 0xd5, 0xae, 0xa8, 0xd4, 0xaa, 0x52, 0x2f, 0x94, 0x70, 0xc8, 0xa1, 0x6d, 0x6a, 0x2a, 0x84,
	0x7a, 0x89, 0xd6, 0xf6, 0x60, 0xb6, 0xd8, 0xbb, 0xc6, 0xbb, 0x8e, 0x52, 0xf5, 0x47, 0xf5, 0x1f,
	0x56, 0xd5, 0xae, 0x9d, 0x50, 0x93, 0x94, 0x96, 0xdb, 0xce, 0xce, 0xf3, 0xcc, 0x7b, 0x33, 0xcf,
	0x0b, 0xbb, 0x74, 0x32, 0x11, 0x5c, 0x8a, 0x4b, 0xe5, 0xfa, 0xb1, 0x3b, 0x4e, 0x42, 0xea, 0x9e,
	0xbf, 0xef, 0x1f, 0x3b, 0x69, 0x26, 0x94, 0x20, 0x1b, 0xb3, 0xac, 0xe3, 0xc7, 0x8e, 0xce, 0x76,
	0x77, 0x23, 0x21, 0xa2, 0x18, 0x5d, 0x9a, 0x32, 0x97, 0x72, 0x2e, 0x14, 0x55, 0x4c, 0x70, 0x59,
	0x7c, 0xd0, 0xdd, 0xaf, 0x94, 0x4b, 0x33, 0x96, 0x30, 0xc5, 0xc6, 0xe8, 0x0e, 0xa7, 0xa7, 0x12,
	0x68, 0x5f, 0xc0, 0xff, 0xa7, 0x3c, 0x4f, 0x30, 0xa3, 0x0a, 0xcf, 0x82, 0x2b, 0x4c, 0x50, 0x7a,
	0x78, 0x93, 0xa3, 0x54, 0xa4, 0x07, 0xab, 0x34, 0x08, 0x50, 0xca, 0x51, 0x2a, 0x18, 0x57, 0x1d,
	0x6b, 0xcf, 0x3a, 0x68, 0x79, 0xed, 0xe2, 0x6e, 0xa8, 0xaf, 0x48, 0x17, 0x9a, 0x31, 0xe5, 0x51,
	0x4e, 0x23, 0xec, 0xd4, 0x4c, 0x7a, 0x16, 0xdb, 0x1f, 0x80, 0x9c, 0x50, 0x5d, 0xf8, 0x98, 0x87,
	0xa6, 0x32, 0x1d, 0xf4, 0x25, 0xd9, 0x81, 0x56, 0x60, 0x6e, 0x47, 0x83, 0x7e, 0x59, 0xb1, 0x59,
	0x5c, 0x0c, 0xfa, 0x3a, 0x29, 0x0d, 0x52, 0x27, 0xcb, 0x7a, 0xb2, 0xfc, 0xd4, 0xbe, 0x80, 0xce,
	0x3c, 0x53, 0x99, 0x0a, 0x2e, 0x91, 0xbc, 0x85, 0x46, 0x20, 0x47, 0x83, 0xbe, 0xec, 0x58, 0x7b,
	0x4b, 0x07, 0xed, 0xa3, 0xc7, 0xce, 0xdc, 0xc0, 0x9c, 0x79, 0x32, 0x5e, 0x3d, 0x90, 0x83, 0xbe,
	0xb4, 0x7f, 0x5a, 0xb0, 0x79, 0x3a, 0xc1, 0x20, 0x57, 0xf8, 0x29, 0xc7, 0xec, 0xdb, 0x03, 0x06,
	0x50, 0x91, 0x53, 0xbb, 0x4f, 0xce, 0x52, 0x55, 0x0e, 0x79, 0x0e, 0x9b, 0xa1, 0x1a, 0xa5, 0x42,
	0xb2, 0xc9, 0x48, 0x2a, 0x9a, 0xa9, 0x91, 0x62, 0x09, 0x76, 0x96, 0x0d, 0x6c, 0x3d, 0x54, 0x43,
	0x9d, 0x39, 0xd3, 0x89, 0xcf, 0x2c, 0x41, 0x72, 0x08, 0x1b, 0x33, 0x38, 0xf2, 0xb0, 0x00, 0xd7,
	0x0d, 0x78, 0xad, 0x04, 0x9f, 0xf2, 0xd0, 0x40, 0xb7, 0xa0, 0x7e, 0xa3, 0x65, 0x74, 0x1a, 0x26,
	0x5d, 0x04, 0x95, 0x55, 0xad, 0xdc, 0x59, 0x95, 0x80, 0xd6, 0x47, 0xff, 0x2b, 0x06, 0xea, 0x9c,
	0xc6, 0x64, 0x0d, 0x6a, 0x2c, 0x34, 0x5a, 0x97, 0xbd, 0x1a, 0x0b, 0x09, 0x81, 0xe5, 0x18, 0x2f,
	0x95, 0x51, 0x67, 0x79, 0xe6, 0x4c, 0xd6, 0x61, 0x49, 0x89, 0xd4, 0x68, 0xb2, 0x3c, 0x7d, 0xd4,
	0x4d, 0x33, 0x16, 0x5d, 0x29, 0x23, 0xc0, 0xf2, 0x8a, 0x80, 0x6c, 0x43, 0xc3, 0x17, 0x4a, 0x89,
	0xc4, 0x50, 0xb5, 0xbc, 0x32, 0xb2, 0xbf, 0x43, 0x73, 0xc0, 0x15, 0x66, 0x63, 0x1a, 0x93, 0xd7,
	0x50, 0x8f, 0xb5, 0x29, 0x4d, 0xcb, 0xf6, 0x51, 0xaf, 0xba, 0xba, 0x99, 0x75, 0x1d, 0xad, 0xcd,
	0xa3, 0x3c, 0x42, 0xaf, 0xc0, 0x93, 0x57, 0xb0, 0x22, 0x0c, 0x6b, 0xd9, 0xa9, 0x99, 0xad, 0xef,
	0x2e, 0xd8, 0xfa, 0x4c, 0x97, 0x37, 0x05, 0xdb, 0x09, 0x6c, 0x55, 0xb7, 0x5d, 0x9a, 0xe8, 0x0d,
	0xb4, 0x58, 0x49, 0x6a, 0xea, 0xa3, 0x9d, 0x05, 0x15, 0xa7, 0xc4, 0xbd, 0x5b, 0xb4, 0x1e, 0x6e,
	0x9a, 0x89, 0x28, 0x43, 0x29, 0xa7, 0x2e, 0x98, 0xc6, 0xf6, 0x0d, 0xac, 0x9d, 0xc4, 0x48, 0x79,
	0x9e, 0x3e, 0xc0, 0x57, 0xb7, 0x86, 0xae, 0x99, 0xa9, 0x3c, 0xcc, 0xd0, 0x87, 0xf0, 0xdf, 0xac,
	0x65, 0x29, 0x6e, 0x1b, 0x1a, 0x19, 0xca, 0x3c, 0x2e, 0xba, 0x35, 0xbd, 0x32, 0x3a, 0xfa, 0x51,
	0x83, 0xb6, 0x7e, 0x68, 0xce, 0x30, 0x1b, 0xb3, 0x00, 0xc9, 0x35, 0xac, 0xdf, 0xfd, 0xcb, 0xc8,
	0xd3, 0x05, 0xcd, 0xff, 0xf0, 0x68, 0x74, 0x9f, 0xfd, 0x13, 0xb6, 0x24, 0x35, 0x84, 0x95, 0x92,
	0x27, 0xe9, 0x2d, 0x12, 0x58, 0x19, 0x5b, 0xd7, 0xbe, 0x0f, 0x52, 0x56, 0xa4, 0xb0, 0xfa, 0xfb,
	0x6e, 0xc9, 0x93, 0x45, 0x74, 0xe6, 0x7f, 0xf5, 0xee, 0xfe, 0x5f, 0x71, 0x45, 0x83, 0x17, 0xd6,
	0xbb, 0xde, 0x97, 0x47, 0x3e, 0x53, 0x7e, 0x1e, 0x5c, 0xa3, 0x72, 0x44, 0x16, 0xb9, 0xc7, 0x77,
	0x5f, 0x6e, 0xbf, 0x61, 0xde, 0xd6, 0x97, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x36, 0x78, 0xc2,
	0xe0, 0xd5, 0x05, 0x00, 0x00,
}
