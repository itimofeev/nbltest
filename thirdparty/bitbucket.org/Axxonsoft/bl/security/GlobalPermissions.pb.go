// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/security/GlobalPermissions.proto

package security // import "bitbucket.org/Axxonsoft/bl/security"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EMapAccess int32

const (
	EMapAccess_MAP_ACCESS_UNSPECIFIED EMapAccess = 0
	EMapAccess_MAP_ACCESS_FORBID      EMapAccess = 10
	EMapAccess_MAP_ACCESS_VIEW_ONLY   EMapAccess = 20
	EMapAccess_MAP_ACCESS_VIEW_SCALE  EMapAccess = 30
	EMapAccess_MAP_ACCESS_FULL        EMapAccess = 40
)

var EMapAccess_name = map[int32]string{
	0:  "MAP_ACCESS_UNSPECIFIED",
	10: "MAP_ACCESS_FORBID",
	20: "MAP_ACCESS_VIEW_ONLY",
	30: "MAP_ACCESS_VIEW_SCALE",
	40: "MAP_ACCESS_FULL",
}
var EMapAccess_value = map[string]int32{
	"MAP_ACCESS_UNSPECIFIED": 0,
	"MAP_ACCESS_FORBID":      10,
	"MAP_ACCESS_VIEW_ONLY":   20,
	"MAP_ACCESS_VIEW_SCALE":  30,
	"MAP_ACCESS_FULL":        40,
}

func (x EMapAccess) String() string {
	return proto.EnumName(EMapAccess_name, int32(x))
}
func (EMapAccess) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_GlobalPermissions_b0714f60568bc979, []int{0}
}

type EFeatureAccess int32

const (
	EFeatureAccess_FUTURE_ACCESS_FORBID_ALL                         EFeatureAccess = 0
	EFeatureAccess_FUTURE_ACCESS_DEVICES_SETUP                      EFeatureAccess = 1
	EFeatureAccess_FUTURE_ACCESS_ARCHIVES_SETUP                     EFeatureAccess = 2
	EFeatureAccess_FUTURE_ACCESS_DETECTORS_SETUP                    EFeatureAccess = 3
	EFeatureAccess_FUTURE_ACCESS_USERS_RIGHTS_SETUP                 EFeatureAccess = 4
	EFeatureAccess_FUTURE_ACCESS_CHANGING_LAYOUTS                   EFeatureAccess = 5
	EFeatureAccess_FUTURE_ACCESS_EXPORT                             EFeatureAccess = 6
	EFeatureAccess_FUTURE_ACCESS_LAYOUTS_TAB                        EFeatureAccess = 7
	EFeatureAccess_FUTURE_ACCESS_SETTINGS_SETUP                     EFeatureAccess = 8
	EFeatureAccess_FUTURE_ACCESS_MINMAX_BUTTON_ALLOWED              EFeatureAccess = 9
	EFeatureAccess_FUTURE_ACCESS_SYSTEM_JOURNAL                     EFeatureAccess = 10
	EFeatureAccess_FUTURE_ACCESS_DOMAIN_MANAGING_OPS                EFeatureAccess = 11
	EFeatureAccess_FUTURE_ACCESS_ADD_CAMERA_TO_LAYOUT_IN_MONITORING EFeatureAccess = 12
	EFeatureAccess_FUTURE_ACCESS_SEARCH                             EFeatureAccess = 13
	EFeatureAccess_FUTURE_ACCESS_EDIT_PTZ_PRESETS                   EFeatureAccess = 14
	EFeatureAccess_FUTURE_ACCESS_PROGRAMMING_SETUP                  EFeatureAccess = 15
	EFeatureAccess_FUTURE_ACCESS_WEB_UI_LOGIN                       EFeatureAccess = 16
	EFeatureAccess_FUTURE_ACCESS_ALLOW_BUTTON_MENU_CAMERA           EFeatureAccess = 18
	EFeatureAccess_FUTURE_ACCESS_ALLOW_SHOW_TITLES                  EFeatureAccess = 19
	EFeatureAccess_FUTURE_ACCESS_SHOW_ERROR_MESSAGES                EFeatureAccess = 20
	// Marks role as a guard role which has specific limitations in access to system components.
	EFeatureAccess_FUTURE_ACCESS_IS_GUARD_ROLE                       EFeatureAccess = 21
	EFeatureAccess_FUTURE_ACCESS_ALLOW_DELETE_RECORDS                EFeatureAccess = 22
	EFeatureAccess_FUTURE_ACCESS_ALLOW_SHOW_PRIVACY_VIDEO_IN_ARCHIVE EFeatureAccess = 23
	EFeatureAccess_FUTURE_ACCESS_ALLOW_SHOW_FACES_IN_LIVE            EFeatureAccess = 24
	EFeatureAccess_FUTURE_ACCESS_ALLOW_UNPROTECTED_EXPORT            EFeatureAccess = 25
)

var EFeatureAccess_name = map[int32]string{
	0:  "FUTURE_ACCESS_FORBID_ALL",
	1:  "FUTURE_ACCESS_DEVICES_SETUP",
	2:  "FUTURE_ACCESS_ARCHIVES_SETUP",
	3:  "FUTURE_ACCESS_DETECTORS_SETUP",
	4:  "FUTURE_ACCESS_USERS_RIGHTS_SETUP",
	5:  "FUTURE_ACCESS_CHANGING_LAYOUTS",
	6:  "FUTURE_ACCESS_EXPORT",
	7:  "FUTURE_ACCESS_LAYOUTS_TAB",
	8:  "FUTURE_ACCESS_SETTINGS_SETUP",
	9:  "FUTURE_ACCESS_MINMAX_BUTTON_ALLOWED",
	10: "FUTURE_ACCESS_SYSTEM_JOURNAL",
	11: "FUTURE_ACCESS_DOMAIN_MANAGING_OPS",
	12: "FUTURE_ACCESS_ADD_CAMERA_TO_LAYOUT_IN_MONITORING",
	13: "FUTURE_ACCESS_SEARCH",
	14: "FUTURE_ACCESS_EDIT_PTZ_PRESETS",
	15: "FUTURE_ACCESS_PROGRAMMING_SETUP",
	16: "FUTURE_ACCESS_WEB_UI_LOGIN",
	18: "FUTURE_ACCESS_ALLOW_BUTTON_MENU_CAMERA",
	19: "FUTURE_ACCESS_ALLOW_SHOW_TITLES",
	20: "FUTURE_ACCESS_SHOW_ERROR_MESSAGES",
	21: "FUTURE_ACCESS_IS_GUARD_ROLE",
	22: "FUTURE_ACCESS_ALLOW_DELETE_RECORDS",
	23: "FUTURE_ACCESS_ALLOW_SHOW_PRIVACY_VIDEO_IN_ARCHIVE",
	24: "FUTURE_ACCESS_ALLOW_SHOW_FACES_IN_LIVE",
	25: "FUTURE_ACCESS_ALLOW_UNPROTECTED_EXPORT",
}
var EFeatureAccess_value = map[string]int32{
	"FUTURE_ACCESS_FORBID_ALL":                          0,
	"FUTURE_ACCESS_DEVICES_SETUP":                       1,
	"FUTURE_ACCESS_ARCHIVES_SETUP":                      2,
	"FUTURE_ACCESS_DETECTORS_SETUP":                     3,
	"FUTURE_ACCESS_USERS_RIGHTS_SETUP":                  4,
	"FUTURE_ACCESS_CHANGING_LAYOUTS":                    5,
	"FUTURE_ACCESS_EXPORT":                              6,
	"FUTURE_ACCESS_LAYOUTS_TAB":                         7,
	"FUTURE_ACCESS_SETTINGS_SETUP":                      8,
	"FUTURE_ACCESS_MINMAX_BUTTON_ALLOWED":               9,
	"FUTURE_ACCESS_SYSTEM_JOURNAL":                      10,
	"FUTURE_ACCESS_DOMAIN_MANAGING_OPS":                 11,
	"FUTURE_ACCESS_ADD_CAMERA_TO_LAYOUT_IN_MONITORING":  12,
	"FUTURE_ACCESS_SEARCH":                              13,
	"FUTURE_ACCESS_EDIT_PTZ_PRESETS":                    14,
	"FUTURE_ACCESS_PROGRAMMING_SETUP":                   15,
	"FUTURE_ACCESS_WEB_UI_LOGIN":                        16,
	"FUTURE_ACCESS_ALLOW_BUTTON_MENU_CAMERA":            18,
	"FUTURE_ACCESS_ALLOW_SHOW_TITLES":                   19,
	"FUTURE_ACCESS_SHOW_ERROR_MESSAGES":                 20,
	"FUTURE_ACCESS_IS_GUARD_ROLE":                       21,
	"FUTURE_ACCESS_ALLOW_DELETE_RECORDS":                22,
	"FUTURE_ACCESS_ALLOW_SHOW_PRIVACY_VIDEO_IN_ARCHIVE": 23,
	"FUTURE_ACCESS_ALLOW_SHOW_FACES_IN_LIVE":            24,
	"FUTURE_ACCESS_ALLOW_UNPROTECTED_EXPORT":            25,
}

func (x EFeatureAccess) String() string {
	return proto.EnumName(EFeatureAccess_name, int32(x))
}
func (EFeatureAccess) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_GlobalPermissions_b0714f60568bc979, []int{1}
}

type EAlertAccess int32

const (
	EAlertAccess_ALLERT_ACCESS_UNSPECIFIED EAlertAccess = 0
	EAlertAccess_ALLERT_ACCESS_FORBID      EAlertAccess = 10
	EAlertAccess_ALLERT_ACCESS_VIEW_ONLY   EAlertAccess = 20
	EAlertAccess_ALLERT_ACCESS_FULL        EAlertAccess = 30
)

var EAlertAccess_name = map[int32]string{
	0:  "ALLERT_ACCESS_UNSPECIFIED",
	10: "ALLERT_ACCESS_FORBID",
	20: "ALLERT_ACCESS_VIEW_ONLY",
	30: "ALLERT_ACCESS_FULL",
}
var EAlertAccess_value = map[string]int32{
	"ALLERT_ACCESS_UNSPECIFIED": 0,
	"ALLERT_ACCESS_FORBID":      10,
	"ALLERT_ACCESS_VIEW_ONLY":   20,
	"ALLERT_ACCESS_FULL":        30,
}

func (x EAlertAccess) String() string {
	return proto.EnumName(EAlertAccess_name, int32(x))
}
func (EAlertAccess) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_GlobalPermissions_b0714f60568bc979, []int{2}
}

type EUnrestrictedAccess int32

const (
	EUnrestrictedAccess_UNRESTRICTED_ACCESS_UNSPECIFIED EUnrestrictedAccess = 0
	EUnrestrictedAccess_UNRESTRICTED_ACCESS_NO          EUnrestrictedAccess = 10
	EUnrestrictedAccess_UNRESTRICTED_ACCESS_YES         EUnrestrictedAccess = 20
)

var EUnrestrictedAccess_name = map[int32]string{
	0:  "UNRESTRICTED_ACCESS_UNSPECIFIED",
	10: "UNRESTRICTED_ACCESS_NO",
	20: "UNRESTRICTED_ACCESS_YES",
}
var EUnrestrictedAccess_value = map[string]int32{
	"UNRESTRICTED_ACCESS_UNSPECIFIED": 0,
	"UNRESTRICTED_ACCESS_NO":          10,
	"UNRESTRICTED_ACCESS_YES":         20,
}

func (x EUnrestrictedAccess) String() string {
	return proto.EnumName(EUnrestrictedAccess_name, int32(x))
}
func (EUnrestrictedAccess) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_GlobalPermissions_b0714f60568bc979, []int{3}
}

type EBookmarkAccess int32

const (
	EBookmarkAccess_BOOKMARK_ACCESS_UNSPECIFIED                EBookmarkAccess = 0
	EBookmarkAccess_BOOKMARK_ACCESS_NO                         EBookmarkAccess = 10
	EBookmarkAccess_BOOKMARK_ACCESS_CREATE                     EBookmarkAccess = 20
	EBookmarkAccess_BOOKMARK_ACCESS_CREATE_PROTECT             EBookmarkAccess = 30
	EBookmarkAccess_BOOKMARK_ACCESS_CREATE_PROTECT_EDIT_DELETE EBookmarkAccess = 40
)

var EBookmarkAccess_name = map[int32]string{
	0:  "BOOKMARK_ACCESS_UNSPECIFIED",
	10: "BOOKMARK_ACCESS_NO",
	20: "BOOKMARK_ACCESS_CREATE",
	30: "BOOKMARK_ACCESS_CREATE_PROTECT",
	40: "BOOKMARK_ACCESS_CREATE_PROTECT_EDIT_DELETE",
}
var EBookmarkAccess_value = map[string]int32{
	"BOOKMARK_ACCESS_UNSPECIFIED":                0,
	"BOOKMARK_ACCESS_NO":                         10,
	"BOOKMARK_ACCESS_CREATE":                     20,
	"BOOKMARK_ACCESS_CREATE_PROTECT":             30,
	"BOOKMARK_ACCESS_CREATE_PROTECT_EDIT_DELETE": 40,
}

func (x EBookmarkAccess) String() string {
	return proto.EnumName(EBookmarkAccess_name, int32(x))
}
func (EBookmarkAccess) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_GlobalPermissions_b0714f60568bc979, []int{4}
}

type GlobalPermissions struct {
	UnrestrictedAccess      EUnrestrictedAccess `protobuf:"varint,1,opt,name=unrestricted_access,json=unrestrictedAccess,enum=axxonsoft.bl.security.EUnrestrictedAccess" json:"unrestricted_access,omitempty"`
	MapsAccess              EMapAccess          `protobuf:"varint,3,opt,name=maps_access,json=mapsAccess,enum=axxonsoft.bl.security.EMapAccess" json:"maps_access,omitempty"`
	FeatureAccess           []EFeatureAccess    `protobuf:"varint,4,rep,packed,name=feature_access,json=featureAccess,enum=axxonsoft.bl.security.EFeatureAccess" json:"feature_access,omitempty"`
	AlertAccess             EAlertAccess        `protobuf:"varint,5,opt,name=alert_access,json=alertAccess,enum=axxonsoft.bl.security.EAlertAccess" json:"alert_access,omitempty"`
	BookmarkAccess          EBookmarkAccess     `protobuf:"varint,6,opt,name=bookmark_access,json=bookmarkAccess,enum=axxonsoft.bl.security.EBookmarkAccess" json:"bookmark_access,omitempty"`
	DefaultCameraAccess     ECameraAccess       `protobuf:"varint,10,opt,name=default_camera_access,json=defaultCameraAccess,enum=axxonsoft.bl.security.ECameraAccess" json:"default_camera_access,omitempty"`
	DefaultMicrophoneAccess EMicrophoneAccess   `protobuf:"varint,11,opt,name=default_microphone_access,json=defaultMicrophoneAccess,enum=axxonsoft.bl.security.EMicrophoneAccess" json:"default_microphone_access,omitempty"`
	DefaultAcrhiveAccess    EArchiveAccess      `protobuf:"varint,13,opt,name=default_acrhive_access,json=defaultAcrhiveAccess,enum=axxonsoft.bl.security.EArchiveAccess" json:"default_acrhive_access,omitempty"`
	DefaultVidewallAccess   EVideowallAccess    `protobuf:"varint,14,opt,name=default_videwall_access,json=defaultVidewallAccess,enum=axxonsoft.bl.security.EVideowallAccess" json:"default_videwall_access,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}            `json:"-"`
	XXX_unrecognized        []byte              `json:"-"`
	XXX_sizecache           int32               `json:"-"`
}

func (m *GlobalPermissions) Reset()         { *m = GlobalPermissions{} }
func (m *GlobalPermissions) String() string { return proto.CompactTextString(m) }
func (*GlobalPermissions) ProtoMessage()    {}
func (*GlobalPermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_GlobalPermissions_b0714f60568bc979, []int{0}
}
func (m *GlobalPermissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalPermissions.Unmarshal(m, b)
}
func (m *GlobalPermissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalPermissions.Marshal(b, m, deterministic)
}
func (dst *GlobalPermissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalPermissions.Merge(dst, src)
}
func (m *GlobalPermissions) XXX_Size() int {
	return xxx_messageInfo_GlobalPermissions.Size(m)
}
func (m *GlobalPermissions) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalPermissions.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalPermissions proto.InternalMessageInfo

func (m *GlobalPermissions) GetUnrestrictedAccess() EUnrestrictedAccess {
	if m != nil {
		return m.UnrestrictedAccess
	}
	return EUnrestrictedAccess_UNRESTRICTED_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetMapsAccess() EMapAccess {
	if m != nil {
		return m.MapsAccess
	}
	return EMapAccess_MAP_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetFeatureAccess() []EFeatureAccess {
	if m != nil {
		return m.FeatureAccess
	}
	return nil
}

func (m *GlobalPermissions) GetAlertAccess() EAlertAccess {
	if m != nil {
		return m.AlertAccess
	}
	return EAlertAccess_ALLERT_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetBookmarkAccess() EBookmarkAccess {
	if m != nil {
		return m.BookmarkAccess
	}
	return EBookmarkAccess_BOOKMARK_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetDefaultCameraAccess() ECameraAccess {
	if m != nil {
		return m.DefaultCameraAccess
	}
	return ECameraAccess_CAMERA_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetDefaultMicrophoneAccess() EMicrophoneAccess {
	if m != nil {
		return m.DefaultMicrophoneAccess
	}
	return EMicrophoneAccess_MICROPHONE_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetDefaultAcrhiveAccess() EArchiveAccess {
	if m != nil {
		return m.DefaultAcrhiveAccess
	}
	return EArchiveAccess_ARCHIVE_ACCESS_UNSPECIFIED
}

func (m *GlobalPermissions) GetDefaultVidewallAccess() EVideowallAccess {
	if m != nil {
		return m.DefaultVidewallAccess
	}
	return EVideowallAccess_VIDEOWALL_ACCESS_UNSPECIFIED
}

func init() {
	proto.RegisterType((*GlobalPermissions)(nil), "axxonsoft.bl.security.GlobalPermissions")
	proto.RegisterEnum("axxonsoft.bl.security.EMapAccess", EMapAccess_name, EMapAccess_value)
	proto.RegisterEnum("axxonsoft.bl.security.EFeatureAccess", EFeatureAccess_name, EFeatureAccess_value)
	proto.RegisterEnum("axxonsoft.bl.security.EAlertAccess", EAlertAccess_name, EAlertAccess_value)
	proto.RegisterEnum("axxonsoft.bl.security.EUnrestrictedAccess", EUnrestrictedAccess_name, EUnrestrictedAccess_value)
	proto.RegisterEnum("axxonsoft.bl.security.EBookmarkAccess", EBookmarkAccess_name, EBookmarkAccess_value)
}

func init() {
	proto.RegisterFile("axxonsoft/bl/security/GlobalPermissions.proto", fileDescriptor_GlobalPermissions_b0714f60568bc979)
}

var fileDescriptor_GlobalPermissions_b0714f60568bc979 = []byte{
	// 1032 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x96, 0xff, 0x52, 0xdb, 0x46,
	0x10, 0xc7, 0x43, 0x20, 0x24, 0x5d, 0xc0, 0x5c, 0x0e, 0xe3, 0x00, 0x49, 0x08, 0x3f, 0x02, 0x61,
	0x3c, 0x53, 0xd3, 0xa6, 0xed, 0x03, 0x9c, 0xa5, 0xb3, 0x39, 0x22, 0xe9, 0x3c, 0x77, 0x27, 0x03,
	0xc9, 0x1f, 0x37, 0xb2, 0x11, 0x8d, 0x8b, 0x41, 0x8c, 0x6c, 0xa7, 0xe9, 0x4c, 0x5f, 0xa0, 0x0f,
	0xd2, 0x37, 0xe8, 0x5f, 0x7d, 0xba, 0x8e, 0x64, 0xc9, 0xb1, 0x6c, 0xa9, 0x7f, 0xea, 0xf6, 0xbb,
	0x9f, 0xdd, 0xdb, 0xdd, 0xbb, 0x13, 0x7c, 0xef, 0x7d, 0xfd, 0x1a, 0xdc, 0x0f, 0x82, 0x9b, 0xe1,
	0x69, 0xa7, 0x7f, 0x3a, 0xf0, 0xbb, 0xa3, 0xb0, 0x37, 0xfc, 0xe3, 0xb4, 0xd9, 0x0f, 0x3a, 0x5e,
	0xbf, 0xe5, 0x87, 0x77, 0xbd, 0xc1, 0xa0, 0x17, 0xdc, 0x0f, 0x6a, 0x0f, 0x61, 0x30, 0x0c, 0xf0,
	0xe6, 0x44, 0x5e, 0xeb, 0xf4, 0x6b, 0xa9, 0x7c, 0xa7, 0x96, 0x4f, 0xe1, 0x9d, 0xdf, 0xfc, 0xee,
	0x70, 0x30, 0x87, 0x39, 0xf8, 0x7b, 0x19, 0x9e, 0xcf, 0x85, 0xc0, 0x9f, 0x60, 0x63, 0x74, 0x1f,
	0xfa, 0x83, 0x61, 0xd8, 0xeb, 0x0e, 0xfd, 0x6b, 0xed, 0x75, 0xbb, 0xfe, 0x60, 0xb0, 0xb5, 0xb0,
	0xb7, 0x70, 0x52, 0x7a, 0x5f, 0xad, 0xe5, 0x86, 0xae, 0x51, 0x77, 0xca, 0x85, 0xc4, 0x1e, 0x02,
	0x8f, 0xe6, 0xd6, 0x70, 0x1d, 0x56, 0xee, 0xbc, 0x87, 0x41, 0x0a, 0x5d, 0x8c, 0xa1, 0xfb, 0x45,
	0x50, 0xdb, 0x7b, 0x48, 0x58, 0x10, 0x79, 0x25, 0x0c, 0x0b, 0x4a, 0x37, 0xbe, 0x37, 0x1c, 0x85,
	0x7e, 0x8a, 0x59, 0xda, 0x5b, 0x3c, 0x29, 0xbd, 0x3f, 0x2a, 0xc2, 0x34, 0xc6, 0xea, 0x04, 0xb5,
	0x76, 0x33, 0xfd, 0x89, 0x1b, 0xb0, 0xea, 0xf5, 0xfd, 0x70, 0x98, 0xb2, 0x9e, 0xc4, 0x29, 0x1d,
	0x16, 0xb1, 0x48, 0xa4, 0x4d, 0x48, 0x2b, 0xde, 0xb7, 0x0f, 0xcc, 0x61, 0xbd, 0x13, 0x04, 0xb7,
	0x77, 0x5e, 0x78, 0x9b, 0xa2, 0x96, 0x63, 0xd4, 0x71, 0x11, 0xaa, 0x9e, 0xc8, 0x13, 0x5a, 0xa9,
	0x93, 0xf9, 0xc6, 0x97, 0xb0, 0x79, 0xed, 0xdf, 0x78, 0xa3, 0xfe, 0x50, 0x77, 0xbd, 0x3b, 0x3f,
	0xf4, 0x52, 0x2c, 0xc4, 0xd8, 0xb7, 0x45, 0x58, 0x23, 0x16, 0x27, 0xd0, 0x8d, 0x04, 0x31, 0xbd,
	0x88, 0xaf, 0x61, 0x3b, 0x25, 0xdf, 0xf5, 0xba, 0x61, 0xf0, 0xf0, 0x39, 0xb8, 0x9f, 0xd4, 0x72,
	0x25, 0xa6, 0x9f, 0x14, 0xb6, 0x64, 0xe2, 0x90, 0x44, 0x78, 0x91, 0xa0, 0x66, 0x0d, 0xf8, 0x13,
	0x54, 0xd2, 0x28, 0x5e, 0x37, 0xfc, 0xdc, 0xfb, 0x32, 0x09, 0xb1, 0x16, 0x87, 0x28, 0x6c, 0x17,
	0x09, 0xbb, 0x91, 0x3a, 0xe1, 0x97, 0x13, 0x08, 0x19, 0x33, 0x12, 0xb8, 0x86, 0x34, 0xae, 0xfe,
	0xd2, 0xbb, 0xf6, 0x7f, 0xf7, 0xfa, 0xfd, 0x94, 0x5e, 0x8a, 0xe9, 0xef, 0x8a, 0xe8, 0xed, 0xde,
	0xb5, 0x1f, 0x44, 0xfa, 0x84, 0x9f, 0x16, 0xb9, 0x9d, 0x60, 0xc6, 0xcb, 0xe7, 0x4b, 0xcf, 0x1e,
	0xa3, 0xc5, 0xf3, 0xa5, 0x67, 0xab, 0x68, 0xad, 0xfa, 0xd7, 0x02, 0xc0, 0xb7, 0x59, 0xc4, 0x3b,
	0x50, 0xb1, 0x49, 0x4b, 0x13, 0xc3, 0xa0, 0x52, 0x6a, 0xd7, 0x91, 0x2d, 0x6a, 0xb0, 0x06, 0xa3,
	0x26, 0x7a, 0x84, 0x37, 0xe1, 0xf9, 0x94, 0xad, 0xc1, 0x45, 0x9d, 0x99, 0x08, 0xf0, 0x16, 0x94,
	0xa7, 0x96, 0xdb, 0x8c, 0x5e, 0x68, 0xee, 0x58, 0x57, 0xa8, 0x8c, 0xb7, 0x61, 0x73, 0xd6, 0x22,
	0x0d, 0x62, 0x51, 0xb4, 0x8b, 0x37, 0x60, 0x7d, 0x9a, 0xe5, 0x5a, 0x16, 0x3a, 0xa9, 0xfe, 0xf3,
	0x14, 0x4a, 0xd9, 0x81, 0xc6, 0xaf, 0x60, 0xab, 0xe1, 0x2a, 0x57, 0xd0, 0x6c, 0x58, 0x4d, 0x2c,
	0x0b, 0x3d, 0xc2, 0x6f, 0xe0, 0x65, 0xd6, 0x6a, 0xd2, 0x36, 0x33, 0xa8, 0xd4, 0x92, 0x2a, 0xb7,
	0x85, 0x16, 0xf0, 0x1e, 0xbc, 0xca, 0x0a, 0x88, 0x30, 0xce, 0x58, 0x7b, 0xa2, 0x78, 0x8c, 0xf7,
	0xe1, 0xf5, 0x2c, 0x42, 0x51, 0x43, 0x71, 0x91, 0x4a, 0x16, 0xf1, 0x5b, 0xd8, 0xcb, 0x4a, 0x5c,
	0x49, 0x85, 0xd4, 0x82, 0x35, 0xcf, 0x54, 0xaa, 0x5a, 0xc2, 0x07, 0xb0, 0x9b, 0x55, 0x19, 0x67,
	0xc4, 0x69, 0x32, 0xa7, 0xa9, 0x2d, 0x72, 0xc5, 0x5d, 0x25, 0xd1, 0x93, 0xa8, 0x54, 0x59, 0x0d,
	0xbd, 0x6c, 0x71, 0xa1, 0xd0, 0x32, 0x7e, 0x0d, 0xdb, 0x59, 0x4b, 0xe2, 0xa4, 0x15, 0xa9, 0xa3,
	0xa7, 0xf3, 0xfb, 0x90, 0x54, 0x29, 0xe6, 0x34, 0xd3, 0xf0, 0xcf, 0xf0, 0x3b, 0x38, 0xcc, 0x2a,
	0x6c, 0xe6, 0xd8, 0xe4, 0x52, 0xd7, 0x5d, 0xa5, 0xb8, 0x13, 0xd5, 0x8b, 0x5f, 0x50, 0x13, 0x7d,
	0x97, 0x83, 0xba, 0x92, 0x8a, 0xda, 0xfa, 0x9c, 0xbb, 0xc2, 0x21, 0x16, 0x02, 0x7c, 0x04, 0xfb,
	0x33, 0x25, 0xe1, 0x36, 0x61, 0x8e, 0xb6, 0x89, 0x43, 0xe2, 0x0d, 0xf1, 0x96, 0x44, 0x2b, 0xf8,
	0x67, 0xf8, 0x61, 0xa6, 0xb6, 0xa6, 0xa9, 0x0d, 0x62, 0x53, 0x41, 0xb4, 0xe2, 0xc9, 0x06, 0x74,
	0xe4, 0xc7, 0x1d, 0xa6, 0xb8, 0x60, 0x4e, 0x13, 0xad, 0xce, 0x97, 0x40, 0xd2, 0xa8, 0x27, 0x68,
	0x6d, 0xbe, 0x80, 0xd4, 0x64, 0x4a, 0xb7, 0xd4, 0x47, 0xdd, 0x12, 0x54, 0x52, 0x25, 0x51, 0x09,
	0x1f, 0xc2, 0x9b, 0xac, 0xa6, 0x25, 0x78, 0x53, 0x10, 0xdb, 0x8e, 0xd2, 0x1a, 0x97, 0x62, 0x1d,
	0xef, 0xc2, 0x4e, 0x56, 0x74, 0x41, 0xeb, 0xda, 0x65, 0xda, 0xe2, 0x4d, 0xe6, 0x20, 0x84, 0xab,
	0x70, 0x3c, 0x93, 0x78, 0x54, 0x9c, 0xb4, 0x52, 0x36, 0x75, 0xdc, 0x64, 0x1b, 0x08, 0xcf, 0x07,
	0x1c, 0x6b, 0xe5, 0x19, 0xbf, 0xd0, 0x8a, 0x29, 0x8b, 0x4a, 0xb4, 0x31, 0x5f, 0xb0, 0xd8, 0x4c,
	0x85, 0xe0, 0x42, 0xdb, 0x54, 0x4a, 0xd2, 0xa4, 0x12, 0x95, 0xe7, 0xa7, 0x95, 0x49, 0xdd, 0x74,
	0x89, 0x30, 0xb5, 0xe0, 0x16, 0x45, 0x9b, 0xf8, 0x18, 0x0e, 0xf2, 0x82, 0x99, 0xd4, 0xa2, 0x8a,
	0x6a, 0x41, 0x0d, 0x2e, 0x4c, 0x89, 0x2a, 0xf8, 0x17, 0xf8, 0xb1, 0x30, 0xa9, 0x96, 0x60, 0x6d,
	0x62, 0x5c, 0xe9, 0x36, 0x33, 0x29, 0x8f, 0xaa, 0x9f, 0x4c, 0x3c, 0x7a, 0x51, 0xb4, 0xef, 0xd8,
	0xad, 0x41, 0xa2, 0x63, 0xc3, 0x1c, 0x6d, 0x45, 0xda, 0xad, 0x22, 0xad, 0xeb, 0xb4, 0x04, 0x8f,
	0xce, 0x07, 0x35, 0xd3, 0xd9, 0xdd, 0xae, 0xfe, 0x09, 0xab, 0xd3, 0x4f, 0x47, 0x34, 0xcb, 0xc4,
	0xb2, 0xa8, 0x50, 0xf9, 0xd7, 0xc8, 0x16, 0x94, 0xb3, 0xe6, 0xc9, 0x4d, 0xf2, 0x12, 0x5e, 0x64,
	0x2d, 0xd3, 0x97, 0x49, 0x05, 0xf0, 0x8c, 0x5b, 0x74, 0x69, 0xec, 0x56, 0x07, 0xb0, 0x91, 0xf3,
	0x40, 0x47, 0x8d, 0x73, 0x1d, 0x41, 0xa5, 0x12, 0x2c, 0xce, 0x36, 0x37, 0x95, 0x1d, 0xa8, 0xe4,
	0x89, 0x1c, 0x3e, 0x4e, 0x26, 0xcf, 0x76, 0x15, 0xb5, 0xb2, 0xfa, 0xef, 0x02, 0xac, 0xcf, 0xbc,
	0x71, 0x51, 0x7b, 0xeb, 0x9c, 0x7f, 0xb0, 0x89, 0xf8, 0x90, 0x1f, 0xad, 0x02, 0x78, 0x56, 0x10,
	0x47, 0xda, 0x81, 0xca, 0xec, 0xba, 0x21, 0x28, 0x51, 0x14, 0x95, 0xa3, 0x43, 0x91, 0x6f, 0xd3,
	0x49, 0x23, 0xd0, 0x2e, 0xae, 0x41, 0xf5, 0xff, 0x35, 0xe3, 0x93, 0x34, 0x1e, 0x23, 0x74, 0x52,
	0x3f, 0xfa, 0x78, 0xd8, 0xe9, 0x0d, 0x3b, 0xa3, 0xee, 0xad, 0x3f, 0xac, 0x05, 0xe1, 0xaf, 0xa7,
	0x24, 0xef, 0xd7, 0xaa, 0xb3, 0x1c, 0xff, 0x48, 0xfd, 0xf4, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x02, 0xe0, 0x8e, 0x62, 0xc0, 0x09, 0x00, 0x00,
}
