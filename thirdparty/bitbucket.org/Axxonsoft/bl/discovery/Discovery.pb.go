// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/discovery/Discovery.proto

package discovery // import "bitbucket.org/Axxonsoft/bl/discovery"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EProgressState int32

const (
	EProgressState_PROGRESS_STATE_NEVER_RAN   EProgressState = 0
	EProgressState_PROGRESS_STATE_RUNNING     EProgressState = 1
	EProgressState_PROGRESS_STATE_COMPLETED   EProgressState = 2
	EProgressState_PROGRESS_STATE_INTERRUPTED EProgressState = 3
)

var EProgressState_name = map[int32]string{
	0: "PROGRESS_STATE_NEVER_RAN",
	1: "PROGRESS_STATE_RUNNING",
	2: "PROGRESS_STATE_COMPLETED",
	3: "PROGRESS_STATE_INTERRUPTED",
}
var EProgressState_value = map[string]int32{
	"PROGRESS_STATE_NEVER_RAN":   0,
	"PROGRESS_STATE_RUNNING":     1,
	"PROGRESS_STATE_COMPLETED":   2,
	"PROGRESS_STATE_INTERRUPTED": 3,
}

func (x EProgressState) String() string {
	return proto.EnumName(EProgressState_name, int32(x))
}
func (EProgressState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Discovery_5316ef194333f19a, []int{0}
}

type DeviceDescription struct {
	Driver               string   `protobuf:"bytes,1,opt,name=driver" json:"driver,omitempty"`
	DriverVersion        string   `protobuf:"bytes,2,opt,name=driver_version,json=driverVersion" json:"driver_version,omitempty"`
	MacAddress           string   `protobuf:"bytes,3,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	IpAddress            string   `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	WanAddress           string   `protobuf:"bytes,5,opt,name=wan_address,json=wanAddress" json:"wan_address,omitempty"`
	IpPort               uint32   `protobuf:"varint,6,opt,name=ip_port,json=ipPort" json:"ip_port,omitempty"`
	Vendor               string   `protobuf:"bytes,7,opt,name=vendor" json:"vendor,omitempty"`
	Model                string   `protobuf:"bytes,8,opt,name=model" json:"model,omitempty"`
	FirmwareVersion      string   `protobuf:"bytes,9,opt,name=firmware_version,json=firmwareVersion" json:"firmware_version,omitempty"`
	DeviceDescription    string   `protobuf:"bytes,10,opt,name=device_description,json=deviceDescription" json:"device_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceDescription) Reset()         { *m = DeviceDescription{} }
func (m *DeviceDescription) String() string { return proto.CompactTextString(m) }
func (*DeviceDescription) ProtoMessage()    {}
func (*DeviceDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_Discovery_5316ef194333f19a, []int{0}
}
func (m *DeviceDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceDescription.Unmarshal(m, b)
}
func (m *DeviceDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceDescription.Marshal(b, m, deterministic)
}
func (dst *DeviceDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceDescription.Merge(dst, src)
}
func (m *DeviceDescription) XXX_Size() int {
	return xxx_messageInfo_DeviceDescription.Size(m)
}
func (m *DeviceDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceDescription.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceDescription proto.InternalMessageInfo

func (m *DeviceDescription) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *DeviceDescription) GetDriverVersion() string {
	if m != nil {
		return m.DriverVersion
	}
	return ""
}

func (m *DeviceDescription) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *DeviceDescription) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *DeviceDescription) GetWanAddress() string {
	if m != nil {
		return m.WanAddress
	}
	return ""
}

func (m *DeviceDescription) GetIpPort() uint32 {
	if m != nil {
		return m.IpPort
	}
	return 0
}

func (m *DeviceDescription) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *DeviceDescription) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *DeviceDescription) GetFirmwareVersion() string {
	if m != nil {
		return m.FirmwareVersion
	}
	return ""
}

func (m *DeviceDescription) GetDeviceDescription() string {
	if m != nil {
		return m.DeviceDescription
	}
	return ""
}

type GetDiscoveryProgressResponse struct {
	State                EProgressState       `protobuf:"varint,1,opt,name=state,enum=axxonsoft.bl.discovery.EProgressState" json:"state,omitempty"`
	HasNewData           bool                 `protobuf:"varint,2,opt,name=has_new_data,json=hasNewData" json:"has_new_data,omitempty"`
	Promille             int32                `protobuf:"varint,3,opt,name=promille" json:"promille,omitempty"`
	FinishedTime         int64                `protobuf:"zigzag64,4,opt,name=finished_time,json=finishedTime" json:"finished_time,omitempty"`
	DeviceDescription    []*DeviceDescription `protobuf:"bytes,5,rep,name=device_description,json=deviceDescription" json:"device_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDiscoveryProgressResponse) Reset()         { *m = GetDiscoveryProgressResponse{} }
func (m *GetDiscoveryProgressResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiscoveryProgressResponse) ProtoMessage()    {}
func (*GetDiscoveryProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Discovery_5316ef194333f19a, []int{1}
}
func (m *GetDiscoveryProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscoveryProgressResponse.Unmarshal(m, b)
}
func (m *GetDiscoveryProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscoveryProgressResponse.Marshal(b, m, deterministic)
}
func (dst *GetDiscoveryProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscoveryProgressResponse.Merge(dst, src)
}
func (m *GetDiscoveryProgressResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiscoveryProgressResponse.Size(m)
}
func (m *GetDiscoveryProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscoveryProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscoveryProgressResponse proto.InternalMessageInfo

func (m *GetDiscoveryProgressResponse) GetState() EProgressState {
	if m != nil {
		return m.State
	}
	return EProgressState_PROGRESS_STATE_NEVER_RAN
}

func (m *GetDiscoveryProgressResponse) GetHasNewData() bool {
	if m != nil {
		return m.HasNewData
	}
	return false
}

func (m *GetDiscoveryProgressResponse) GetPromille() int32 {
	if m != nil {
		return m.Promille
	}
	return 0
}

func (m *GetDiscoveryProgressResponse) GetFinishedTime() int64 {
	if m != nil {
		return m.FinishedTime
	}
	return 0
}

func (m *GetDiscoveryProgressResponse) GetDeviceDescription() []*DeviceDescription {
	if m != nil {
		return m.DeviceDescription
	}
	return nil
}

type ProbeRequest struct {
	ConnectionInfo       string   `protobuf:"bytes,1,opt,name=connection_info,json=connectionInfo" json:"connection_info,omitempty"`
	Brand                string   `protobuf:"bytes,2,opt,name=brand" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeRequest) Reset()         { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()    {}
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Discovery_5316ef194333f19a, []int{2}
}
func (m *ProbeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeRequest.Unmarshal(m, b)
}
func (m *ProbeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeRequest.Marshal(b, m, deterministic)
}
func (dst *ProbeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeRequest.Merge(dst, src)
}
func (m *ProbeRequest) XXX_Size() int {
	return xxx_messageInfo_ProbeRequest.Size(m)
}
func (m *ProbeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeRequest proto.InternalMessageInfo

func (m *ProbeRequest) GetConnectionInfo() string {
	if m != nil {
		return m.ConnectionInfo
	}
	return ""
}

func (m *ProbeRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

type ProbeResponse struct {
	DeviceDescription    []*DeviceDescription `protobuf:"bytes,1,rep,name=device_description,json=deviceDescription" json:"device_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProbeResponse) Reset()         { *m = ProbeResponse{} }
func (m *ProbeResponse) String() string { return proto.CompactTextString(m) }
func (*ProbeResponse) ProtoMessage()    {}
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Discovery_5316ef194333f19a, []int{3}
}
func (m *ProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeResponse.Unmarshal(m, b)
}
func (m *ProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeResponse.Marshal(b, m, deterministic)
}
func (dst *ProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeResponse.Merge(dst, src)
}
func (m *ProbeResponse) XXX_Size() int {
	return xxx_messageInfo_ProbeResponse.Size(m)
}
func (m *ProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeResponse proto.InternalMessageInfo

func (m *ProbeResponse) GetDeviceDescription() []*DeviceDescription {
	if m != nil {
		return m.DeviceDescription
	}
	return nil
}

func init() {
	proto.RegisterType((*DeviceDescription)(nil), "axxonsoft.bl.discovery.DeviceDescription")
	proto.RegisterType((*GetDiscoveryProgressResponse)(nil), "axxonsoft.bl.discovery.GetDiscoveryProgressResponse")
	proto.RegisterType((*ProbeRequest)(nil), "axxonsoft.bl.discovery.ProbeRequest")
	proto.RegisterType((*ProbeResponse)(nil), "axxonsoft.bl.discovery.ProbeResponse")
	proto.RegisterEnum("axxonsoft.bl.discovery.EProgressState", EProgressState_name, EProgressState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DiscoveryService service

type DiscoveryServiceClient interface {
	Discover(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	GetDiscoveryProgress(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (DiscoveryService_GetDiscoveryProgressClient, error)
	Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error)
}

type discoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryServiceClient(cc *grpc.ClientConn) DiscoveryServiceClient {
	return &discoveryServiceClient{cc}
}

func (c *discoveryServiceClient) Discover(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.discovery.DiscoveryService/Discover", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryServiceClient) GetDiscoveryProgress(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (DiscoveryService_GetDiscoveryProgressClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DiscoveryService_serviceDesc.Streams[0], c.cc, "/axxonsoft.bl.discovery.DiscoveryService/GetDiscoveryProgress", opts...)
	if err != nil {
		return nil, err
	}
	x := &discoveryServiceGetDiscoveryProgressClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiscoveryService_GetDiscoveryProgressClient interface {
	Recv() (*GetDiscoveryProgressResponse, error)
	grpc.ClientStream
}

type discoveryServiceGetDiscoveryProgressClient struct {
	grpc.ClientStream
}

func (x *discoveryServiceGetDiscoveryProgressClient) Recv() (*GetDiscoveryProgressResponse, error) {
	m := new(GetDiscoveryProgressResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *discoveryServiceClient) Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error) {
	out := new(ProbeResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.discovery.DiscoveryService/Probe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DiscoveryService service

type DiscoveryServiceServer interface {
	Discover(context.Context, *empty.Empty) (*empty.Empty, error)
	GetDiscoveryProgress(*empty.Empty, DiscoveryService_GetDiscoveryProgressServer) error
	Probe(context.Context, *ProbeRequest) (*ProbeResponse, error)
}

func RegisterDiscoveryServiceServer(s *grpc.Server, srv DiscoveryServiceServer) {
	s.RegisterService(&_DiscoveryService_serviceDesc, srv)
}

func _DiscoveryService_Discover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServiceServer).Discover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.discovery.DiscoveryService/Discover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServiceServer).Discover(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryService_GetDiscoveryProgress_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiscoveryServiceServer).GetDiscoveryProgress(m, &discoveryServiceGetDiscoveryProgressServer{stream})
}

type DiscoveryService_GetDiscoveryProgressServer interface {
	Send(*GetDiscoveryProgressResponse) error
	grpc.ServerStream
}

type discoveryServiceGetDiscoveryProgressServer struct {
	grpc.ServerStream
}

func (x *discoveryServiceGetDiscoveryProgressServer) Send(m *GetDiscoveryProgressResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DiscoveryService_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServiceServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.discovery.DiscoveryService/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServiceServer).Probe(ctx, req.(*ProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.discovery.DiscoveryService",
	HandlerType: (*DiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Discover",
			Handler:    _DiscoveryService_Discover_Handler,
		},
		{
			MethodName: "Probe",
			Handler:    _DiscoveryService_Probe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDiscoveryProgress",
			Handler:       _DiscoveryService_GetDiscoveryProgress_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "axxonsoft/bl/discovery/Discovery.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/discovery/Discovery.proto", fileDescriptor_Discovery_5316ef194333f19a)
}

var fileDescriptor_Discovery_5316ef194333f19a = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0xbd, 0x49, 0x6f, 0xd2, 0x74, 0xda, 0xa4, 0xe9, 0xaa, 0xca, 0xb5, 0x72, 0x0b, 0x8d, 0x4a,
	0x5b, 0x5a, 0x24, 0x1c, 0x54, 0x78, 0x42, 0xbc, 0x04, 0x62, 0x55, 0x95, 0x68, 0x1a, 0x6d, 0xd2,
	0x0a, 0xf1, 0x62, 0xad, 0xed, 0x49, 0xba, 0x22, 0xde, 0x35, 0xeb, 0x6d, 0x52, 0xfe, 0x80, 0x07,
	0x7e, 0x80, 0xff, 0xe2, 0x83, 0x90, 0xd7, 0xb1, 0x0b, 0x25, 0x81, 0x07, 0xde, 0x3c, 0xe7, 0x9c,
	0x19, 0xcd, 0x9c, 0x99, 0x35, 0x1c, 0xb2, 0xdb, 0x5b, 0x29, 0x62, 0x39, 0xd2, 0x6d, 0x6f, 0xd2,
	0x0e, 0x78, 0xec, 0xcb, 0x29, 0xaa, 0x4f, 0xed, 0x6e, 0xf6, 0x65, 0x47, 0x4a, 0x6a, 0x49, 0x1a,
	0xb9, 0xce, 0xf6, 0x26, 0x76, 0xae, 0x6b, 0xee, 0x8c, 0xa5, 0x1c, 0x4f, 0xb0, 0xcd, 0x22, 0xde,
	0x66, 0x42, 0x48, 0xcd, 0x34, 0x97, 0x22, 0x4e, 0xb3, 0x9a, 0xff, 0xcf, 0x59, 0x13, 0x79, 0x37,
	0xa3, 0x36, 0x86, 0x91, 0x9e, 0x97, 0xdc, 0xfb, 0x56, 0x84, 0xad, 0x2e, 0x4e, 0xb9, 0x8f, 0x5d,
	0x8c, 0x7d, 0xc5, 0xa3, 0x24, 0x93, 0x34, 0xa0, 0x1c, 0x28, 0x3e, 0x45, 0x65, 0x15, 0x5a, 0x85,
	0xa3, 0x35, 0x3a, 0x8f, 0xc8, 0x01, 0xd4, 0xd2, 0x2f, 0x77, 0x8a, 0x2a, 0xe6, 0x52, 0x58, 0x45,
	0xc3, 0x57, 0x53, 0xf4, 0x2a, 0x05, 0xc9, 0x2e, 0xac, 0x87, 0xcc, 0x77, 0x59, 0x10, 0x28, 0x8c,
	0x63, 0x6b, 0xc5, 0x68, 0x20, 0x64, 0x7e, 0x27, 0x45, 0xc8, 0x03, 0x00, 0x1e, 0xe5, 0xfc, 0xbf,
	0x86, 0x5f, 0xe3, 0x51, 0x46, 0xef, 0xc2, 0xfa, 0x8c, 0x89, 0x9c, 0x2f, 0xa5, 0xf9, 0x33, 0x26,
	0x32, 0xc1, 0x7f, 0xb0, 0xca, 0x23, 0x37, 0x92, 0x4a, 0x5b, 0xe5, 0x56, 0xe1, 0xa8, 0x4a, 0xcb,
	0x3c, 0xea, 0x4b, 0xa5, 0x93, 0xc6, 0xa7, 0x28, 0x02, 0xa9, 0xac, 0xd5, 0xb4, 0xf1, 0x34, 0x22,
	0xdb, 0x50, 0x0a, 0x65, 0x80, 0x13, 0xab, 0x62, 0xe0, 0x34, 0x20, 0xc7, 0x50, 0x1f, 0x71, 0x15,
	0xce, 0x98, 0xc2, 0x7c, 0xa0, 0x35, 0x23, 0xd8, 0xcc, 0xf0, 0x6c, 0xa4, 0xa7, 0x40, 0x02, 0x63,
	0x93, 0x1b, 0xdc, 0xf9, 0x64, 0x81, 0x11, 0x6f, 0x05, 0xf7, 0x0d, 0xdc, 0xfb, 0x5a, 0x84, 0x9d,
	0x53, 0xd4, 0xf9, 0x02, 0xfb, 0x4a, 0x8e, 0x93, 0xce, 0x29, 0xc6, 0x91, 0x14, 0x31, 0x92, 0x57,
	0x50, 0x8a, 0x35, 0xd3, 0x68, 0x0c, 0xae, 0x9d, 0x1c, 0xda, 0x8b, 0x57, 0x6b, 0x3b, 0x59, 0xe6,
	0x20, 0x51, 0xd3, 0x34, 0x89, 0xb4, 0x60, 0xe3, 0x9a, 0xc5, 0xae, 0xc0, 0x99, 0x1b, 0x30, 0xcd,
	0xcc, 0x16, 0x2a, 0x14, 0xae, 0x59, 0xdc, 0xc3, 0x59, 0x97, 0x69, 0x46, 0x9a, 0x50, 0x89, 0x94,
	0x0c, 0xf9, 0x64, 0x82, 0xc6, 0xff, 0x12, 0xcd, 0x63, 0xf2, 0x08, 0xaa, 0x23, 0x2e, 0x78, 0x7c,
	0x8d, 0x81, 0xab, 0x79, 0x88, 0x66, 0x01, 0x84, 0x6e, 0x64, 0xe0, 0x90, 0x87, 0x48, 0xde, 0x2d,
	0x1c, 0xb8, 0xd4, 0x5a, 0x39, 0x5a, 0x3f, 0x39, 0x5e, 0xd6, 0xed, 0x2f, 0x97, 0xb4, 0xc8, 0x9b,
	0x73, 0xd8, 0xe8, 0x2b, 0xe9, 0x21, 0xc5, 0x8f, 0x37, 0x18, 0x6b, 0xf2, 0x18, 0x36, 0x7d, 0x29,
	0x04, 0xfa, 0x09, 0xeb, 0x72, 0x31, 0x92, 0xf3, 0xab, 0xab, 0xdd, 0xc1, 0x67, 0x62, 0x24, 0x93,
	0x25, 0x7a, 0x8a, 0x89, 0x60, 0x7e, 0x74, 0x69, 0xb0, 0xc7, 0xa1, 0x3a, 0x2f, 0x37, 0xb7, 0x76,
	0x71, 0xe7, 0x85, 0xbf, 0xef, 0xfc, 0xc9, 0xe7, 0x02, 0xd4, 0x7e, 0x5e, 0x08, 0xd9, 0x01, 0xab,
	0x4f, 0x2f, 0x4e, 0xa9, 0x33, 0x18, 0xb8, 0x83, 0x61, 0x67, 0xe8, 0xb8, 0x3d, 0xe7, 0xca, 0xa1,
	0x2e, 0xed, 0xf4, 0xea, 0xff, 0x90, 0x26, 0x34, 0xee, 0xb1, 0xf4, 0xb2, 0xd7, 0x3b, 0xeb, 0x9d,
	0xd6, 0x0b, 0x0b, 0x32, 0xdf, 0x5c, 0x9c, 0xf7, 0xdf, 0x3a, 0x43, 0xa7, 0x5b, 0x2f, 0x92, 0x87,
	0xd0, 0xbc, 0xc7, 0x9e, 0xf5, 0x86, 0x0e, 0xa5, 0x97, 0xfd, 0x84, 0x5f, 0x39, 0xf9, 0x52, 0x84,
	0x7a, 0x7e, 0x5d, 0x03, 0x54, 0x49, 0xab, 0xe4, 0x25, 0x54, 0x32, 0x8c, 0x34, 0xec, 0xf4, 0xd9,
	0xdb, 0xd9, 0xb3, 0xb7, 0x9d, 0xe4, 0xd9, 0x37, 0x97, 0xe0, 0x64, 0x04, 0xdb, 0x8b, 0x0e, 0x76,
	0x69, 0x9d, 0x17, 0xcb, 0x9c, 0xfc, 0xdd, 0xd9, 0x3f, 0x2b, 0x90, 0x21, 0x94, 0xcc, 0xba, 0xc8,
	0xfe, 0xb2, 0x02, 0x3f, 0x1e, 0x47, 0xf3, 0xe0, 0x0f, 0xaa, 0xb4, 0xee, 0xeb, 0xc3, 0xf7, 0xfb,
	0x1e, 0xd7, 0xde, 0x8d, 0xff, 0x01, 0xb5, 0x2d, 0xd5, 0xb8, 0xdd, 0x59, 0xf8, 0x47, 0xf5, 0xca,
	0x66, 0x8a, 0xe7, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xed, 0xe0, 0x8e, 0x99, 0x72, 0x05, 0x00,
	0x00,
}
