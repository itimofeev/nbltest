// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/archive/BackupSource.proto

package archive // import "bitbucket.org/Axxonsoft/bl/archive"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IsBackupInProgressRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBackupInProgressRequest) Reset()         { *m = IsBackupInProgressRequest{} }
func (m *IsBackupInProgressRequest) String() string { return proto.CompactTextString(m) }
func (*IsBackupInProgressRequest) ProtoMessage()    {}
func (*IsBackupInProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{0}
}
func (m *IsBackupInProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBackupInProgressRequest.Unmarshal(m, b)
}
func (m *IsBackupInProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBackupInProgressRequest.Marshal(b, m, deterministic)
}
func (dst *IsBackupInProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBackupInProgressRequest.Merge(dst, src)
}
func (m *IsBackupInProgressRequest) XXX_Size() int {
	return xxx_messageInfo_IsBackupInProgressRequest.Size(m)
}
func (m *IsBackupInProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBackupInProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsBackupInProgressRequest proto.InternalMessageInfo

func (m *IsBackupInProgressRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

type BackupTimeInterval struct {
	BeginTime            uint64   `protobuf:"varint,1,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime              uint64   `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupTimeInterval) Reset()         { *m = BackupTimeInterval{} }
func (m *BackupTimeInterval) String() string { return proto.CompactTextString(m) }
func (*BackupTimeInterval) ProtoMessage()    {}
func (*BackupTimeInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{1}
}
func (m *BackupTimeInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupTimeInterval.Unmarshal(m, b)
}
func (m *BackupTimeInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupTimeInterval.Marshal(b, m, deterministic)
}
func (dst *BackupTimeInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupTimeInterval.Merge(dst, src)
}
func (m *BackupTimeInterval) XXX_Size() int {
	return xxx_messageInfo_BackupTimeInterval.Size(m)
}
func (m *BackupTimeInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupTimeInterval.DiscardUnknown(m)
}

var xxx_messageInfo_BackupTimeInterval proto.InternalMessageInfo

func (m *BackupTimeInterval) GetBeginTime() uint64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *BackupTimeInterval) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type IsBackupInProgressResponse struct {
	InProgress           bool     `protobuf:"varint,1,opt,name=in_progress,json=inProgress" json:"in_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBackupInProgressResponse) Reset()         { *m = IsBackupInProgressResponse{} }
func (m *IsBackupInProgressResponse) String() string { return proto.CompactTextString(m) }
func (*IsBackupInProgressResponse) ProtoMessage()    {}
func (*IsBackupInProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{2}
}
func (m *IsBackupInProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBackupInProgressResponse.Unmarshal(m, b)
}
func (m *IsBackupInProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBackupInProgressResponse.Marshal(b, m, deterministic)
}
func (dst *IsBackupInProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBackupInProgressResponse.Merge(dst, src)
}
func (m *IsBackupInProgressResponse) XXX_Size() int {
	return xxx_messageInfo_IsBackupInProgressResponse.Size(m)
}
func (m *IsBackupInProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBackupInProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsBackupInProgressResponse proto.InternalMessageInfo

func (m *IsBackupInProgressResponse) GetInProgress() bool {
	if m != nil {
		return m.InProgress
	}
	return false
}

type MakeBackupRequest struct {
	AccessPoint          string                `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Intervals            []*BackupTimeInterval `protobuf:"bytes,2,rep,name=intervals" json:"intervals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MakeBackupRequest) Reset()         { *m = MakeBackupRequest{} }
func (m *MakeBackupRequest) String() string { return proto.CompactTextString(m) }
func (*MakeBackupRequest) ProtoMessage()    {}
func (*MakeBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{3}
}
func (m *MakeBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeBackupRequest.Unmarshal(m, b)
}
func (m *MakeBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeBackupRequest.Marshal(b, m, deterministic)
}
func (dst *MakeBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeBackupRequest.Merge(dst, src)
}
func (m *MakeBackupRequest) XXX_Size() int {
	return xxx_messageInfo_MakeBackupRequest.Size(m)
}
func (m *MakeBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeBackupRequest proto.InternalMessageInfo

func (m *MakeBackupRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *MakeBackupRequest) GetIntervals() []*BackupTimeInterval {
	if m != nil {
		return m.Intervals
	}
	return nil
}

type MakeBackupResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	WorkerId             string   `protobuf:"bytes,2,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeBackupResponse) Reset()         { *m = MakeBackupResponse{} }
func (m *MakeBackupResponse) String() string { return proto.CompactTextString(m) }
func (*MakeBackupResponse) ProtoMessage()    {}
func (*MakeBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{4}
}
func (m *MakeBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeBackupResponse.Unmarshal(m, b)
}
func (m *MakeBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeBackupResponse.Marshal(b, m, deterministic)
}
func (dst *MakeBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeBackupResponse.Merge(dst, src)
}
func (m *MakeBackupResponse) XXX_Size() int {
	return xxx_messageInfo_MakeBackupResponse.Size(m)
}
func (m *MakeBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeBackupResponse proto.InternalMessageInfo

func (m *MakeBackupResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *MakeBackupResponse) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type CancelBackupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelBackupResponse) Reset()         { *m = CancelBackupResponse{} }
func (m *CancelBackupResponse) String() string { return proto.CompactTextString(m) }
func (*CancelBackupResponse) ProtoMessage()    {}
func (*CancelBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{5}
}
func (m *CancelBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelBackupResponse.Unmarshal(m, b)
}
func (m *CancelBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelBackupResponse.Marshal(b, m, deterministic)
}
func (dst *CancelBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelBackupResponse.Merge(dst, src)
}
func (m *CancelBackupResponse) XXX_Size() int {
	return xxx_messageInfo_CancelBackupResponse.Size(m)
}
func (m *CancelBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelBackupResponse proto.InternalMessageInfo

type CancelBackupRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelBackupRequest) Reset()         { *m = CancelBackupRequest{} }
func (m *CancelBackupRequest) String() string { return proto.CompactTextString(m) }
func (*CancelBackupRequest) ProtoMessage()    {}
func (*CancelBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{6}
}
func (m *CancelBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelBackupRequest.Unmarshal(m, b)
}
func (m *CancelBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelBackupRequest.Marshal(b, m, deterministic)
}
func (dst *CancelBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelBackupRequest.Merge(dst, src)
}
func (m *CancelBackupRequest) XXX_Size() int {
	return xxx_messageInfo_CancelBackupRequest.Size(m)
}
func (m *CancelBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelBackupRequest proto.InternalMessageInfo

func (m *CancelBackupRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *CancelBackupRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetRestProgressRequest struct {
	AccessPoint          string   `protobuf:"bytes,1,opt,name=access_point,json=accessPoint" json:"access_point,omitempty"`
	Time                 uint64   `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRestProgressRequest) Reset()         { *m = GetRestProgressRequest{} }
func (m *GetRestProgressRequest) String() string { return proto.CompactTextString(m) }
func (*GetRestProgressRequest) ProtoMessage()    {}
func (*GetRestProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{7}
}
func (m *GetRestProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRestProgressRequest.Unmarshal(m, b)
}
func (m *GetRestProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRestProgressRequest.Marshal(b, m, deterministic)
}
func (dst *GetRestProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRestProgressRequest.Merge(dst, src)
}
func (m *GetRestProgressRequest) XXX_Size() int {
	return xxx_messageInfo_GetRestProgressRequest.Size(m)
}
func (m *GetRestProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRestProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRestProgressRequest proto.InternalMessageInfo

func (m *GetRestProgressRequest) GetAccessPoint() string {
	if m != nil {
		return m.AccessPoint
	}
	return ""
}

func (m *GetRestProgressRequest) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type GetRestProgressResponse struct {
	RemainingDuration    uint64   `protobuf:"varint,1,opt,name=remaining_duration,json=remainingDuration" json:"remaining_duration,omitempty"`
	WorkerId             string   `protobuf:"bytes,2,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRestProgressResponse) Reset()         { *m = GetRestProgressResponse{} }
func (m *GetRestProgressResponse) String() string { return proto.CompactTextString(m) }
func (*GetRestProgressResponse) ProtoMessage()    {}
func (*GetRestProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BackupSource_440a7b773b48dd1a, []int{8}
}
func (m *GetRestProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRestProgressResponse.Unmarshal(m, b)
}
func (m *GetRestProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRestProgressResponse.Marshal(b, m, deterministic)
}
func (dst *GetRestProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRestProgressResponse.Merge(dst, src)
}
func (m *GetRestProgressResponse) XXX_Size() int {
	return xxx_messageInfo_GetRestProgressResponse.Size(m)
}
func (m *GetRestProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRestProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRestProgressResponse proto.InternalMessageInfo

func (m *GetRestProgressResponse) GetRemainingDuration() uint64 {
	if m != nil {
		return m.RemainingDuration
	}
	return 0
}

func (m *GetRestProgressResponse) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func init() {
	proto.RegisterType((*IsBackupInProgressRequest)(nil), "axxonsoft.bl.archive.IsBackupInProgressRequest")
	proto.RegisterType((*BackupTimeInterval)(nil), "axxonsoft.bl.archive.BackupTimeInterval")
	proto.RegisterType((*IsBackupInProgressResponse)(nil), "axxonsoft.bl.archive.IsBackupInProgressResponse")
	proto.RegisterType((*MakeBackupRequest)(nil), "axxonsoft.bl.archive.MakeBackupRequest")
	proto.RegisterType((*MakeBackupResponse)(nil), "axxonsoft.bl.archive.MakeBackupResponse")
	proto.RegisterType((*CancelBackupResponse)(nil), "axxonsoft.bl.archive.CancelBackupResponse")
	proto.RegisterType((*CancelBackupRequest)(nil), "axxonsoft.bl.archive.CancelBackupRequest")
	proto.RegisterType((*GetRestProgressRequest)(nil), "axxonsoft.bl.archive.GetRestProgressRequest")
	proto.RegisterType((*GetRestProgressResponse)(nil), "axxonsoft.bl.archive.GetRestProgressResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BackupSourceService service

type BackupSourceServiceClient interface {
	MakeBackup(ctx context.Context, in *MakeBackupRequest, opts ...grpc.CallOption) (*MakeBackupResponse, error)
	CancelBackup(ctx context.Context, in *CancelBackupRequest, opts ...grpc.CallOption) (*CancelBackupResponse, error)
	IsBackupInProgress(ctx context.Context, in *IsBackupInProgressRequest, opts ...grpc.CallOption) (*IsBackupInProgressResponse, error)
	GetRestProgress(ctx context.Context, in *GetRestProgressRequest, opts ...grpc.CallOption) (*GetRestProgressResponse, error)
}

type backupSourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewBackupSourceServiceClient(cc *grpc.ClientConn) BackupSourceServiceClient {
	return &backupSourceServiceClient{cc}
}

func (c *backupSourceServiceClient) MakeBackup(ctx context.Context, in *MakeBackupRequest, opts ...grpc.CallOption) (*MakeBackupResponse, error) {
	out := new(MakeBackupResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.archive.BackupSourceService/MakeBackup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupSourceServiceClient) CancelBackup(ctx context.Context, in *CancelBackupRequest, opts ...grpc.CallOption) (*CancelBackupResponse, error) {
	out := new(CancelBackupResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.archive.BackupSourceService/CancelBackup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupSourceServiceClient) IsBackupInProgress(ctx context.Context, in *IsBackupInProgressRequest, opts ...grpc.CallOption) (*IsBackupInProgressResponse, error) {
	out := new(IsBackupInProgressResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.archive.BackupSourceService/IsBackupInProgress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupSourceServiceClient) GetRestProgress(ctx context.Context, in *GetRestProgressRequest, opts ...grpc.CallOption) (*GetRestProgressResponse, error) {
	out := new(GetRestProgressResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.archive.BackupSourceService/GetRestProgress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BackupSourceService service

type BackupSourceServiceServer interface {
	MakeBackup(context.Context, *MakeBackupRequest) (*MakeBackupResponse, error)
	CancelBackup(context.Context, *CancelBackupRequest) (*CancelBackupResponse, error)
	IsBackupInProgress(context.Context, *IsBackupInProgressRequest) (*IsBackupInProgressResponse, error)
	GetRestProgress(context.Context, *GetRestProgressRequest) (*GetRestProgressResponse, error)
}

func RegisterBackupSourceServiceServer(s *grpc.Server, srv BackupSourceServiceServer) {
	s.RegisterService(&_BackupSourceService_serviceDesc, srv)
}

func _BackupSourceService_MakeBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupSourceServiceServer).MakeBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.archive.BackupSourceService/MakeBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupSourceServiceServer).MakeBackup(ctx, req.(*MakeBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupSourceService_CancelBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupSourceServiceServer).CancelBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.archive.BackupSourceService/CancelBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupSourceServiceServer).CancelBackup(ctx, req.(*CancelBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupSourceService_IsBackupInProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBackupInProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupSourceServiceServer).IsBackupInProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.archive.BackupSourceService/IsBackupInProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupSourceServiceServer).IsBackupInProgress(ctx, req.(*IsBackupInProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupSourceService_GetRestProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRestProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupSourceServiceServer).GetRestProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.archive.BackupSourceService/GetRestProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupSourceServiceServer).GetRestProgress(ctx, req.(*GetRestProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BackupSourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.archive.BackupSourceService",
	HandlerType: (*BackupSourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeBackup",
			Handler:    _BackupSourceService_MakeBackup_Handler,
		},
		{
			MethodName: "CancelBackup",
			Handler:    _BackupSourceService_CancelBackup_Handler,
		},
		{
			MethodName: "IsBackupInProgress",
			Handler:    _BackupSourceService_IsBackupInProgress_Handler,
		},
		{
			MethodName: "GetRestProgress",
			Handler:    _BackupSourceService_GetRestProgress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/archive/BackupSource.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/archive/BackupSource.proto", fileDescriptor_BackupSource_440a7b773b48dd1a)
}

var fileDescriptor_BackupSource_440a7b773b48dd1a = []byte{
	// 485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xd6, 0xba, 0x69, 0x5b, 0xaf, 0x93, 0xd0, 0xbc, 0x69, 0x2b, 0x61, 0x12, 0xc3, 0x42, 0x5a,
	0x41, 0x2c, 0x41, 0xe3, 0x19, 0x24, 0x06, 0x02, 0x05, 0x81, 0x18, 0x19, 0x4f, 0xbc, 0x44, 0x4e,
	0x72, 0x04, 0x2b, 0x99, 0x1d, 0x6c, 0xa7, 0xdb, 0x13, 0x3f, 0x8f, 0xdf, 0x85, 0x9a, 0x98, 0x36,
	0xa5, 0x06, 0xb2, 0xb7, 0xe4, 0xbb, 0xfb, 0xbe, 0xbb, 0xf3, 0x77, 0x36, 0x9c, 0xb0, 0x9b, 0x1b,
	0x29, 0xb4, 0xfc, 0x6a, 0x82, 0xa4, 0x0c, 0x98, 0x4a, 0xbf, 0xf1, 0x29, 0x06, 0xe7, 0x2c, 0x2d,
	0xea, 0xea, 0x52, 0xd6, 0x2a, 0x45, 0xbf, 0x52, 0xd2, 0x48, 0xb2, 0x3f, 0x4f, 0xf4, 0x93, 0xd2,
	0xb7, 0x89, 0xde, 0x51, 0x2e, 0x65, 0x5e, 0x62, 0xc0, 0x2a, 0x1e, 0x30, 0x21, 0xa4, 0x61, 0x86,
	0x4b, 0xa1, 0x5b, 0x0e, 0x7d, 0x01, 0x77, 0x43, 0xdd, 0x6a, 0x85, 0xe2, 0x42, 0xc9, 0x5c, 0xa1,
	0xd6, 0x11, 0x7e, 0xaf, 0x51, 0x1b, 0xf2, 0x00, 0x76, 0x58, 0x9a, 0xa2, 0xd6, 0x71, 0x25, 0xb9,
	0x30, 0xe3, 0xb5, 0xe3, 0xb5, 0xc9, 0x30, 0x1a, 0xb5, 0xd8, 0xc5, 0x0c, 0xa2, 0xef, 0x81, 0xb4,
	0xec, 0xcf, 0xfc, 0x0a, 0x43, 0x61, 0x50, 0x4d, 0x59, 0x49, 0x8e, 0x60, 0x98, 0x60, 0xce, 0xc5,
	0x0c, 0x6c, 0x58, 0x1b, 0xd1, 0x02, 0x20, 0x63, 0xd8, 0x42, 0x91, 0x35, 0xb1, 0x41, 0x13, 0xfb,
	0xfd, 0x4b, 0x9f, 0x83, 0xe7, 0xea, 0x46, 0x57, 0x52, 0x68, 0x24, 0xf7, 0x61, 0xc4, 0x45, 0x5c,
	0x59, 0xb8, 0xd1, 0xdd, 0x8e, 0x80, 0xcf, 0x13, 0xe9, 0x0f, 0xd8, 0xfd, 0xc0, 0x0a, 0x6c, 0x05,
	0xfa, 0x0f, 0x41, 0xde, 0xc0, 0x90, 0xdb, 0xd6, 0xf5, 0x78, 0x70, 0xbc, 0x3e, 0x19, 0x9d, 0x4d,
	0x7c, 0xd7, 0x61, 0xfa, 0xab, 0xb3, 0x46, 0x0b, 0x2a, 0x7d, 0x07, 0xa4, 0x5b, 0xdf, 0xb6, 0x7d,
	0x08, 0x5b, 0x86, 0xe9, 0x22, 0xe6, 0x99, 0xad, 0xbd, 0x39, 0xfb, 0x0d, 0x33, 0x72, 0x0f, 0x86,
	0xd7, 0x52, 0x15, 0xa8, 0x66, 0xa1, 0x41, 0x13, 0xda, 0x6e, 0x81, 0x30, 0xa3, 0x07, 0xb0, 0xff,
	0x8a, 0x89, 0x14, 0xcb, 0x65, 0x35, 0xfa, 0x09, 0xf6, 0x96, 0xf1, 0xde, 0x53, 0x76, 0xfa, 0x18,
	0x74, 0xfb, 0xa0, 0x1f, 0xe1, 0xe0, 0x2d, 0x9a, 0x08, 0xb5, 0xb9, 0xfd, 0x02, 0x10, 0x02, 0x1b,
	0x66, 0xe1, 0x64, 0xf3, 0x4d, 0x11, 0x0e, 0x57, 0x04, 0xed, 0x61, 0x9c, 0x02, 0x51, 0x78, 0xc5,
	0xb8, 0xe0, 0x22, 0x8f, 0xb3, 0x5a, 0x35, 0xcb, 0x68, 0x57, 0x64, 0x77, 0x1e, 0x79, 0x6d, 0x03,
	0xff, 0x3c, 0xa2, 0xb3, 0x9f, 0xeb, 0xb0, 0xd7, 0xbd, 0x06, 0x97, 0xa8, 0xa6, 0x3c, 0x45, 0x12,
	0x03, 0x2c, 0x6c, 0x20, 0x27, 0x6e, 0x27, 0x57, 0x16, 0xc5, 0x9b, 0xfc, 0x3f, 0xd1, 0x0e, 0x81,
	0xb0, 0xd3, 0xf5, 0x80, 0x3c, 0x72, 0x33, 0x1d, 0x3e, 0x79, 0x8f, 0xfb, 0xa4, 0xda, 0x32, 0xd7,
	0x40, 0x56, 0x6f, 0x03, 0x09, 0xdc, 0x0a, 0x7f, 0xbd, 0xc5, 0xde, 0xd3, 0xfe, 0x04, 0x5b, 0x58,
	0xc0, 0x9d, 0x3f, 0xfc, 0x23, 0x4f, 0xdc, 0x22, 0xee, 0xbd, 0xf1, 0x4e, 0x7b, 0x66, 0xb7, 0xf5,
	0xce, 0x1f, 0x7e, 0xa1, 0x09, 0x37, 0x49, 0x9d, 0x16, 0x68, 0x7c, 0xa9, 0xf2, 0xe0, 0xa5, 0xe3,
	0xc5, 0x4b, 0x36, 0x9b, 0x17, 0xeb, 0xd9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xaa, 0x07,
	0xe3, 0x10, 0x05, 0x00, 0x00,
}
