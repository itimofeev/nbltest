// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/config/SharedKeyValueStorage.proto

package config // import "bitbucket.org/Axxonsoft/bl/config"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ESharedKVRecordView int32

const (
	ESharedKVRecordView_ESHKV_FULL     ESharedKVRecordView = 0
	ESharedKVRecordView_ESHKV_STRIPPED ESharedKVRecordView = 1
)

var ESharedKVRecordView_name = map[int32]string{
	0: "ESHKV_FULL",
	1: "ESHKV_STRIPPED",
}
var ESharedKVRecordView_value = map[string]int32{
	"ESHKV_FULL":     0,
	"ESHKV_STRIPPED": 1,
}

func (x ESharedKVRecordView) String() string {
	return proto.EnumName(ESharedKVRecordView_name, int32(x))
}
func (ESharedKVRecordView) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{0}
}

type SharedKVCommitResponse_EErrorCode int32

const (
	SharedKVCommitResponse_EOK       SharedKVCommitResponse_EErrorCode = 0
	SharedKVCommitResponse_EConflict SharedKVCommitResponse_EErrorCode = 1
)

var SharedKVCommitResponse_EErrorCode_name = map[int32]string{
	0: "EOK",
	1: "EConflict",
}
var SharedKVCommitResponse_EErrorCode_value = map[string]int32{
	"EOK":       0,
	"EConflict": 1,
}

func (x SharedKVCommitResponse_EErrorCode) String() string {
	return proto.EnumName(SharedKVCommitResponse_EErrorCode_name, int32(x))
}
func (SharedKVCommitResponse_EErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{7, 0}
}

type SharedKVRecord struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Revision             string   `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharedKVRecord) Reset()         { *m = SharedKVRecord{} }
func (m *SharedKVRecord) String() string { return proto.CompactTextString(m) }
func (*SharedKVRecord) ProtoMessage()    {}
func (*SharedKVRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{0}
}
func (m *SharedKVRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharedKVRecord.Unmarshal(m, b)
}
func (m *SharedKVRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharedKVRecord.Marshal(b, m, deterministic)
}
func (dst *SharedKVRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharedKVRecord.Merge(dst, src)
}
func (m *SharedKVRecord) XXX_Size() int {
	return xxx_messageInfo_SharedKVRecord.Size(m)
}
func (m *SharedKVRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SharedKVRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SharedKVRecord proto.InternalMessageInfo

func (m *SharedKVRecord) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SharedKVRecord) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *SharedKVRecord) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SharedKVRecordInfo struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Revision             string   `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharedKVRecordInfo) Reset()         { *m = SharedKVRecordInfo{} }
func (m *SharedKVRecordInfo) String() string { return proto.CompactTextString(m) }
func (*SharedKVRecordInfo) ProtoMessage()    {}
func (*SharedKVRecordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{1}
}
func (m *SharedKVRecordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharedKVRecordInfo.Unmarshal(m, b)
}
func (m *SharedKVRecordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharedKVRecordInfo.Marshal(b, m, deterministic)
}
func (dst *SharedKVRecordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharedKVRecordInfo.Merge(dst, src)
}
func (m *SharedKVRecordInfo) XXX_Size() int {
	return xxx_messageInfo_SharedKVRecordInfo.Size(m)
}
func (m *SharedKVRecordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SharedKVRecordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SharedKVRecordInfo proto.InternalMessageInfo

func (m *SharedKVRecordInfo) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SharedKVRecordInfo) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

type ListRecordsRequest struct {
	Prefix               string              `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	View                 ESharedKVRecordView `protobuf:"varint,2,opt,name=view,enum=axxonsoft.bl.config.ESharedKVRecordView" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListRecordsRequest) Reset()         { *m = ListRecordsRequest{} }
func (m *ListRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRecordsRequest) ProtoMessage()    {}
func (*ListRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{2}
}
func (m *ListRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecordsRequest.Unmarshal(m, b)
}
func (m *ListRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecordsRequest.Marshal(b, m, deterministic)
}
func (dst *ListRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecordsRequest.Merge(dst, src)
}
func (m *ListRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRecordsRequest.Size(m)
}
func (m *ListRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecordsRequest proto.InternalMessageInfo

func (m *ListRecordsRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListRecordsRequest) GetView() ESharedKVRecordView {
	if m != nil {
		return m.View
	}
	return ESharedKVRecordView_ESHKV_FULL
}

type ListRecordsResponse struct {
	Items                []*SharedKVRecord `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListRecordsResponse) Reset()         { *m = ListRecordsResponse{} }
func (m *ListRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRecordsResponse) ProtoMessage()    {}
func (*ListRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{3}
}
func (m *ListRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecordsResponse.Unmarshal(m, b)
}
func (m *ListRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *ListRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecordsResponse.Merge(dst, src)
}
func (m *ListRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRecordsResponse.Size(m)
}
func (m *ListRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecordsResponse proto.InternalMessageInfo

func (m *ListRecordsResponse) GetItems() []*SharedKVRecord {
	if m != nil {
		return m.Items
	}
	return nil
}

type BatchGetRecordsRequest struct {
	Prefix               string                `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	View                 ESharedKVRecordView   `protobuf:"varint,2,opt,name=view,enum=axxonsoft.bl.config.ESharedKVRecordView" json:"view,omitempty"`
	Items                []*SharedKVRecordInfo `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BatchGetRecordsRequest) Reset()         { *m = BatchGetRecordsRequest{} }
func (m *BatchGetRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetRecordsRequest) ProtoMessage()    {}
func (*BatchGetRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{4}
}
func (m *BatchGetRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetRecordsRequest.Unmarshal(m, b)
}
func (m *BatchGetRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetRecordsRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetRecordsRequest.Merge(dst, src)
}
func (m *BatchGetRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetRecordsRequest.Size(m)
}
func (m *BatchGetRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetRecordsRequest proto.InternalMessageInfo

func (m *BatchGetRecordsRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *BatchGetRecordsRequest) GetView() ESharedKVRecordView {
	if m != nil {
		return m.View
	}
	return ESharedKVRecordView_ESHKV_FULL
}

func (m *BatchGetRecordsRequest) GetItems() []*SharedKVRecordInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

type BatchGetRecordsResponse struct {
	Items                []*SharedKVRecord `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BatchGetRecordsResponse) Reset()         { *m = BatchGetRecordsResponse{} }
func (m *BatchGetRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetRecordsResponse) ProtoMessage()    {}
func (*BatchGetRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{5}
}
func (m *BatchGetRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetRecordsResponse.Unmarshal(m, b)
}
func (m *BatchGetRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetRecordsResponse.Merge(dst, src)
}
func (m *BatchGetRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetRecordsResponse.Size(m)
}
func (m *BatchGetRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetRecordsResponse proto.InternalMessageInfo

func (m *BatchGetRecordsResponse) GetItems() []*SharedKVRecord {
	if m != nil {
		return m.Items
	}
	return nil
}

type SharedKVCommitRequest struct {
	Prefix               string                `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	Set                  []*SharedKVRecord     `protobuf:"bytes,2,rep,name=set" json:"set,omitempty"`
	Removed              []*SharedKVRecordInfo `protobuf:"bytes,3,rep,name=removed" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SharedKVCommitRequest) Reset()         { *m = SharedKVCommitRequest{} }
func (m *SharedKVCommitRequest) String() string { return proto.CompactTextString(m) }
func (*SharedKVCommitRequest) ProtoMessage()    {}
func (*SharedKVCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{6}
}
func (m *SharedKVCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharedKVCommitRequest.Unmarshal(m, b)
}
func (m *SharedKVCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharedKVCommitRequest.Marshal(b, m, deterministic)
}
func (dst *SharedKVCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharedKVCommitRequest.Merge(dst, src)
}
func (m *SharedKVCommitRequest) XXX_Size() int {
	return xxx_messageInfo_SharedKVCommitRequest.Size(m)
}
func (m *SharedKVCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SharedKVCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SharedKVCommitRequest proto.InternalMessageInfo

func (m *SharedKVCommitRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *SharedKVCommitRequest) GetSet() []*SharedKVRecord {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *SharedKVCommitRequest) GetRemoved() []*SharedKVRecordInfo {
	if m != nil {
		return m.Removed
	}
	return nil
}

type SharedKVCommitResponse struct {
	ErrorCode            SharedKVCommitResponse_EErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,enum=axxonsoft.bl.config.SharedKVCommitResponse_EErrorCode" json:"error_code,omitempty"`
	Updated              []*SharedKVRecordInfo             `protobuf:"bytes,2,rep,name=updated" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SharedKVCommitResponse) Reset()         { *m = SharedKVCommitResponse{} }
func (m *SharedKVCommitResponse) String() string { return proto.CompactTextString(m) }
func (*SharedKVCommitResponse) ProtoMessage()    {}
func (*SharedKVCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422, []int{7}
}
func (m *SharedKVCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharedKVCommitResponse.Unmarshal(m, b)
}
func (m *SharedKVCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharedKVCommitResponse.Marshal(b, m, deterministic)
}
func (dst *SharedKVCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharedKVCommitResponse.Merge(dst, src)
}
func (m *SharedKVCommitResponse) XXX_Size() int {
	return xxx_messageInfo_SharedKVCommitResponse.Size(m)
}
func (m *SharedKVCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SharedKVCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SharedKVCommitResponse proto.InternalMessageInfo

func (m *SharedKVCommitResponse) GetErrorCode() SharedKVCommitResponse_EErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return SharedKVCommitResponse_EOK
}

func (m *SharedKVCommitResponse) GetUpdated() []*SharedKVRecordInfo {
	if m != nil {
		return m.Updated
	}
	return nil
}

func init() {
	proto.RegisterType((*SharedKVRecord)(nil), "axxonsoft.bl.config.SharedKVRecord")
	proto.RegisterType((*SharedKVRecordInfo)(nil), "axxonsoft.bl.config.SharedKVRecordInfo")
	proto.RegisterType((*ListRecordsRequest)(nil), "axxonsoft.bl.config.ListRecordsRequest")
	proto.RegisterType((*ListRecordsResponse)(nil), "axxonsoft.bl.config.ListRecordsResponse")
	proto.RegisterType((*BatchGetRecordsRequest)(nil), "axxonsoft.bl.config.BatchGetRecordsRequest")
	proto.RegisterType((*BatchGetRecordsResponse)(nil), "axxonsoft.bl.config.BatchGetRecordsResponse")
	proto.RegisterType((*SharedKVCommitRequest)(nil), "axxonsoft.bl.config.SharedKVCommitRequest")
	proto.RegisterType((*SharedKVCommitResponse)(nil), "axxonsoft.bl.config.SharedKVCommitResponse")
	proto.RegisterEnum("axxonsoft.bl.config.ESharedKVRecordView", ESharedKVRecordView_name, ESharedKVRecordView_value)
	proto.RegisterEnum("axxonsoft.bl.config.SharedKVCommitResponse_EErrorCode", SharedKVCommitResponse_EErrorCode_name, SharedKVCommitResponse_EErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SharedKVStorageService service

type SharedKVStorageServiceClient interface {
	ListRecords(ctx context.Context, in *ListRecordsRequest, opts ...grpc.CallOption) (*ListRecordsResponse, error)
	BatchGetRecords(ctx context.Context, in *BatchGetRecordsRequest, opts ...grpc.CallOption) (*BatchGetRecordsResponse, error)
	Commit(ctx context.Context, in *SharedKVCommitRequest, opts ...grpc.CallOption) (*SharedKVCommitResponse, error)
}

type sharedKVStorageServiceClient struct {
	cc *grpc.ClientConn
}

func NewSharedKVStorageServiceClient(cc *grpc.ClientConn) SharedKVStorageServiceClient {
	return &sharedKVStorageServiceClient{cc}
}

func (c *sharedKVStorageServiceClient) ListRecords(ctx context.Context, in *ListRecordsRequest, opts ...grpc.CallOption) (*ListRecordsResponse, error) {
	out := new(ListRecordsResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.config.SharedKVStorageService/ListRecords", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sharedKVStorageServiceClient) BatchGetRecords(ctx context.Context, in *BatchGetRecordsRequest, opts ...grpc.CallOption) (*BatchGetRecordsResponse, error) {
	out := new(BatchGetRecordsResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.config.SharedKVStorageService/BatchGetRecords", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sharedKVStorageServiceClient) Commit(ctx context.Context, in *SharedKVCommitRequest, opts ...grpc.CallOption) (*SharedKVCommitResponse, error) {
	out := new(SharedKVCommitResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.config.SharedKVStorageService/Commit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SharedKVStorageService service

type SharedKVStorageServiceServer interface {
	ListRecords(context.Context, *ListRecordsRequest) (*ListRecordsResponse, error)
	BatchGetRecords(context.Context, *BatchGetRecordsRequest) (*BatchGetRecordsResponse, error)
	Commit(context.Context, *SharedKVCommitRequest) (*SharedKVCommitResponse, error)
}

func RegisterSharedKVStorageServiceServer(s *grpc.Server, srv SharedKVStorageServiceServer) {
	s.RegisterService(&_SharedKVStorageService_serviceDesc, srv)
}

func _SharedKVStorageService_ListRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SharedKVStorageServiceServer).ListRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.config.SharedKVStorageService/ListRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SharedKVStorageServiceServer).ListRecords(ctx, req.(*ListRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SharedKVStorageService_BatchGetRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SharedKVStorageServiceServer).BatchGetRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.config.SharedKVStorageService/BatchGetRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SharedKVStorageServiceServer).BatchGetRecords(ctx, req.(*BatchGetRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SharedKVStorageService_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SharedKVCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SharedKVStorageServiceServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.config.SharedKVStorageService/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SharedKVStorageServiceServer).Commit(ctx, req.(*SharedKVCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SharedKVStorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.config.SharedKVStorageService",
	HandlerType: (*SharedKVStorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRecords",
			Handler:    _SharedKVStorageService_ListRecords_Handler,
		},
		{
			MethodName: "BatchGetRecords",
			Handler:    _SharedKVStorageService_BatchGetRecords_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _SharedKVStorageService_Commit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "axxonsoft/bl/config/SharedKeyValueStorage.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/config/SharedKeyValueStorage.proto", fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422)
}

var fileDescriptor_SharedKeyValueStorage_4cd59e5b3634a422 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x5f, 0x6f, 0xd2, 0x50,
	0x14, 0x5f, 0xa9, 0x63, 0x72, 0xa6, 0x48, 0x0e, 0x8a, 0x84, 0x27, 0xec, 0x4c, 0x24, 0x9b, 0x29,
	0x09, 0x46, 0x93, 0x25, 0xfa, 0x30, 0xb0, 0xea, 0x02, 0x89, 0xa4, 0x30, 0x1e, 0x7c, 0x99, 0xa5,
	0x3d, 0xb0, 0xeb, 0xa0, 0x17, 0x6f, 0x2f, 0x8c, 0x7d, 0x24, 0x1f, 0xfc, 0x24, 0x7e, 0x01, 0x3f,
	0x8e, 0xe9, 0x1f, 0x36, 0x3b, 0x1a, 0x57, 0x62, 0xb2, 0xb7, 0x7b, 0xda, 0xfb, 0xfb, 0x73, 0xce,
	0x3d, 0xe7, 0x40, 0xdd, 0x5a, 0x2e, 0xb9, 0xeb, 0xf1, 0x91, 0xac, 0x0f, 0x27, 0x75, 0x9b, 0xbb,
	0x23, 0x36, 0xae, 0xf7, 0xce, 0x2c, 0x41, 0x4e, 0x9b, 0x2e, 0x07, 0xd6, 0x64, 0x4e, 0x3d, 0xc9,
	0x85, 0x35, 0x26, 0x7d, 0x26, 0xb8, 0xe4, 0x58, 0xbc, 0x02, 0xe8, 0xc3, 0x89, 0x1e, 0x02, 0xb4,
	0x3e, 0xe4, 0x23, 0xcc, 0xc0, 0x24, 0x9b, 0x0b, 0x07, 0x0b, 0xa0, 0x9e, 0xd3, 0x65, 0x59, 0xa9,
	0x2a, 0xb5, 0x9c, 0xe9, 0x1f, 0xb1, 0x02, 0xf7, 0x05, 0x2d, 0x98, 0xc7, 0xb8, 0x5b, 0xce, 0x04,
	0x9f, 0xaf, 0x62, 0x7c, 0x0c, 0xdb, 0x0b, 0x5f, 0xaa, 0xac, 0x56, 0x95, 0xda, 0x03, 0x33, 0x0c,
	0xb4, 0x26, 0x60, 0x9c, 0xf5, 0xd8, 0x1d, 0xf1, 0xcd, 0x98, 0xb5, 0x6f, 0x80, 0x1d, 0xe6, 0xc9,
	0x10, 0xef, 0x99, 0xf4, 0x7d, 0x4e, 0x9e, 0xc4, 0x12, 0x64, 0x67, 0x82, 0x46, 0x6c, 0x19, 0xd1,
	0x44, 0x11, 0xbe, 0x85, 0x7b, 0x0b, 0x46, 0x17, 0x01, 0x4b, 0xbe, 0x51, 0xd3, 0x13, 0x72, 0xd5,
	0x8d, 0xb8, 0xa7, 0x01, 0xa3, 0x0b, 0x33, 0x40, 0x69, 0x5d, 0x28, 0xc6, 0xb4, 0xbc, 0x19, 0x77,
	0x3d, 0xc2, 0x43, 0xd8, 0x66, 0x92, 0xa6, 0x5e, 0x59, 0xa9, 0xaa, 0xb5, 0xdd, 0xc6, 0x5e, 0x22,
	0x6b, 0x9c, 0xd4, 0x0c, 0x11, 0xda, 0x4f, 0x05, 0x4a, 0x4d, 0x4b, 0xda, 0x67, 0x1f, 0xe9, 0x4e,
	0x52, 0xc0, 0x77, 0x2b, 0xaf, 0x6a, 0xe0, 0xf5, 0x45, 0x0a, 0xaf, 0xfe, 0xa3, 0xac, 0xfc, 0xf6,
	0xe1, 0xe9, 0x9a, 0xdd, 0xff, 0xaf, 0xc2, 0x0f, 0x05, 0x9e, 0xac, 0xfe, 0xb4, 0xf8, 0x74, 0xca,
	0xe4, 0x6d, 0x45, 0x78, 0x0d, 0xaa, 0x47, 0xb2, 0x9c, 0x49, 0x2f, 0xe5, 0xdf, 0xc7, 0x23, 0xd8,
	0x11, 0x34, 0xe5, 0x0b, 0x72, 0x36, 0xcd, 0x7f, 0x85, 0xd3, 0x7e, 0x2b, 0x50, 0xba, 0xe9, 0x35,
	0xaa, 0xc0, 0x09, 0x00, 0x09, 0xc1, 0xc5, 0xa9, 0xcd, 0x1d, 0x0a, 0x0c, 0xe7, 0x1b, 0x6f, 0xfe,
	0x29, 0x10, 0x27, 0xd0, 0x0d, 0xc3, 0x87, 0xb7, 0xb8, 0x43, 0x66, 0x8e, 0x56, 0x47, 0xdf, 0xf4,
	0x7c, 0xe6, 0x58, 0x92, 0x9c, 0x28, 0xdf, 0xf4, 0xa6, 0x23, 0x9c, 0xf6, 0x1c, 0xe0, 0x9a, 0x1b,
	0x77, 0x40, 0x35, 0x3e, 0xb7, 0x0b, 0x5b, 0xf8, 0x10, 0x72, 0x46, 0x8b, 0xbb, 0xa3, 0x09, 0xb3,
	0x65, 0x41, 0xd9, 0x3f, 0x84, 0x62, 0x42, 0xe3, 0x60, 0x1e, 0xc0, 0xe8, 0x7d, 0x6a, 0x0f, 0x4e,
	0x3f, 0x9c, 0x74, 0x3a, 0x85, 0x2d, 0x44, 0xc8, 0x87, 0x71, 0xaf, 0x6f, 0x1e, 0x77, 0xbb, 0xc6,
	0xfb, 0x82, 0xd2, 0xf8, 0x95, 0xb9, 0xae, 0x4a, 0xb4, 0x4e, 0x7a, 0x24, 0x16, 0xcc, 0x26, 0xfc,
	0x0a, 0xbb, 0x7f, 0x0d, 0x0d, 0x26, 0x9b, 0x5f, 0x1f, 0xe1, 0x4a, 0xed, 0xf6, 0x8b, 0x51, 0xdd,
	0x27, 0xf0, 0xe8, 0x46, 0x53, 0xe2, 0x41, 0x22, 0x38, 0x79, 0xd2, 0x2a, 0x2f, 0xd3, 0x5d, 0x8e,
	0xd4, 0x2c, 0xc8, 0x86, 0xcf, 0x86, 0xfb, 0xa9, 0xde, 0x36, 0xd4, 0x38, 0xd8, 0xa0, 0x0f, 0x9a,
	0x7b, 0x5f, 0x9e, 0x0d, 0x99, 0x1c, 0xce, 0xed, 0x73, 0x92, 0x3a, 0x17, 0xe3, 0xfa, 0xd1, 0xfa,
	0x0e, 0x1f, 0x66, 0x83, 0x75, 0xfd, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0x40, 0xc2,
	0xf2, 0xe1, 0x05, 0x00, 0x00,
}
