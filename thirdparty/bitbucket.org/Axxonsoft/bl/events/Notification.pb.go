// Code generated by protoc-gen-go. DO NOT EDIT.
// source: axxonsoft/bl/events/Notification.proto

package events // import "bitbucket.org/Axxonsoft/bl/events"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import _ "google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventFilter struct {
	// Specifies required event type
	EventType EEventType `protobuf:"varint,1,opt,name=event_type,json=eventType,enum=axxonsoft.bl.events.EEventType" json:"event_type,omitempty"`
	// Associated object service name, binding or association
	Subject              string   `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventFilter) Reset()         { *m = EventFilter{} }
func (m *EventFilter) String() string { return proto.CompactTextString(m) }
func (*EventFilter) ProtoMessage()    {}
func (*EventFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{0}
}
func (m *EventFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventFilter.Unmarshal(m, b)
}
func (m *EventFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventFilter.Marshal(b, m, deterministic)
}
func (dst *EventFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventFilter.Merge(dst, src)
}
func (m *EventFilter) XXX_Size() int {
	return xxx_messageInfo_EventFilter.Size(m)
}
func (m *EventFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EventFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EventFilter proto.InternalMessageInfo

func (m *EventFilter) GetEventType() EEventType {
	if m != nil {
		return m.EventType
	}
	return EEventType_EEventType_UNSPECIFIED
}

func (m *EventFilter) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type Event struct {
	EventType EEventType `protobuf:"varint,1,opt,name=event_type,json=eventType,enum=axxonsoft.bl.events.EEventType" json:"event_type,omitempty"`
	Subject   string     `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	// TODO: is it better to use generic event type with key-value fields instead of any
	Body                 *any.Any `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Subjects             []string `protobuf:"bytes,4,rep,name=subjects" json:"subjects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{1}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventType() EEventType {
	if m != nil {
		return m.EventType
	}
	return EEventType_EEventType_UNSPECIFIED
}

func (m *Event) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Event) GetBody() *any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Event) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

type Events struct {
	Items                []*Event `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Events) Reset()         { *m = Events{} }
func (m *Events) String() string { return proto.CompactTextString(m) }
func (*Events) ProtoMessage()    {}
func (*Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{2}
}
func (m *Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Events.Unmarshal(m, b)
}
func (m *Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Events.Marshal(b, m, deterministic)
}
func (dst *Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Events.Merge(dst, src)
}
func (m *Events) XXX_Size() int {
	return xxx_messageInfo_Events.Size(m)
}
func (m *Events) XXX_DiscardUnknown() {
	xxx_messageInfo_Events.DiscardUnknown(m)
}

var xxx_messageInfo_Events proto.InternalMessageInfo

func (m *Events) GetItems() []*Event {
	if m != nil {
		return m.Items
	}
	return nil
}

type CacheableEvent struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	IsRetransmit         bool     `protobuf:"varint,2,opt,name=is_retransmit,json=isRetransmit" json:"is_retransmit,omitempty"`
	IsTransient          bool     `protobuf:"varint,3,opt,name=is_transient,json=isTransient" json:"is_transient,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheableEvent) Reset()         { *m = CacheableEvent{} }
func (m *CacheableEvent) String() string { return proto.CompactTextString(m) }
func (*CacheableEvent) ProtoMessage()    {}
func (*CacheableEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{3}
}
func (m *CacheableEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheableEvent.Unmarshal(m, b)
}
func (m *CacheableEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheableEvent.Marshal(b, m, deterministic)
}
func (dst *CacheableEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheableEvent.Merge(dst, src)
}
func (m *CacheableEvent) XXX_Size() int {
	return xxx_messageInfo_CacheableEvent.Size(m)
}
func (m *CacheableEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheableEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CacheableEvent proto.InternalMessageInfo

func (m *CacheableEvent) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *CacheableEvent) GetIsRetransmit() bool {
	if m != nil {
		return m.IsRetransmit
	}
	return false
}

func (m *CacheableEvent) GetIsTransient() bool {
	if m != nil {
		return m.IsTransient
	}
	return false
}

func (m *CacheableEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RenewCachedEvent struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	IsTransient          bool     `protobuf:"varint,2,opt,name=is_transient,json=isTransient" json:"is_transient,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Original             *Event   `protobuf:"bytes,4,opt,name=original" json:"original,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewCachedEvent) Reset()         { *m = RenewCachedEvent{} }
func (m *RenewCachedEvent) String() string { return proto.CompactTextString(m) }
func (*RenewCachedEvent) ProtoMessage()    {}
func (*RenewCachedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{4}
}
func (m *RenewCachedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewCachedEvent.Unmarshal(m, b)
}
func (m *RenewCachedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewCachedEvent.Marshal(b, m, deterministic)
}
func (dst *RenewCachedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewCachedEvent.Merge(dst, src)
}
func (m *RenewCachedEvent) XXX_Size() int {
	return xxx_messageInfo_RenewCachedEvent.Size(m)
}
func (m *RenewCachedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewCachedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RenewCachedEvent proto.InternalMessageInfo

func (m *RenewCachedEvent) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *RenewCachedEvent) GetIsTransient() bool {
	if m != nil {
		return m.IsTransient
	}
	return false
}

func (m *RenewCachedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RenewCachedEvent) GetOriginal() *Event {
	if m != nil {
		return m.Original
	}
	return nil
}

type WithdrawCachedEvent struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawCachedEvent) Reset()         { *m = WithdrawCachedEvent{} }
func (m *WithdrawCachedEvent) String() string { return proto.CompactTextString(m) }
func (*WithdrawCachedEvent) ProtoMessage()    {}
func (*WithdrawCachedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{5}
}
func (m *WithdrawCachedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawCachedEvent.Unmarshal(m, b)
}
func (m *WithdrawCachedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawCachedEvent.Marshal(b, m, deterministic)
}
func (dst *WithdrawCachedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawCachedEvent.Merge(dst, src)
}
func (m *WithdrawCachedEvent) XXX_Size() int {
	return xxx_messageInfo_WithdrawCachedEvent.Size(m)
}
func (m *WithdrawCachedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawCachedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawCachedEvent proto.InternalMessageInfo

func (m *WithdrawCachedEvent) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *WithdrawCachedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EventFilters struct {
	//  Initial filters list.
	Include              []*EventFilter `protobuf:"bytes,1,rep,name=include" json:"include,omitempty"`
	Exclude              []*EventFilter `protobuf:"bytes,2,rep,name=exclude" json:"exclude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EventFilters) Reset()         { *m = EventFilters{} }
func (m *EventFilters) String() string { return proto.CompactTextString(m) }
func (*EventFilters) ProtoMessage()    {}
func (*EventFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{6}
}
func (m *EventFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventFilters.Unmarshal(m, b)
}
func (m *EventFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventFilters.Marshal(b, m, deterministic)
}
func (dst *EventFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventFilters.Merge(dst, src)
}
func (m *EventFilters) XXX_Size() int {
	return xxx_messageInfo_EventFilters.Size(m)
}
func (m *EventFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_EventFilters.DiscardUnknown(m)
}

var xxx_messageInfo_EventFilters proto.InternalMessageInfo

func (m *EventFilters) GetInclude() []*EventFilter {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *EventFilters) GetExclude() []*EventFilter {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type PullEventsRequest struct {
	// Unique id provided by client. Using this id
	// client can adjust events filter list on-the-fly.
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId" json:"subscription_id,omitempty"`
	//  Initial filters list.
	Filters              *EventFilters `protobuf:"bytes,2,opt,name=filters" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PullEventsRequest) Reset()         { *m = PullEventsRequest{} }
func (m *PullEventsRequest) String() string { return proto.CompactTextString(m) }
func (*PullEventsRequest) ProtoMessage()    {}
func (*PullEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{7}
}
func (m *PullEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullEventsRequest.Unmarshal(m, b)
}
func (m *PullEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullEventsRequest.Marshal(b, m, deterministic)
}
func (dst *PullEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullEventsRequest.Merge(dst, src)
}
func (m *PullEventsRequest) XXX_Size() int {
	return xxx_messageInfo_PullEventsRequest.Size(m)
}
func (m *PullEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullEventsRequest proto.InternalMessageInfo

func (m *PullEventsRequest) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *PullEventsRequest) GetFilters() *EventFilters {
	if m != nil {
		return m.Filters
	}
	return nil
}

type UpdateSubscriptionRequest struct {
	// Id of event stream
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId" json:"subscription_id,omitempty"`
	//  New filters list.
	Filters              *EventFilters `protobuf:"bytes,2,opt,name=filters" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateSubscriptionRequest) Reset()         { *m = UpdateSubscriptionRequest{} }
func (m *UpdateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscriptionRequest) ProtoMessage()    {}
func (*UpdateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{8}
}
func (m *UpdateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscriptionRequest.Unmarshal(m, b)
}
func (m *UpdateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscriptionRequest.Merge(dst, src)
}
func (m *UpdateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscriptionRequest.Size(m)
}
func (m *UpdateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscriptionRequest proto.InternalMessageInfo

func (m *UpdateSubscriptionRequest) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *UpdateSubscriptionRequest) GetFilters() *EventFilters {
	if m != nil {
		return m.Filters
	}
	return nil
}

type DisconnectEventChannelRequest struct {
	// Id of event stream
	SubscriptionId       string   `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectEventChannelRequest) Reset()         { *m = DisconnectEventChannelRequest{} }
func (m *DisconnectEventChannelRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectEventChannelRequest) ProtoMessage()    {}
func (*DisconnectEventChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{9}
}
func (m *DisconnectEventChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectEventChannelRequest.Unmarshal(m, b)
}
func (m *DisconnectEventChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectEventChannelRequest.Marshal(b, m, deterministic)
}
func (dst *DisconnectEventChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectEventChannelRequest.Merge(dst, src)
}
func (m *DisconnectEventChannelRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectEventChannelRequest.Size(m)
}
func (m *DisconnectEventChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectEventChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectEventChannelRequest proto.InternalMessageInfo

func (m *DisconnectEventChannelRequest) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

// TODO: consult design guide. Should we use empty type instead of this
type UpdateSubscriptionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSubscriptionResponse) Reset()         { *m = UpdateSubscriptionResponse{} }
func (m *UpdateSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscriptionResponse) ProtoMessage()    {}
func (*UpdateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{10}
}
func (m *UpdateSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscriptionResponse.Unmarshal(m, b)
}
func (m *UpdateSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscriptionResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscriptionResponse.Merge(dst, src)
}
func (m *UpdateSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscriptionResponse.Size(m)
}
func (m *UpdateSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscriptionResponse proto.InternalMessageInfo

type DisconnectEventChannelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectEventChannelResponse) Reset()         { *m = DisconnectEventChannelResponse{} }
func (m *DisconnectEventChannelResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectEventChannelResponse) ProtoMessage()    {}
func (*DisconnectEventChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Notification_5ad2c39757059f05, []int{11}
}
func (m *DisconnectEventChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectEventChannelResponse.Unmarshal(m, b)
}
func (m *DisconnectEventChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectEventChannelResponse.Marshal(b, m, deterministic)
}
func (dst *DisconnectEventChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectEventChannelResponse.Merge(dst, src)
}
func (m *DisconnectEventChannelResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectEventChannelResponse.Size(m)
}
func (m *DisconnectEventChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectEventChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectEventChannelResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EventFilter)(nil), "axxonsoft.bl.events.EventFilter")
	proto.RegisterType((*Event)(nil), "axxonsoft.bl.events.Event")
	proto.RegisterType((*Events)(nil), "axxonsoft.bl.events.Events")
	proto.RegisterType((*CacheableEvent)(nil), "axxonsoft.bl.events.CacheableEvent")
	proto.RegisterType((*RenewCachedEvent)(nil), "axxonsoft.bl.events.RenewCachedEvent")
	proto.RegisterType((*WithdrawCachedEvent)(nil), "axxonsoft.bl.events.WithdrawCachedEvent")
	proto.RegisterType((*EventFilters)(nil), "axxonsoft.bl.events.EventFilters")
	proto.RegisterType((*PullEventsRequest)(nil), "axxonsoft.bl.events.PullEventsRequest")
	proto.RegisterType((*UpdateSubscriptionRequest)(nil), "axxonsoft.bl.events.UpdateSubscriptionRequest")
	proto.RegisterType((*DisconnectEventChannelRequest)(nil), "axxonsoft.bl.events.DisconnectEventChannelRequest")
	proto.RegisterType((*UpdateSubscriptionResponse)(nil), "axxonsoft.bl.events.UpdateSubscriptionResponse")
	proto.RegisterType((*DisconnectEventChannelResponse)(nil), "axxonsoft.bl.events.DisconnectEventChannelResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DomainNotifier service

type DomainNotifierClient interface {
	PullEvents(ctx context.Context, in *PullEventsRequest, opts ...grpc.CallOption) (DomainNotifier_PullEventsClient, error)
	UpdateSubscription(ctx context.Context, in *UpdateSubscriptionRequest, opts ...grpc.CallOption) (*UpdateSubscriptionResponse, error)
	DisconnectEventChannel(ctx context.Context, in *DisconnectEventChannelRequest, opts ...grpc.CallOption) (*DisconnectEventChannelResponse, error)
}

type domainNotifierClient struct {
	cc *grpc.ClientConn
}

func NewDomainNotifierClient(cc *grpc.ClientConn) DomainNotifierClient {
	return &domainNotifierClient{cc}
}

func (c *domainNotifierClient) PullEvents(ctx context.Context, in *PullEventsRequest, opts ...grpc.CallOption) (DomainNotifier_PullEventsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DomainNotifier_serviceDesc.Streams[0], c.cc, "/axxonsoft.bl.events.DomainNotifier/PullEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &domainNotifierPullEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DomainNotifier_PullEventsClient interface {
	Recv() (*Events, error)
	grpc.ClientStream
}

type domainNotifierPullEventsClient struct {
	grpc.ClientStream
}

func (x *domainNotifierPullEventsClient) Recv() (*Events, error) {
	m := new(Events)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *domainNotifierClient) UpdateSubscription(ctx context.Context, in *UpdateSubscriptionRequest, opts ...grpc.CallOption) (*UpdateSubscriptionResponse, error) {
	out := new(UpdateSubscriptionResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.events.DomainNotifier/UpdateSubscription", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainNotifierClient) DisconnectEventChannel(ctx context.Context, in *DisconnectEventChannelRequest, opts ...grpc.CallOption) (*DisconnectEventChannelResponse, error) {
	out := new(DisconnectEventChannelResponse)
	err := grpc.Invoke(ctx, "/axxonsoft.bl.events.DomainNotifier/DisconnectEventChannel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DomainNotifier service

type DomainNotifierServer interface {
	PullEvents(*PullEventsRequest, DomainNotifier_PullEventsServer) error
	UpdateSubscription(context.Context, *UpdateSubscriptionRequest) (*UpdateSubscriptionResponse, error)
	DisconnectEventChannel(context.Context, *DisconnectEventChannelRequest) (*DisconnectEventChannelResponse, error)
}

func RegisterDomainNotifierServer(s *grpc.Server, srv DomainNotifierServer) {
	s.RegisterService(&_DomainNotifier_serviceDesc, srv)
}

func _DomainNotifier_PullEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DomainNotifierServer).PullEvents(m, &domainNotifierPullEventsServer{stream})
}

type DomainNotifier_PullEventsServer interface {
	Send(*Events) error
	grpc.ServerStream
}

type domainNotifierPullEventsServer struct {
	grpc.ServerStream
}

func (x *domainNotifierPullEventsServer) Send(m *Events) error {
	return x.ServerStream.SendMsg(m)
}

func _DomainNotifier_UpdateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainNotifierServer).UpdateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.events.DomainNotifier/UpdateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainNotifierServer).UpdateSubscription(ctx, req.(*UpdateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DomainNotifier_DisconnectEventChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectEventChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainNotifierServer).DisconnectEventChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/axxonsoft.bl.events.DomainNotifier/DisconnectEventChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainNotifierServer).DisconnectEventChannel(ctx, req.(*DisconnectEventChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DomainNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "axxonsoft.bl.events.DomainNotifier",
	HandlerType: (*DomainNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateSubscription",
			Handler:    _DomainNotifier_UpdateSubscription_Handler,
		},
		{
			MethodName: "DisconnectEventChannel",
			Handler:    _DomainNotifier_DisconnectEventChannel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullEvents",
			Handler:       _DomainNotifier_PullEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "axxonsoft/bl/events/Notification.proto",
}

func init() {
	proto.RegisterFile("axxonsoft/bl/events/Notification.proto", fileDescriptor_Notification_5ad2c39757059f05)
}

var fileDescriptor_Notification_5ad2c39757059f05 = []byte{
	// 679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xd5, 0x24, 0xfd, 0x49, 0x6e, 0xfa, 0xe5, 0xeb, 0x37, 0xfd, 0x84, 0x52, 0x53, 0xa8, 0xe3,
	0x8a, 0x12, 0x55, 0xc8, 0x2e, 0xa9, 0x04, 0x52, 0x90, 0x90, 0x4a, 0x5b, 0x04, 0x1b, 0x84, 0x4c,
	0x11, 0x12, 0x9b, 0x68, 0x6c, 0x4f, 0xd2, 0x01, 0x77, 0x26, 0x78, 0xc6, 0xa5, 0xe9, 0xae, 0x2c,
	0xd8, 0xb2, 0xe0, 0x11, 0x58, 0xf0, 0x06, 0xbc, 0x08, 0xaf, 0xc0, 0x83, 0xa0, 0xcc, 0xd8, 0x21,
	0xa2, 0x4e, 0x7f, 0x16, 0xb0, 0xb2, 0xef, 0xf8, 0x9c, 0x7b, 0xce, 0xb9, 0xd7, 0x71, 0x60, 0x9d,
	0x1c, 0x1f, 0x0b, 0x2e, 0x45, 0x4f, 0x79, 0x41, 0xec, 0xd1, 0x23, 0xca, 0x95, 0xf4, 0x9e, 0x09,
	0xc5, 0x7a, 0x2c, 0x24, 0x8a, 0x09, 0xee, 0x0e, 0x12, 0xa1, 0x04, 0x5e, 0x1a, 0xe3, 0xdc, 0x20,
	0x76, 0x0d, 0xce, 0x5a, 0xee, 0x0b, 0xd1, 0x8f, 0xa9, 0xa7, 0x21, 0x41, 0xda, 0xf3, 0x08, 0x1f,
	0x1a, 0xbc, 0xb5, 0x92, 0x3d, 0x22, 0x03, 0xe6, 0x11, 0xce, 0x85, 0xd2, 0xcd, 0x64, 0xf6, 0xd4,
	0x2e, 0x52, 0xdd, 0xd3, 0x17, 0x83, 0x70, 0xfa, 0x50, 0xd3, 0xf5, 0x63, 0x16, 0x2b, 0x9a, 0xe0,
	0x87, 0x00, 0x1a, 0xd5, 0x55, 0xc3, 0x01, 0x6d, 0x20, 0x1b, 0xb5, 0xea, 0xed, 0x55, 0xb7, 0xc0,
	0x93, 0xbb, 0xa7, 0x69, 0xfb, 0xc3, 0x01, 0xf5, 0xab, 0x34, 0xbf, 0xc5, 0x0d, 0x98, 0x97, 0x69,
	0xf0, 0x86, 0x86, 0xaa, 0x51, 0xb2, 0x51, 0xab, 0xea, 0xe7, 0xa5, 0xf3, 0x15, 0xc1, 0xac, 0xa6,
	0xfc, 0x39, 0x0d, 0xdc, 0x82, 0x99, 0x40, 0x44, 0xc3, 0x46, 0xd9, 0x46, 0xad, 0x5a, 0xfb, 0x7f,
	0xd7, 0xcc, 0xc6, 0xcd, 0xc7, 0xe6, 0x6e, 0xf3, 0xa1, 0xaf, 0x11, 0xd8, 0x82, 0x4a, 0x46, 0x92,
	0x8d, 0x19, 0xbb, 0xdc, 0xaa, 0xfa, 0xe3, 0xda, 0xe9, 0xc0, 0x9c, 0x19, 0x11, 0xde, 0x84, 0x59,
	0xa6, 0xe8, 0xa1, 0x6c, 0x20, 0xbb, 0xdc, 0xaa, 0xb5, 0xad, 0x62, 0x93, 0xa3, 0x8b, 0x6f, 0x80,
	0xce, 0x09, 0xd4, 0x77, 0x48, 0x78, 0x40, 0x49, 0x10, 0x53, 0x93, 0x76, 0x11, 0xca, 0x8a, 0xf4,
	0x75, 0xcc, 0xaa, 0x3f, 0xba, 0xc5, 0x6b, 0xf0, 0x0f, 0x93, 0xdd, 0x84, 0xaa, 0x84, 0x70, 0x79,
	0xc8, 0x4c, 0x8a, 0x8a, 0xbf, 0xc0, 0xa4, 0x3f, 0x3e, 0xc3, 0x4d, 0x58, 0x60, 0xb2, 0xab, 0x4b,
	0x46, 0xb9, 0xd2, 0x91, 0x2a, 0x7e, 0x8d, 0xc9, 0xfd, 0xfc, 0x08, 0xd7, 0xa1, 0xc4, 0xa2, 0xc6,
	0x8c, 0x6e, 0x5c, 0x62, 0x91, 0xf3, 0x09, 0xc1, 0xa2, 0x4f, 0x39, 0x7d, 0xaf, 0x1d, 0x44, 0xd3,
	0xe4, 0x7f, 0xef, 0x5c, 0x9a, 0xd6, 0xb9, 0x9c, 0x77, 0xc6, 0xf7, 0xa0, 0x22, 0x12, 0xd6, 0x67,
	0x9c, 0xc4, 0x5a, 0xef, 0xfc, 0x51, 0x8c, 0xb1, 0xce, 0x7d, 0x58, 0x7a, 0xc5, 0xd4, 0x41, 0x94,
	0x90, 0x0b, 0x3c, 0x19, 0xc1, 0xd2, 0x38, 0xca, 0x47, 0x04, 0x0b, 0x13, 0xaf, 0xa5, 0xc4, 0x1d,
	0x98, 0x67, 0x3c, 0x8c, 0xd3, 0x88, 0x66, 0xbb, 0xb0, 0xa7, 0x1b, 0x30, 0x1c, 0x3f, 0x27, 0x8c,
	0xb8, 0xf4, 0xd8, 0x70, 0x4b, 0x97, 0xe5, 0x66, 0x04, 0x67, 0x08, 0xff, 0x3d, 0x4f, 0xe3, 0xd8,
	0xbc, 0x0f, 0x3e, 0x7d, 0x97, 0x52, 0xa9, 0xf0, 0x6d, 0xf8, 0x57, 0xa6, 0x81, 0x0c, 0x13, 0x36,
	0x18, 0xfd, 0xd8, 0xba, 0x2c, 0xca, 0xb2, 0xd4, 0x27, 0x8f, 0x9f, 0x46, 0xf8, 0x01, 0xcc, 0xf7,
	0x4c, 0x00, 0x9d, 0xad, 0xd6, 0x6e, 0x5e, 0xa4, 0x2c, 0xfd, 0x9c, 0xe1, 0x9c, 0x22, 0x58, 0x7e,
	0x39, 0x88, 0x88, 0xa2, 0x2f, 0x26, 0xba, 0xfe, 0x5d, 0x0f, 0x4f, 0xe0, 0xc6, 0x2e, 0x93, 0xa1,
	0xe0, 0x9c, 0x86, 0x4a, 0x43, 0x76, 0x0e, 0x08, 0xe7, 0x34, 0xbe, 0xaa, 0x0d, 0x67, 0x05, 0xac,
	0xa2, 0x30, 0x72, 0x20, 0xb8, 0xa4, 0x8e, 0x0d, 0x37, 0xa7, 0xe9, 0x18, 0x44, 0xfb, 0x5b, 0x19,
	0xea, 0xbb, 0xe2, 0x90, 0x30, 0x6e, 0x3e, 0x9a, 0x34, 0xc1, 0x27, 0x00, 0xbf, 0x76, 0x83, 0xd7,
	0x0b, 0x63, 0x9d, 0x59, 0x9e, 0x75, 0x7d, 0x7a, 0x7c, 0xe9, 0xdc, 0xfa, 0xf0, 0xfd, 0xc7, 0xe7,
	0xd2, 0xaa, 0x63, 0x79, 0x47, 0x77, 0x3d, 0x9e, 0x09, 0x79, 0x93, 0x51, 0x64, 0x07, 0x6d, 0x6c,
	0x22, 0xfc, 0x05, 0x01, 0x3e, 0x9b, 0x07, 0xbb, 0x85, 0xcd, 0xa7, 0x6e, 0xd1, 0xf2, 0x2e, 0x8d,
	0xcf, 0x06, 0x75, 0x47, 0x1b, 0x5c, 0x77, 0x9a, 0xe7, 0x18, 0x4c, 0x35, 0xbd, 0x83, 0x36, 0xf0,
	0x29, 0x82, 0x6b, 0xc5, 0x73, 0xc5, 0xed, 0x42, 0xe5, 0x73, 0x97, 0x6d, 0x6d, 0x5d, 0x89, 0x63,
	0x1c, 0x3f, 0x5a, 0x7b, 0xdd, 0x0c, 0x98, 0x0a, 0xd2, 0xf0, 0x2d, 0x55, 0xae, 0x48, 0xfa, 0xde,
	0xf6, 0xd9, 0xbf, 0xa4, 0x60, 0x4e, 0x7f, 0xa2, 0xb7, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf6,
	0xda, 0xba, 0x21, 0x26, 0x07, 0x00, 0x00,
}
